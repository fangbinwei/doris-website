"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[67240],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||l;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const l={title:"UPDATE",language:"en"},o=void 0,s={unversionedId:"sql-reference/sql-statements/Data-Manipulation/UPDATE",id:"version-0.15/sql-reference/sql-statements/Data-Manipulation/UPDATE",title:"UPDATE",description:"\x3c!--",source:"@site/versioned_docs/version-0.15/sql-reference/sql-statements/Data-Manipulation/UPDATE.md",sourceDirName:"sql-reference/sql-statements/Data-Manipulation",slug:"/sql-reference/sql-statements/Data-Manipulation/UPDATE",permalink:"/docs/0.15/sql-reference/sql-statements/Data-Manipulation/UPDATE",draft:!1,tags:[],version:"0.15",frontMatter:{title:"UPDATE",language:"en"},sidebar:"docs",previous:{title:"INSERT",permalink:"/docs/0.15/sql-reference/sql-statements/Data-Manipulation/insert"},next:{title:"BIGINT",permalink:"/docs/0.15/sql-reference/sql-statements/Data-Types/BIGINT"}},i={},p=[{value:"description",id:"description",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Note",id:"note",level:3},{value:"example",id:"example",level:2},{value:"keyword",id:"keyword",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"update"},"UPDATE"),(0,a.kt)("h2",{id:"description"},"description"),(0,a.kt)("h3",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"UPDATE table_name \n    SET assignment_list\n    WHERE expression\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"table_name: The target table of the data to be updated. Can be in the form of 'db_name.table_name'"),(0,a.kt)("li",{parentName:"ul"},"assignment_list: The target column to be updated. Can be in the form of 'col_name = value, col_name = value'"),(0,a.kt)("li",{parentName:"ul"},"where expression: The condition to be updated is an expression that returns true or false")),(0,a.kt)("h3",{id:"note"},"Note"),(0,a.kt)("p",null,"The current UPDATE statement only supports row updates on the Unique model, and there may be data conflicts caused by concurrent updates.\nCurrently Doris does not deal with such problems, and users are required to avoid such problems from the business side."),(0,a.kt)("h2",{id:"example"},"example"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"test")," table is a unique model table, which contains four columns: k1, k2, v1, v2. Among them, k1, k2 are keys, v1, v2 are values, and the aggregation method is Replace."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Update the v1 column that satisfies the conditions k1 =1 and k2 = 2 in the'test' table to 1")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"UPDATE test SET v1 = 1 WHERE k1=1 and k2=2;\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Increment the v1 column of the column with k1=1 in the'test' table by 1")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"UPDATE test SET v1 = v1+1 WHERE k1=1;\n")),(0,a.kt)("h2",{id:"keyword"},"keyword"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"UPDATE\n")))}u.isMDXComponent=!0}}]);