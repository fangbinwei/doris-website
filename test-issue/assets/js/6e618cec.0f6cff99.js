"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[10110],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=m;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[d]="string"==typeof e?e:i,l[1]=a;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},56219:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={title:"time_round",language:"en"},l=void 0,a={unversionedId:"sql-reference/sql-functions/date-time-functions/time_round",id:"version-0.15/sql-reference/sql-functions/date-time-functions/time_round",title:"time_round",description:"\x3c!--",source:"@site/versioned_docs/version-0.15/sql-reference/sql-functions/date-time-functions/time_round.md",sourceDirName:"sql-reference/sql-functions/date-time-functions",slug:"/sql-reference/sql-functions/date-time-functions/time_round",permalink:"/docs/0.15/sql-reference/sql-functions/date-time-functions/time_round",draft:!1,tags:[],version:"0.15",frontMatter:{title:"time_round",language:"en"},sidebar:"docs",previous:{title:"Str_to_date",permalink:"/docs/0.15/sql-reference/sql-functions/date-time-functions/str_to_date"},next:{title:"timediff",permalink:"/docs/0.15/sql-reference/sql-functions/date-time-functions/timediff"}},p={},s=[{value:"description",id:"description",level:2},{value:"Syntax",id:"syntax",level:3},{value:"example",id:"example",level:2},{value:"keyword",id:"keyword",level:2}],c={toc:s};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"time_round"},"time_round"),(0,i.kt)("h2",{id:"description"},"description"),(0,i.kt)("h3",{id:"syntax"},"Syntax"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DATETIME TIME_ROUND(DATETIME expr)")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DATETIME TIME_ROUND(DATETIME expr, INT period)")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DATETIME TIME_ROUND(DATETIME expr, DATETIME origin)")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DATETIME TIME_ROUND(DATETIME expr, INT period, DATETIME origin)")),(0,i.kt)("p",null,"The function name ",(0,i.kt)("inlineCode",{parentName:"p"},"TIME_ROUND")," consists of two parts, Each part consists of the following optional values."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TIME"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"SECOND"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"MINUTE"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"HOUR"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"DAY"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"WEEK"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"MONTH"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"YEAR")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ROUND"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"FLOOR"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"CEIL"))),(0,i.kt)("p",null,"Returns the upper/lower bound of ",(0,i.kt)("inlineCode",{parentName:"p"},"expr"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"period")," specifies how many ",(0,i.kt)("inlineCode",{parentName:"li"},"TIME")," units, the default is ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"origin")," specifies the start time of the period, the default is ",(0,i.kt)("inlineCode",{parentName:"li"},"1970-01-01T00:00:00"),", the start time of ",(0,i.kt)("inlineCode",{parentName:"li"},"WEEK")," is Sunday, which is ",(0,i.kt)("inlineCode",{parentName:"li"},"1970-01-04T00:00:00"),". Could be larger than ",(0,i.kt)("inlineCode",{parentName:"li"},"expr"),"."),(0,i.kt)("li",{parentName:"ul"},"Please try to choose common ",(0,i.kt)("inlineCode",{parentName:"li"},"period"),", such as 3 ",(0,i.kt)("inlineCode",{parentName:"li"},"MONTH"),", 90 ",(0,i.kt)("inlineCode",{parentName:"li"},"MINUTE"),". If you set a uncommon ",(0,i.kt)("inlineCode",{parentName:"li"},"period"),", please also specify ",(0,i.kt)("inlineCode",{parentName:"li"},"origin"),".")),(0,i.kt)("h2",{id:"example"},"example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\nMySQL> SELECT YEAR_FLOOR('20200202000000');\n+------------------------------+\n| year_floor('20200202000000') |\n+------------------------------+\n| 2020-01-01 00:00:00          |\n+------------------------------+\n\n\nMySQL> SELECT MONTH_CEIL(CAST('2020-02-02 13:09:20' AS DATETIME), 3); --quarter\n+--------------------------------------------------------+\n| month_ceil(CAST('2020-02-02 13:09:20' AS DATETIME), 3) |\n+--------------------------------------------------------+\n| 2020-04-01 00:00:00                                    |\n+--------------------------------------------------------+\n\n\nMySQL> SELECT WEEK_CEIL('2020-02-02 13:09:20', '2020-01-06'); --monday\n+---------------------------------------------------------+\n| week_ceil('2020-02-02 13:09:20', '2020-01-06 00:00:00') |\n+---------------------------------------------------------+\n| 2020-02-03 00:00:00                                     |\n+---------------------------------------------------------+\n\n\nMySQL> SELECT MONTH_CEIL(CAST('2020-02-02 13:09:20' AS DATETIME), 3, CAST('1970-01-09 00:00:00' AS DATETIME)); --next rent day\n+-------------------------------------------------------------------------------------------------+\n| month_ceil(CAST('2020-02-02 13:09:20' AS DATETIME), 3, CAST('1970-01-09 00:00:00' AS DATETIME)) |\n+-------------------------------------------------------------------------------------------------+\n| 2020-04-09 00:00:00                                                                             |\n+-------------------------------------------------------------------------------------------------+\n\n")),(0,i.kt)("h2",{id:"keyword"},"keyword"),(0,i.kt)("p",null,"TIME_ROUND"))}d.isMDXComponent=!0}}]);