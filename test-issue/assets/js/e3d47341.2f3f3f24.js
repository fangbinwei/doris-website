"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[96167],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},25610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={title:"Table Schema Action",language:"en"},o=void 0,p={unversionedId:"admin-manual/http-actions/fe/table-schema-action",id:"version-dev/admin-manual/http-actions/fe/table-schema-action",title:"Table Schema Action",description:"\x3c!--",source:"@site/versioned_docs/version-dev/admin-manual/http-actions/fe/table-schema-action.md",sourceDirName:"admin-manual/http-actions/fe",slug:"/admin-manual/http-actions/fe/table-schema-action",permalink:"/docs/dev/admin-manual/http-actions/fe/table-schema-action",draft:!1,editUrl:"https://github.com/apache/doris/edit/master/docs/en/docs/admin-manual/http-actions/fe/table-schema-action.md",tags:[],version:"dev",frontMatter:{title:"Table Schema Action",language:"en"},sidebar:"docs",previous:{title:"System Action",permalink:"/docs/dev/admin-manual/http-actions/fe/system-action"},next:{title:"Show Meta Info Action",permalink:"/docs/dev/admin-manual/http-actions/fe/show-meta-info-action"}},l={},s=[{value:"Request",id:"request",level:2},{value:"Description",id:"description",level:2},{value:"Path parameters",id:"path-parameters",level:2},{value:"Query parameters",id:"query-parameters",level:2},{value:"Request body",id:"request-body",level:2},{value:"Response",id:"response",level:2},{value:"Examples",id:"examples",level:2}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"table-schema-action"},"Table Schema Action"),(0,r.kt)("h2",{id:"request"},"Request"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/<db>/<table>/_schema")),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"Used to obtain the table structure information of the specified table. This interface is currently used in Spark/Flink Doris Connector.  obtains Doris table structure information."),(0,r.kt)("h2",{id:"path-parameters"},"Path parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"<db>")),(0,r.kt)("p",{parentName:"li"},"  Specify database")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"<table>")),(0,r.kt)("p",{parentName:"li"},"  Specify table"))),(0,r.kt)("h2",{id:"query-parameters"},"Query parameters"),(0,r.kt)("p",null,"None"),(0,r.kt)("h2",{id:"request-body"},"Request body"),(0,r.kt)("p",null,"None"),(0,r.kt)("h2",{id:"response"},"Response"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The http interface returns as follows:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": "",\n            "aggregation_type":""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": "",\n            "aggregation_type":"MAX"\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The http v2 interface returns as follows:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": ""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": ""\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n')),(0,r.kt)("p",null,"Note: The difference is that the ",(0,r.kt)("inlineCode",{parentName:"p"},"http")," method returns more ",(0,r.kt)("inlineCode",{parentName:"p"},"aggregation_type")," fields than the ",(0,r.kt)("inlineCode",{parentName:"p"},"http v2")," method. The ",(0,r.kt)("inlineCode",{parentName:"p"},"http v2")," is enabled by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"enable_http_server_v2"),". For detailed parameter descriptions, see ",(0,r.kt)("a",{parentName:"p",href:"../../../config/fe-config"},"fe parameter settings")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get the table structure information of the specified table via http interface."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'GET /api/db1/tbl1/_schema\n\nResponse:\n{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": "",\n            "aggregation_type":""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": "",\n            "aggregation_type":"MAX"\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get the table structure information of the specified table via http v2 interface."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'GET /api/db1/tbl1/_schema\n\nResponse:\n{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": ""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": ""\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n')))))}m.isMDXComponent=!0}}]);