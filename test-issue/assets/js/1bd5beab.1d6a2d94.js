"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[63860],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},20070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const i={title:"System Action",language:"en"},o=void 0,s={unversionedId:"administrator-guide/http-actions/fe/system-action",id:"version-0.15/administrator-guide/http-actions/fe/system-action",title:"System Action",description:"\x3c!--",source:"@site/versioned_docs/version-0.15/administrator-guide/http-actions/fe/system-action.md",sourceDirName:"administrator-guide/http-actions/fe",slug:"/administrator-guide/http-actions/fe/system-action",permalink:"/docs/0.15/administrator-guide/http-actions/fe/system-action",draft:!1,tags:[],version:"0.15",frontMatter:{title:"System Action",language:"en"},sidebar:"docs",previous:{title:"Statement Execution Action",permalink:"/docs/0.15/administrator-guide/http-actions/fe/statement-execution-action"},next:{title:"Table Query Plan Action",permalink:"/docs/0.15/administrator-guide/http-actions/fe/table-query-plan-action"}},c={},l=[{value:"Request",id:"request",level:2},{value:"Description",id:"description",level:2},{value:"Path parameters",id:"path-parameters",level:2},{value:"Query parameters",id:"query-parameters",level:2},{value:"Request body",id:"request-body",level:2},{value:"Response",id:"response",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"system-action"},"System Action"),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/v1/system\n")),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"System Action is used for information about the Proc system built in Doris."),(0,a.kt)("h2",{id:"path-parameters"},"Path parameters"),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"query-parameters"},"Query parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"path")),(0,a.kt)("p",{parentName:"li"},"  Optional parameter, specify the path of proc"))),(0,a.kt)("h2",{id:"request-body"},"Request body"),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"response"},"Response"),(0,a.kt)("p",null,"Take ",(0,a.kt)("inlineCode",{parentName:"p"},"/dbs/10003/10054/partitions/10053/10055")," as an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "href_columns": ["TabletId", "MetaUrl", "CompactionStatus"],\n        "column_names": ["TabletId", "ReplicaId", "BackendId", "SchemaHash", "Version", "VersionHash", "LstSuccessVersion", "LstSuccessVersionHash", "LstFailedVersion", "LstFailedVersionHash", "LstFailedTime", "DataSize", "RowCount", "State", "LstConsistencyCheckTime", "CheckVersion", "CheckVersionHash", "VersionCount", "PathHash", "MetaUrl", "CompactionStatus"],\n        "rows": [{\n            "SchemaHash": "1294206575",\n            "LstFailedTime": "\\\\N",\n            "LstFailedVersion": "-1",\n            "MetaUrl": "URL",\n            "__hrefPaths": ["http://192.168.100.100:8030/rest/v1/system?path=/dbs/10003/10054/partitions/10053/10055/10056", "http://192.168.100.100:8043/api/meta/header/10056/1294206575", "http://192.168.100.100:8043/api/compaction/show?tablet_id=10056&schema_hash=1294206575"],\n            "CheckVersionHash": "-1",\n            "ReplicaId": "10057",\n            "VersionHash": "4611804212003004639",\n            "LstConsistencyCheckTime": "\\\\N",\n            "LstSuccessVersionHash": "4611804212003004639",\n            "CheckVersion": "-1",\n            "Version": "6",\n            "VersionCount": "2",\n            "State": "NORMAL",\n            "BackendId": "10032",\n            "DataSize": "776",\n            "LstFailedVersionHash": "0",\n            "LstSuccessVersion": "6",\n            "CompactionStatus": "URL",\n            "TabletId": "10056",\n            "PathHash": "-3259732870068082628",\n            "RowCount": "21"\n        }]\n    },\n    "count": 1\n}\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"column_names")," in the data part is the header information, and ",(0,a.kt)("inlineCode",{parentName:"p"},"href_columns")," indicates which columns in the table are hyperlink columns. Each element in the ",(0,a.kt)("inlineCode",{parentName:"p"},"rows")," array represents a row. Among them, ",(0,a.kt)("inlineCode",{parentName:"p"},"__hrefPaths")," is not the table data, but the link URL of the hyperlink column, which corresponds to the column in ",(0,a.kt)("inlineCode",{parentName:"p"},"href_columns")," one by one."))}u.isMDXComponent=!0}}]);