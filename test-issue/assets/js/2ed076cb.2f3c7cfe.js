"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[15231],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),f=l,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:l,a[1]=i;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},62854:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),l=(n(67294),n(3905));const o={title:"COLLECT_LIST",language:"en"},a=void 0,i={unversionedId:"sql-manual/sql-functions/aggregate-functions/collect_list",id:"version-dev/sql-manual/sql-functions/aggregate-functions/collect_list",title:"COLLECT_LIST",description:"\x3c!--",source:"@site/versioned_docs/version-dev/sql-manual/sql-functions/aggregate-functions/collect_list.md",sourceDirName:"sql-manual/sql-functions/aggregate-functions",slug:"/sql-manual/sql-functions/aggregate-functions/collect_list",permalink:"/docs/dev/sql-manual/sql-functions/aggregate-functions/collect_list",draft:!1,editUrl:"https://github.com/apache/doris/edit/master/docs/en/docs/sql-manual/sql-functions/aggregate-functions/collect_list.md",tags:[],version:"dev",frontMatter:{title:"COLLECT_LIST",language:"en"},sidebar:"docs",previous:{title:"GROUP_CONCAT",permalink:"/docs/dev/sql-manual/sql-functions/aggregate-functions/group_concat"},next:{title:"MIN_BY",permalink:"/docs/dev/sql-manual/sql-functions/aggregate-functions/min_by"}},c={},s=[{value:"COLLECT_LIST",id:"collect_list",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"notice",id:"notice",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"collect_list"},"COLLECT_LIST"),(0,l.kt)("h3",{id:"description"},"description"),(0,l.kt)("h4",{id:"syntax"},"Syntax"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ARRAY<T> collect_list(expr)")),(0,l.kt)("p",null,"Returns an array consisting of all values in expr within the group.\nThe order of elements in the array is non-deterministic. NULL values are excluded."),(0,l.kt)("h3",{id:"notice"},"notice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Only supported in vectorized engine\n")),(0,l.kt)("h3",{id:"example"},"example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"mysql> set enable_vectorized_engine=true;\n\nmysql> select k1,k2,k3 from collect_test order by k1;\n+------+------------+-------+\n| k1   | k2         | k3    |\n+------+------------+-------+\n|    1 | 2022-07-05 | hello |\n|    2 | 2022-07-04 | NULL  |\n|    2 | 2022-07-04 | hello |\n|    3 | NULL       | world |\n|    3 | NULL       | world |\n+------+------------+-------+\n\nmysql> select k1,collect_list(k2),collect_list(k3) from collect_test group by k1 order by k1;\n+------+--------------------------+--------------------+\n| k1   | collect_list(`k2`)       | collect_list(`k3`) |\n+------+--------------------------+--------------------+\n|    1 | [2022-07-05]             | [hello]            |\n|    2 | [2022-07-04, 2022-07-04] | [hello]            |\n|    3 | NULL                     | [world, world]     |\n+------+--------------------------+--------------------+\n")),(0,l.kt)("h3",{id:"keywords"},"keywords"),(0,l.kt)("p",null,"COLLECT_LIST,COLLECT_SET,ARRAY"))}p.isMDXComponent=!0}}]);