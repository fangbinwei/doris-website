<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://doris.apache.org/zh-CN/blog</id>
    <title>Apache Doris Blog</title>
    <updated>2022-12-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://doris.apache.org/zh-CN/blog"/>
    <subtitle>Apache Doris Blog</subtitle>
    <icon>https://doris.apache.org/zh-CN/images/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[应用实践：数仓体系效率全面提升！同程数科基于 Apache Doris 的数据仓库建设]]></title>
        <id>/LY</id>
        <link href="https://doris.apache.org/zh-CN/blog/LY"/>
        <updated>2022-12-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<blockquote><p>导读：同程数科成立于 2015 年，是同程集团旗下的旅游产业金融服务平台。2020 年，同程数科由于看到了 Apache Doris 丰富的数据接入方式、优异的并行运算能力和极简运维的特性，引入了Apache Doris 进行数仓架构改造。本文详细讲述了同程数科数仓架构从1.0 到 2.0 的演进过程及使用Doris过程中的应用实践。希望对大家有所帮助。</p></blockquote><blockquote><p>作者｜同程数科大数据高级工程师 王星</p></blockquote><p><img loading="lazy" alt="kv" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/kv-fb77e142257a98bea6656a33a626b310.png" width="900" height="383" class="img_ev3q"></p><h1>业务背景</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="业务介绍">业务介绍<a class="hash-link" href="#业务介绍" title="标题的直接链接">​</a></h2><p>同程数科是同程集团旗下的旅游金融服务平台，其前身是同程金服。正式成立于 2015 年，同程数科以“数字科技引领旅游产业”为愿景，坚持以科技的力量，赋能我国旅游产业。
目前，同程数科的业务涵盖金融服务、消费金融服务、金融科技及数字科技等板块，累计服务覆盖超过千万用户和 76 座城市。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="业务需求">业务需求<a class="hash-link" href="#业务需求" title="标题的直接链接">​</a></h2><p>包含四大类：</p><ul><li>看板类：包括实时驾驶舱以及 T+1 业务看板等。</li><li>预警类：包括风控熔断、资金异常以及流量监控等。</li><li>分析类：包括及时性数据查询分析以及临时取数等。</li><li>财务类：包括清算以及支付对账需求。</li></ul><h1>架构演进之 1.0</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工作流程">工作流程<a class="hash-link" href="#工作流程" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="1" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/1-bb0a3cc8027796049893fcf4d60dd5ab.png" width="1080" height="608" class="img_ev3q"></p><p>我们最初的数仓架构沿袭了前几年非常流行的SteamSets 和 Apache Kudu 组合的第一代架构。该架构中，Binlog 通过StreamSets后，通过实时采集后写入 Apache Kudu 中，最后通过 Apache Impala 和可视化工具进行查询和使用。</p><p>不足：</p><ul><li>组件引入过多，维护成本随之增加</li><li>多种技术架构和过长的开发链路，提高了数仓研发人员的学习成本，数仓人员需要在不同组件之间进行开发，导致开发效率降低。</li><li>Apache Kudu 在大表关联 Join 方面性能差强人意。</li><li>由于数仓使用了 CDH组件搭建，离线和实时集群并未进行分离，形成资源之间的相互竞争；在离线数据批量处理时对 IO 或磁盘消耗较大，无法保证实时数据的及时性。</li><li>虽然 SteamSets 配备了预警能力，但作业恢复能力仍相对欠缺。在配置多个任务时， JVM 的消耗较大，导致恢复速度较慢。</li></ul><h1>架构演进之 2.0</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="调研过程">调研过程<a class="hash-link" href="#调研过程" title="标题的直接链接">​</a></h2><p>由于缺点众多，我们不得不放弃了数仓1.0的架构。在 2020年中，我们对市面上流行的数仓进行了深度调研。</p><p>在调研过程中，我们集中对比了Click house和Apache Doris。ClickHouse 对 CPU 的利用率较高，所以在单表查询时表现比较优秀，但是在多查询高 QPS 的情况下则表现欠佳。反观Doris不仅单节点最高可支持上千QPS，而且得益于分区分桶裁剪的功能，可以支持QPS万级别的高并发查询；再者，ClickHouse的扩容缩容复杂且繁琐，目前做不到自动在线操作，需要自研工具支持。Doris支持集群的在线动态扩缩容，且可以随着业务的发展水平扩展。</p><p>在调研中，ApacheDoris脱颖而出。Doris高并发的查询能力非常吸引我们，而且灵活的扩缩容能力也也更适合我们灵活多变的广告业务。因此我们选择了 Apache Doris。</p><p><img loading="lazy" alt="2" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/2-11b7311ef2c06a545dbdb54e01787f6d.png" width="1080" height="608" class="img_ev3q"></p><p>引入 Apache Doris 后，我们对整个数仓进行了改造：</p><ul><li>通过Canal 采集MySQL Binlog 进入 Kafka中。因为Apache Doris 与 Kafka 的契合度较高，可以便捷地使用 Routine Load 对数据加载和导入。</li><li>我们对原有离线计算的数据链路进行了细微调整。对于存储在 Hive 中的数据，Apahce Doris 可以通过 Broker Load 将 Hive 中的数据导入。这样一来离线集群的数据就可以直接加载到 Doris。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="选择-doris">选择 Doris<a class="hash-link" href="#选择-doris" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="3" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/3-1a638414ccc0a8decbd99b24160973a8.png" width="1080" height="608" class="img_ev3q"></p><p>Apache Doris 整体表现令人深刻：</p><ul><li>数据接入：提供了丰富的数据导入方式，能够支持众多数据源的接入。</li><li>数据连接：Doris 支持 JDBC 与 ODBC 等方式连接。Doris对 BI 工具的可视化展示比较友好，能够便捷地与 BI 工具进行连接。另外Doris 采用MySQL 协议进行通信，用户可以通过各类 Client 工具直接访问 Doris。</li><li>SQL 语法：Doris 采用MySQL 协议，高度兼容MySQL 语法，支持标准SQL，对于数仓开发人员来说学习成本较低；</li><li>MPP 并行计算：Doris 基于 MPP 架构，提供了非常优秀的并行计算能力。在复杂Join和大表Join的场景下Doris优势非常明显；</li><li>文档健全：Doris 官方文档非常健全，对于新用户上手非常友好。（我们最看重的一点）</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="doris-实时系统架构">Doris 实时系统架构<a class="hash-link" href="#doris-实时系统架构" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="4" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/4-eeefe38e4d58d7a253a72ca3c98ecace.png" width="1080" height="608" class="img_ev3q"></p><ul><li><p>数据源：在实时系统架构中，数据源来自产业金融、消费金融、风控数据等业务线，通过 Canal 和 API 接口进行采集。</p></li><li><p>数据采集：通过 Canal- Admin 进行数据采集后，Canal将数据发送到 Kafka 消息队列之中。之后，数据再通过 Routine Load 接入到 Doris 集群。</p></li><li><p>Doris 数仓：由Doris 集群组成了了数据仓库的三级分层，分别是：使用了 Unique 模型的 DWD 明细层 、 Aggregate 模型的 DWS 汇总层以及 ADS 应用层。</p></li><li><p>数据应用：数据应用于实时看板、数据及时性分析以及数据服务三方面。</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="doris-新数仓特点">Doris 新数仓特点<a class="hash-link" href="#doris-新数仓特点" title="标题的直接链接">​</a></h2><p>数据导入方式简便，根据不同场景采用 3 种不同的导入方式：</p><ul><li>Routine Load：当我们提交 Rountine Load 任务时，Doris 内部会有一个常驻进程实时消费 Kafka ，不断从 Kafka 中读取数据并导入进 Doris中。</li><li>Broker Load：维度表及历史数据等离线数据有序地导入Doris。</li><li>Insert Into：用于定时批式计算任务，负责处理DWD 层数据，从而形成 DWS 层以及 ADS 层。
Doris 的良好数据模型，提升了我们的开发效率：</li><li>Unique 模型在 DWD 层接入时使用，可以有效防止重复消费数据。</li><li>Aggregate 模型用作聚合。在 Doris 中，Aggregate 支持如 Sum、Replace、Min 、Max 4 种方式的聚合模型，聚合的过程中使用 Aggregate 底层模型可以减少很大部分 SQL 代码量，不再人工手写Sum、Min、Max 等代码。
Doris 查询效率高：</li><li>支持物化视图与 Rollup 物化索引。物化视图底层类似 Cube 的概念与预计算的过程，与 Kylin 中以空间换时间的方式类似，均是在底层生成特殊的表，在查询中命中物化视图并快速响应。</li></ul><h1>新架构的收益</h1><ul><li>数据接入：在最初的架构中，通过 SteamSets 进行数据接入的过程中需要手动建立 Kudu 表。由于缺乏工具，整个建表和创建任务的过程需要 20-30 分钟。如今可以通过平台与快速构建语句实现数据快速接入，每张表的接入过程从之前的20-30分钟缩短到现在的 3-5 分钟，性能提升了 5-6 倍。</li><li>数据开发：使用 Doris之后，我们可以直接使用 Doris 中自带的 Unique、Aggregate 等数据模型及可以很好支持日志类场景的 Duplicate 模型，在 ETL 过程中大幅度加快开发过程。</li><li>查询分析：Doris 底层带有物化视图及 Rollup 物化索引等功能。物化视图底层类似 Cube 的概念与预计算的过程，与 Kylin 中以空间换时间的方式类似，均是在底层生成特殊的表，在查询中命中物化视图并快速响应。同时 Doris 底层对于大表关联进行了诸多优化，如 Runtime Filter 以及其他 Join 和自定义优化。相较于 Doris，Apache Kudu 则需要经过更为深入和复杂的优化才能更好地使用。</li><li>数据报表：我们最初使用 Kudu 报表查询需要 1-2 分钟才能够完成渲染，而 Doris 则是秒级甚至是毫秒级的响应速度。</li><li>便捷运维：Doris 没有 Hadoop 生态系统的复杂度，维护成本远低于 Hadoop。尤其是在集群迁移过程中，Doris 的运维便捷性尤为突出。3 月份，我们的机房进行了搬迁，12 台 Doris 节点机器在三天内全部迁移完成。整体操作较为简单，除了机器上架下架和搬移外，FE 扩容与缩容时只运用了 Add 与 Drop 等简单指令，并未消耗太长时间。</li></ul><h1>未来展望</h1><ul><li>实现基于 Flink CDC 的数据接入：当前，优化后的数据库架构中并没有没有引入 Flink CDC ，而是继续沿用了 数据经Canal 采集到 Kafka 后再采集到 Doris 中的模式，链路相对来说较长。使用Flink CDC 虽然可以继续精简整体架构，但是还需要写一定量的代码，这对于数据分析师直接使用感受并不友好。我们希望数据分析师只需要写简单SQL 或在页面上直接操作。在未来的规划中，我们计划引入 Flink CDC 功能并对上层应用进行扩充。</li><li>紧跟社区迭代计划：我们正在使用的 Doris 版本相对较老，现在的最新版本 Apache Doris V1.2.0在全面向量化、multi-catalog多元数据目录、light schema change轻量表结构变更方面有了较大幅度的提升。我们将紧跟社区迭代节奏对集群进行升级并充分利用新特性。</li><li>强化建设相关体系：我们现在的指标体系管理如报表元数据、业务元数据等维护与管理水平依旧有待提高。在数据质量监控方面，虽然目前包含了数据质量监控功能，但对于整个平台监控与数据自动化监控方面还需要强化与改善。</li></ul>]]></content>
        <author>
            <name>王星</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris 1.1.5 Release]]></title>
        <id>/release-1.1.5</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-1.1.5"/>
        <updated>2022-12-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>在 1.1.5 版本中，Doris 团队已经修复了自 1.1.4 版本发布以来约 36 个问题或性能改进项。同时，1.1.5 版本也是作为 1.1 LTS 版本的错误修复版本，建议所有用户升级到这个版本。</p><h1>Behavior Changes</h1><p>当别名与原始列名相同时，例如 "select year(birthday) as birthday"，在 group by、order by、having 子句中使用别名时将与 MySQL 中保持一致，Group by 和 having 将首先使用原始列，order by 将首先使用别名。这里可能会对用户带来疑惑，因此建议最好不要使用与原始列名相同的别名。</p><h1>Features</h1><p>支持 Hash 函数 murmur_hash3_64。<a href="https://github.com/apache/doris/pull/14636" target="_blank" rel="noopener noreferrer">#14636</a></p><h1>Improvements</h1><p>为日期函数 convert_tz 添加时区缓存以提高性能。<a href="https://github.com/apache/doris/pull/14616" target="_blank" rel="noopener noreferrer">#14616</a></p><p>当调用 show 子句时，按 tablename 对结果进行排序。 <a href="https://github.com/apache/doris/pull/14492" target="_blank" rel="noopener noreferrer">#14492</a></p><h1>Bug Fix</h1><p>修复 if 语句中带有常量时导致 BE 可能 Coredump 的问题。<a href="https://github.com/apache/doris/pull/14858" target="_blank" rel="noopener noreferrer">#14858</a></p><p>修复 ColumnVector::insert_date_column 可能崩溃的问题 <a href="https://github.com/apache/doris/pull/14839" target="_blank" rel="noopener noreferrer">#14839</a></p><p>更新 high_priority_flush_thread_num_per_store 默认值为 6，将提高负载性能。 <a href="https://github.com/apache/doris/pull/14775" target="_blank" rel="noopener noreferrer">#14775</a></p><p>优化 quick compaction core。 <a href="https://github.com/apache/doris/pull/14731" target="_blank" rel="noopener noreferrer">#14731</a></p><p>修复分区列非 duplicate key 时 Spark Load 抛出 IndexOutOfBounds 错误的问题。
<a href="https://github.com/apache/doris/pull/14661" target="_blank" rel="noopener noreferrer">#14661</a></p><p>修正 VCollectorIterator 中的内存泄漏问题。 <a href="https://github.com/apache/doris/pull/14549" target="_blank" rel="noopener noreferrer">#14549</a></p><p>修复了存在 Sequence 列时可能存在的建表问题。 <a href="https://github.com/apache/doris/pull/14511" target="_blank" rel="noopener noreferrer">#14511</a></p><p>使用 avg rowset 来计算批量大小，而不是使用 total_bytes，因为它要花费大量的 Cpu。 <a href="https://github.com/apache/doris/pull/14273" target="_blank" rel="noopener noreferrer">#14273</a></p><p>修复了 right outer join 可能导致 core 的问题。<a href="https://github.com/apache/doris/pull/14821" target="_blank" rel="noopener noreferrer">#14821</a></p><p>优化了 TCMalloc gc 的策略。 <a href="https://github.com/apache/doris/pull/14777" target="_blank" rel="noopener noreferrer">#14777</a> <a href="https://github.com/apache/doris/pull/14738" target="_blank" rel="noopener noreferrer">#14738</a> <a href="https://github.com/apache/doris/pull/14374" target="_blank" rel="noopener noreferrer">#14374</a></p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doris on Es在快手商业化的最佳实践]]></title>
        <id>/BestPractice_Kwai</id>
        <link href="https://doris.apache.org/zh-CN/blog/BestPractice_Kwai"/>
        <updated>2022-12-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<blockquote><p>作者：贺祥，数据架构高级工程师，快手商业化团队</p></blockquote><p><img loading="lazy" alt="kv" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/kv-846e4e39fd88e1e34d2474b23690d9b2.png" width="900" height="383" class="img_ev3q"></p><h1>1 关于快手</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="11-快手">1.1 快手<a class="hash-link" href="#11-快手" title="标题的直接链接">​</a></h2><p>快手（HKG: 1024）是一个短视频和潮流社交网络。发现有趣的短片，通过生活中的录音、视频、玩日常挑战或喜欢最好的动效模版和视频来为虚拟社区做出贡献。用短视频分享生活，并从数十种神奇的效果和滤镜中选择喜欢的方式。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="12-快手商业化报表引擎">1.2 快手商业化报表引擎<a class="hash-link" href="#12-快手商业化报表引擎" title="标题的直接链接">​</a></h2><p>快手商业化报表引擎为外部广告主提供广告投放效果的实时多维分析报表在线查询服务，以及为内部各商业化系统提供多维分析报表查询服务，致力于解决多维分析报表场景的高性能、高并发、高稳定的查询问题。</p><h1>2 初期架构</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="21-需求背景">2.1 需求背景<a class="hash-link" href="#21-需求背景" title="标题的直接链接">​</a></h2><p>传统 OLAP 引擎应对多维分析时更多是以预建模的方式，通过构建数据立方体（Cube）对事实数据进行下钻、上卷、切片、切块等操作。现代 OLAP 分析引入了关系模型的理念，在二维关系表中描绘数据。而在建模过程中，往往有两种建模方式，一是采用宽表模型、将多张表的数据通过 Join 写入进一张宽表中，另一种方式是采用星型模型、将数据表区分为事实表和维度表、查询时对事实表与维度表进行 Join 。
以上两种方案各有部分优缺点：</p><p>宽表模型：</p><p>采取空间换时间的思路，理论上都是维表主键为唯一 ID 来填充所有维度，冗余存储了多条维度数据。其优势在于查询时非常方便，无需关联额外维表，性能表现更佳。其弊端在于如果有维度数据变化，需要对全表数据进行重刷，无法支撑高频的 Update。</p><p>星型模型：</p><p>维度数据与事实数据完全分离，维度数据往往用专门的引擎存储 (如 MySQL、Elasticsearch 等)，查询时通过主键关联查询维度数据，其优势在于维度数据变化不影响事实数据、可支持高频 Update 操作。其弊端在于查询逻辑相对更复杂，且多表 Join 可能导致性能受损。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="22-业务需求">2.2 业务需求<a class="hash-link" href="#22-业务需求" title="标题的直接链接">​</a></h2><p>在快手的业务场景中，商业化报表引擎承载了外部广告主实时查询广告投放效果的需求，在构建报表引擎时，我们期望可以满足如下要求：</p><ul><li>超大数据量：单表原始数据每天增量百亿</li><li>查询高 QPS：平均 QPS千级别</li><li>高稳定性要求：在线服务要求稳定性4个9
最为重要的是，由于维度数据经常发生变更，维度表需要支持高达上千 QPS 的 Update 操作，同时还要进一步支持模糊匹配、分词检索等需求。
基于以上需求，我们选择了星型模型来建模，并以 Apache Druid 和 Elasticsearch 为核心构建了早期的报表引擎架构。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="23-初期架构基于apache-druid的架构">2.3 初期架构：基于Apache Druid的架构<a class="hash-link" href="#23-初期架构基于apache-druid的架构" title="标题的直接链接">​</a></h2><p>我们选择了引擎结合的方式，用Elasticsearch适配Druid引擎来实现。在数据写入阶段，我们通过Flink对数据进行分钟级预聚合，利用Kafka对数据进行小时级别的数据预聚合。在数据查询中，App端发起查询需求，对RE Front统一接口进行查询，Re Query根据引擎适配，向维表引擎（Elasticsearch和MySQL）及扩展引擎分别发起查询。</p><p>Druid则是一款基于时序的查询引擎，支持数据实时摄入，用来存储和查询大量的事实数据。而选用Elasticsearch作为维度数据存储引擎，主要是因为如下原因：</p><ul><li>支持高频实时更新，可以支撑上千 QPS的 Update操作</li><li>支持分词模糊检索，适用于快手的业务</li><li>支持量级较高的维表数据，不用像MySQL数据库一样做分库分表才能满足</li><li>支持数据同步监控，同时拥有检查和恢复的服务</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="24-报表引擎">2.4 报表引擎<a class="hash-link" href="#24-报表引擎" title="标题的直接链接">​</a></h2><p>报表引擎架构整体分为REFront 和 REQuery两层，REMeta为独立的元数据管理模块。报表引擎在REQuery内部实现MEM Join。支持Druid引擎中的事实数据与ES引擎中的维度数据做关联查询。为上层业务提供虚拟的cube表查询。屏蔽复杂的跨引擎管理查询逻辑。</p><p><img loading="lazy" alt="1" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/1-ca39b5dcdd3d69d8fee822dc1b74a2e5.png" width="864" height="885" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-基于apache-doris的架构">3 基于Apache Doris的架构<a class="hash-link" href="#3-基于apache-doris的架构" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="31-架构遗留的问题">3.1 架构遗留的问题<a class="hash-link" href="#31-架构遗留的问题" title="标题的直接链接">​</a></h2><p>首先，我们在使用报表引擎时，发现了这样的一个问题。Mem Join是单机实现与串行执行，到单次从ES中拉取的数据量超过10W时，响应时间已经接近10s，用户体验差。而且单节点实现大规模数据Join处理，内存消耗大，有Full GC风险。</p><p>其次，Druid的Lookup Join了功能不够完善是一个较大的问题，不能完全满足真实业务需求。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="32-选型调研">3.2 选型调研<a class="hash-link" href="#32-选型调研" title="标题的直接链接">​</a></h2><p>于是我们对业界常见的 OLAP 数据库进行了调研，其中最具代表性的为 Apache Doris和 Clickhouse。在进一步的调研中我们发现，Apache Doris在大宽表Join的能力更强。ClickHouse能够支持 Broadcast 基于内存的Join，但是对于大数据量千万级以上大宽表的Join，ClickHouse 的性能表现不好。Doris 和 Clickhouse 都支持明细数据存储，但Clickhouse支持的并发度较低，相反Doris支持高并发低延时的查询服务，单机最高支持上千QPS。在并发增加时，线性扩充FE和BE即可支持。而Clickhouse的数据导入没有事务支持功能，无法实现exactly once语义，对标准sql的支持也是有限的。相比之下，Doris提供了数据导入的事务支持和原子性，Doris 自身能够保证不丢不重的订阅 Kafka 中的消息，即 Exactly-Once 消费语义。ClickHouse使用门槛高、运维成本高和分布式能力弱，需要较多的定制化和较深的技术实力也是另一个难题，Doris则不同，只有FE、BE两个核心组件，外部依赖也比较少，运维快捷简单。我们还发现，由于Doris 更加接近 MySQL协议，比起Clickhouse更加便捷，在迁移时的成本并不大。在横向扩容方面，Doris 的扩缩容也能够做到自平衡，大大优于Clickhouse。</p><p>由此看来Doris可以比较好的提升Join的性能，在迁移成本、横向扩容、并发程度等其他方面也比较优秀。不过在高频Update上，Elasticsearch具有先天的优势。</p><p>通过 Doris 创建 ES 外表的方式来同时应对高频Upate和Join性能问题，会是比较理想的解决方案。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="33-dorisdoris-on-es完美配合">3.3 Doris+Doris on ES完美配合<a class="hash-link" href="#33-dorisdoris-on-es完美配合" title="标题的直接链接">​</a></h2><p>Doris on ES 的查询性能究竟如何呢？</p><p>首先，Apache Doris 是一个基于MPP 架构的实时分析型数据库，性能强劲、横向扩展能力能力强。Doris on ES构建在这个能力之上，并且对查询做了大量的优化。其次，在这些之上，融合Elasticsearch的能力之后，我们还对查询功能做出了大量的优化：</p><ul><li>Shard级别并发</li><li>行列扫描自动适配，优先列式扫描</li><li>顺序读取，提前终止</li><li>两阶段查询变为一阶段查询</li><li>Join场景使用Broadcast Join，对于小批量数据Join特别友好</li></ul><p><img loading="lazy" alt="2" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/2-b0e578721df866bb977d80072c559f32.png" width="864" height="800" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="34-基于doris-on-elasticsearch的架构实现">3.4 基于Doris on Elasticsearch的架构实现<a class="hash-link" href="#34-基于doris-on-elasticsearch的架构实现" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="341-数据链路升级">3.4.1 数据链路升级<a class="hash-link" href="#341-数据链路升级" title="标题的直接链接">​</a></h3><p>数据链路的升级适配比较简单。第一步，由Doris构建新的Olap表，配置好物化视图。第二步，基于之前事实数据的kafka topic启动routine load，导入实时数据。第三步，从Hive中通broker load导入离线数据。最后一步，通过Doris创建Es外表。</p><p><img loading="lazy" alt="3" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/3-1c0a381d13453a0e975d97ffab096981.png" width="864" height="629" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="342-报表引擎适配升级">3.4.2 报表引擎适配升级<a class="hash-link" href="#342-报表引擎适配升级" title="标题的直接链接">​</a></h3><p><img loading="lazy" alt="4" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/4-3fca61e78e95bd16fad48de37ee7124f.png" width="864" height="722" class="img_ev3q"></p><p>注：上图关联的mysql维表是基于未来规划，目前主要是ES做维表引擎</p><p>报表引擎适配</p><ul><li>抽象基于Doris的星型模型虚拟cube表</li><li>适配cube表查询解析，智能下推</li><li>支持灰度上线</li></ul><h1>4  线上表现</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="41-查询响应时间">4.1 查询响应时间<a class="hash-link" href="#41-查询响应时间" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="411-事实表查询表现对比">4.1.1 事实表查询表现对比<a class="hash-link" href="#411-事实表查询表现对比" title="标题的直接链接">​</a></h3><p>Druid</p><p><img loading="lazy" alt="5" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/5-4ce2b0396e8e14ac9e536befcf11cfd0.png" width="864" height="200" class="img_ev3q"></p><p>Doris</p><p><img loading="lazy" alt="6" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/6-80fe6a32cf89065b0323afca7038f0ba.png" width="864" height="195" class="img_ev3q"></p><p>99分位耗时Druid大概为270ms，Doris为150ms，延时下降45%</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="412-join场景下cube表查询表现对比">4.1.2 Join场景下cube表查询表现对比<a class="hash-link" href="#412-join场景下cube表查询表现对比" title="标题的直接链接">​</a></h3><p>Druid</p><p><img loading="lazy" alt="7" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/7-30f72edbee75326a65e006652a846e63.png" width="864" height="197" class="img_ev3q"></p><p>Doris</p><p><img loading="lazy" alt="8" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/8-b9485387d33cb96f36fdcaf09999ce2a.png" width="864" height="193" class="img_ev3q"></p><p>99分位耗时Druid大概为660ms，Doris为440ms，延时下降33%</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="413-收益总结">4.1.3 收益总结<a class="hash-link" href="#413-收益总结" title="标题的直接链接">​</a></h3><ul><li>P99整体耗时下降35%左右</li><li>资源节省50%左右</li><li>去除报表引擎内部Mem Join的复杂逻辑，下沉至Doris通过DOE实现，在大查询场景下(维表结果超过10W，性能提升超过10倍，10s-&gt;1s)</li><li>更丰富的查询语义(原本Mem Join实现比较简单，不支持复杂的查询)</li></ul><h1>5  总结与未来规划</h1><p>在快手商业化业务里面，维度数据与事实数据Join查询是非常普遍的。使用Doris 之后，查询变得简单。我们仅需要按天同步事实表和维表，在查询的同时 Join即可。通过Doris替代Druid、Clickhouse的方案，基本覆盖了我们使用Druid 时的所有场景，大大提高了海量数据的聚合分析能力。在Apache Doris的使用过程中，我们还发现了一些意想不到的收益：例如，Routine Load和 Broker Load的导入方式较为简单，提升了查询速度；数据占用空间大幅降低；Doris支持MySQL协议，方便了数据分析师自助取数绘图等。</p><p>尽管Doris on ES的解决方案比较成功的满足了我们的报表业务，ES外表映射仍然需要手工建表。但Apache Doris于近日完成了最新版本V1.2.0的发布，新版本功能新增了Multi-Catlog，提供了无缝接入Hive、ES、Hudi、Iceberg 等外部数据源的能力。用户可以通过 CREATE CATALOG 命令连接到外部数据源，Doris 会自动映射外部数据源的库、表信息。如此一来，以后我们就不需要再手动创建Es外表完成映射，大大节省了开发的时间成本，提升了研发效率。而全面向量化、Ligt Schema Change、Merge-on-Write、Java UDF等其他新功能的实现，也让我们对Apache Doris有了全新的期待。祝福Apache Doris！</p><h1>联系我们</h1><p>官网：<a href="http://doris.apache.org" target="_blank" rel="noopener noreferrer">http://doris.apache.org</a></p><p>Github：<a href="https://github.com/apache/doris" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris</a></p><p>dev邮件组：<a href="mailto:dev@doris.apache.org" target="_blank" rel="noopener noreferrer">dev@doris.apache.org</a></p>]]></content>
        <author>
            <name>贺祥</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[最佳实践: Apache Doris 在小米数据场景的应用实践与优化]]></title>
        <id>/xiaomi_vector</id>
        <link href="https://doris.apache.org/zh-CN/blog/xiaomi_vector"/>
        <updated>2022-12-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<blockquote><p>导读：小米集团于 2019 年首次引入了 Apache Doris ，目前 Apache Doris 已经在小米内部数十个业务中得到广泛应用，并且在小米内部已经形成一套以 Apache Doris 为核心的数据生态。本篇文章转录自 Doris 社区线上 Meetup 主题演讲，旨在分享 Apache Doris 在小米数据场景的落地实践与优化实践。</p></blockquote><blockquote><p>作者｜魏祚 小米 OLAP 引擎研发工程师 </p></blockquote><p><img loading="lazy" alt="kv" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/kv-b27d71e34981d9850785329cea2cb610.png" width="900" height="383" class="img_ev3q"></p><h1>关于小米</h1><p>小米公司（“小米”或“集团”；HKG：1810），一家消费电子和智能制造公司，其智能手机和智能硬件通过物联网 (IoT) 平台连接。 2021年，小米总收入达到人民币3283亿元（4722.3131.62亿美元），同比增长33.5%；调整后净利润为人民币 220 亿元（316,451.08 万美元），同比增长 69.5%。</p><p>因分析业务的增长，小米集团于 2019 年首次引入了 Apache Doris 。经过三年时间的发展，目前 Apache Doris 已经在广告投放、新零售、增长分析、数据看板、用户画像、天星数科、小米有品、等小米内部数十个业务和品牌中得到广泛应用，并且在小米内部已经围绕 Apache Doris 为核心建设了数据生态。</p><p><img loading="lazy" alt="1" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/1-1ba7f77a03c987c9397cedee505fe819.png" width="1080" height="600" class="img_ev3q"></p><p>当前 Apache Doris 在小米内部已经具有数十个集群、总体达到数百台 BE 节点的规模，其中单集群最大规模达到近百台节点，拥有数十个实时数据同步任务，每日单表最大增量 120 亿、支持 PB 级别存储，单集群每天可以支持 2W 次以上的多维分析查询。</p><h1>架构演进</h1><p>小米引入 Apache Doris 的初衷是为了解决内部的用户行为分析中所遇到的问题。随着小米互联网业务的发展，利用用户行为数据进行增长分析的需求越来越强烈。如果每个业务产品线都自己搭建一套增长分析系统，不仅成本高昂，效率也不高。因此如果能有一款产品能够帮助他们不用关心底层的复杂技术细节，让相关业务人员能够专注于自己的技术工作，可以极大提高工作效率。所以，小米大数据和云平台联合开发了增长分析系统 Growing Analytics（下文中简称 GA)，旨在提供一个灵活的多维实时查询和分析平台，可以统一管理数据接入和查询方案，帮助业务线做好精细化运营。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="历史架构">历史架构<a class="hash-link" href="#历史架构" title="标题的直接链接">​</a></h2><p>增长分析平台立项于 2018 年年中，当时基于开发时间和成本，技术栈等因素的考虑，小米复用了现有各种大数据基础组件（HDFS, Kudu, SparkSQL 等），搭建了一套基于 Lamda 架构的增长分析查询系统。GA 系统初代版本的架构如下图所示，包含了以下几个方面：</p><ul><li>数据源：数据源是前端的埋点数据以及用户行为数据。</li><li>数据接入层：对埋点数据进行统一的清洗后写入小米内部自研的消息队列中，并通过 Spark Streaming 将数据导入Kudu 中。</li><li>存储层：在存储层中进行冷热数据分离。热数据存放在 Kudu 中，冷数据则会存放在 HDFS 上。同时在存储层中进行分区，当分区单位为天时，每晚会将一部分数据转冷并存储到 HDFS 上。</li><li>计算层/查询层：在查询层中，使用 SparkSQL 对 Kudu 与 HDFS 上数据进行联邦查询，最终把查询结果显示在前端页面。</li></ul><p><img loading="lazy" alt="2" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/2-f6f2fe0acf61bc2e3aefb9f853931c27.png" width="1080" height="603" class="img_ev3q"></p><p>在当时的历史背景下，初代版本的增长分析平台帮助我们解决了一系列用户运营过程中的问题，但同时在历史架构中也存在了两个问题：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第一个问题组件分散">第一个问题：组件分散<a class="hash-link" href="#第一个问题组件分散" title="标题的直接链接">​</a></h3><p>由于历史架构是基于 SparkSQL + Kudu + HDFS 的组合，依赖的组件过多导致运维成本较高。原本的设计是各个组件都使用公共集群的资源，但是实践过程中发现执行查询作业的过程中，查询性能容易受到公共集群其他作业的影响，容易发生查询抖动，尤其在读取 HDFS 公共集群的数据时，有时较为缓慢。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第二个问题资源占用高">第二个问题：资源占用高<a class="hash-link" href="#第二个问题资源占用高" title="标题的直接链接">​</a></h3><p>通过 SparkSQL 进行查询时，延迟相对较高。SparkSQL 是基于批处理系统设计的查询引擎，在每个 Stage 之间交换数据 Shuffle 的过程中依然需要进行落盘，完成 SQL 查询的时延较高。为了保证 SQL 查询不受资源的影响，我们通过添加机器来保证查询性能，但是实践过程中发现，性能提升的空间有限，这套解决方案并不能充分地利用机器资源来达到高效查询的目的，存在一定的资源浪费。</p><p>针对上述两个问题，我们的目标是寻求一款计算、存储一体的 MPP 数据库来替代我们目前的存储计算层的组件，在通过技术选型后，最终我们决定使用 Apache Doris 替换老一代历史架构。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重新选型">重新选型<a class="hash-link" href="#重新选型" title="标题的直接链接">​</a></h2><p>MPP架构的查询引擎，如Impala,Presto等能够高效地支持SQL查询，但是仍然需要依赖Kudu, HDFS, Hive Metastore等组件, 运维成本依然比较高。同时，由于计算存储分离，查询引擎不能很好地及时感知存储层的数据变化，就无法做更细致的查询优化。如想在SQL层做缓存就无法保证查询的结果是最新的。</p><p>Doris是Apache基金会顶级项目，主要定位是高性能的、支持实时的分析型数据库， 主要用于解决报表和多维分析。它主要集成了 Google Mesa 和 Cloudera Impala 技术。我们对Doris进行了内部的性能测试并多次和社区沟通交流，确定了用Doris替换原来的计算存储组件的解决方案。我们新的架构如下图所示：</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于-apache-doris-的新版架构">基于 Apache Doris 的新版架构<a class="hash-link" href="#基于-apache-doris-的新版架构" title="标题的直接链接">​</a></h2><p>新版架构从数据源获取埋点数据后，数据接入后写入 Apache Doris 后可以直接查询结果并在前端进行显示。真正实现了通过Doris统一了计算、存储，和资源管理yarn相关工具。</p><p><img loading="lazy" alt="3" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/3-266579e567d5c09c8931d7044813c707.png" width="1080" height="598" class="img_ev3q"></p><p>我们选择 Doris 原因：</p><ul><li>Doris 具有优秀的查询性能，能够满足业务需求。</li><li>Doris 支持标准 SQL ，用户使用与学习成本较低。</li><li>Doris 不依赖于其他的外部系统，运维简单。</li><li>Doris 社区拥有很高活跃度，版本迭代快。开发者规模大，有利于后续系统的维护升级。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="新旧架构性能对比">新旧架构性能对比<a class="hash-link" href="#新旧架构性能对比" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="4" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/4-c98f04af8754b651217aa474e7178d39.png" width="1061" height="546" class="img_ev3q"></p><p>我们选取了日均数据量大约 10 亿的业务，分别在不同场景下对Doris进行了性能测试，其中包含 6 个事件分析场景，3 个留存分析场景以及 3 个漏斗分析场景。经过与【SparkSQL+Kudu+HDFS】的旧方案对比后，我们发现：</p><ul><li>在事件分析的场景下，平均查询所耗时间降低了 85%。</li><li>在留存分析和漏斗分析场景下，平均查询所耗时间降低了 50%。</li></ul><h1>应用实践</h1><p>下面将介绍我们在Apache Doris应用中数据导入、数据查询、A/B测试的经验。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据导入">数据导入<a class="hash-link" href="#数据导入" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="5" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/5-adfeb633824992e5692635b13cfdfb78.png" width="1080" height="607" class="img_ev3q"></p><p>小米内部主要通过 Stream Load 与 Broker Load 以及少量 Insert 方式来导入数据到Doris。数据一般会先写入到消息队列中，分为实时数据和离线数据两个部分。
实时数据如何写入到Apache Doris 中：一部分实时数据通过 Flink数据处理 后， 并通过 Doris 社区提供的 Flink Doris Connector 组件写入到 Doris 中。另一部分数据通过 Spark Streaming 组件写入。这两种写入方式的底层都依赖的是社区提供的 Stream Load。
离线数据如何写入到Apache Doris 中：离线数据部分写入 Hive 后，通过小米的数据工场将数据导入到 Doris 中。用户可以直接在数据工场提交 Broker Load 任务并将数据直接导入 Doris 中，也可以通过 Spark SQL 将数据导入 。Spark SQL 方式则是依赖了 Doris 社区提供的 Spark Doris Connector 组件，其底层为 Doris 的 Stream Load 的封装。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据查询">数据查询<a class="hash-link" href="#数据查询" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="6" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/6-5ec3ef0ad093ee68dd7297622a064096.png" width="1080" height="596" class="img_ev3q"></p><p>用户通过数据工场将数据导入至 Doris 后即可进行查询。在小米内部，可以通过自研的数鲸平台进行查询的。用户可以通过数鲸平台对 Doris 进行可视化的查询，并展开用户行为分析和用户画像分析。其中，为帮助业务进行事件分析、留存分析、漏斗分析、路径分析等行为分析，我们为 Doris 添加了相应的 UDF （User Defined Function）和 UDAF (User Defined Aggregate Function)。
在即将发布的 1.2 版本中，Doris添加了外表元数据同步的功能，支持 Hive/Hudi/Iceberg 外表并增加了 Multi Catalog。查询外部表提升了性能，接入外表大幅增加了易用性。在未来，我们考虑直接通过 Doris 查询 Hive 与 Iceberg 数据，构建湖仓一体的架构。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ab测试">A/B测试<a class="hash-link" href="#ab测试" title="标题的直接链接">​</a></h2><p>小米的 A/B 实验平台对 Apache Doris 查询性能的提升有着迫切的需求，因此我们选择优先在小米的 A/B 实验平台上线 Apache Doris 向量化版本，也就是 1.1.2 版本。</p><p>小米的 A/B 实验平台是一款通过 A/B 测试的方式，借助实验分组、流量拆分与科学评估等手段来辅助完成科学的业务决策，最终实现业务增长的一款运营工具产品。在实际业务中，为了验证一个新策略的效果，通常需要准备原策略 A 和新策略 B 两种方案。随后在总体用户中取出一小部分，将这部分用户完全随机地分在两个组中，使两组用户在统计角度无差别。将原策略 A 和新策略 B 分别展示给不同的用户组，一段时间后，结合统计方法分析数据，得到两种策略生效后指标的变化结果，并以此来判断新策略 B 是否符合预期。</p><p>小米的 A/B 实验平台有几类典型的查询应用：用户去重、指标求和、实验协方差计算等，查询类型会涉及较多的 Count(distinct)、Bitmap计算、Like语句等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="上线前验证">上线前验证<a class="hash-link" href="#上线前验证" title="标题的直接链接">​</a></h3><p>我们基于 Apache Doris 1.1.2 版本搭建了一个和小米线上 Apache Doris 0.13 版本在机器配置和机器规模上完全相同的测试集群，用于向量化版本上线前的验证。验证测试分为两个方面：单 SQL 串行查询测试和批量 SQL 并发查询测试。在这两种测试中，我们在保证两个集群数据完全相同的条件下，分别在 Doris 1.1.2 测试集群和小米线上 Doris 0.13 集群执行相同的查询 SQL 来做性能对比。我们的目标是，Doris 1.1.2 版本在小米线上 Doris 0.13 版本的基础上有 1 倍的查询性能提升。
两个集群配置完全相同，具体配置信息如下：</p><ul><li>集群规模：3 FE + 89 BE</li><li>BE节点CPU:  Intel(R) Xeon(R) Silver 4216 CPU @ 2.10GHz 16核 32线程 × 2</li><li>BE节点内存：256GB</li><li>BE节点磁盘：7.3TB × 12 HDD</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="单-sql-串行查询测试">单 SQL 串行查询测试<a class="hash-link" href="#单-sql-串行查询测试" title="标题的直接链接">​</a></h4><p>在该测试场景中，我们选取了小米A/B 实验场景中 7 个典型的查询 Case，针对每一个查询 Case，我们将扫描的数据时间范围分别限制为 1 天、7 天和 20 天进行查询测试，其中单日分区数据量级大约为 31 亿（数据量大约 2 TB），测试结果如图所示：</p><p><img loading="lazy" alt="7" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/7-8f6f2d02c9688f713ef48c8221c25158.png" width="750" height="450" class="img_ev3q"></p><p><img loading="lazy" alt="8" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/8-0ee361fa5acabc282382a20b61f5baaa.png" width="749" height="450" class="img_ev3q"></p><p><img loading="lazy" alt="9" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/9-f28d9b3dc18ad2f8314faaf514c5dc69.png" width="750" height="450" class="img_ev3q"></p><p>根据以上小米 A/B 实验场景下的单 SQL 串行查询测试结果所示，Doris 1.1.2 版本相比小米线上 Doris 0.13 版本至少有 3~5 倍的性能提升，效果显著。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="调优测试结果">调优测试结果<a class="hash-link" href="#调优测试结果" title="标题的直接链接">​</a></h3><p>我们基于小米的 A/B实验场景对 Apache Doris 1.1.2 版本进行了一系列调优，并将调优后的 Doris 1.1.2 版本与小米线上 Doris 0.13 版本分别进行了并发查询测试。测试情况如下：</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="测试-1">测试 1<a class="hash-link" href="#测试-1" title="标题的直接链接">​</a></h4><p>我们选择了 A/B 实验场景中一批典型的用户去重、指标求和以及协方差计算的查询 Case（SQL 总数量为 3245）对两个版本进行并发查询测试，测试表的单日分区数据大约为 31 亿（数据量大约 2 TB），查询的数据范围会覆盖最近一周的分区。测试结果如图所示，Doris 1.1.2 版本相比 Doris0.13版本，总体的平均延迟降低了大约 48%，P95 延迟降低了大约 49%。在该测试中，Doris 1.1.2 版本相比 Doris0.13 版本的查询性能提升了接近 1 倍。</p><p><img loading="lazy" alt="10" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/10-c9499045fecce0f0eae927ba3e0ac883.png" width="1080" height="338" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="测试-2">测试 2<a class="hash-link" href="#测试-2" title="标题的直接链接">​</a></h4><p>我们选择了 A/B实验场景下的 7 份 A/B 实验报告对两个版本进行测试，每份 A/B 实验报告对应小米 A/B实验平台页面的两个模块，每个模块对应数百或数千条查询 SQL。每一份实验报告都以相同的并发向两个版本所在的集群提交查询任务。测试结果如图所示，Doris 1.1.2 版本相比 Doris 0.13 版本，总体的平均延迟降低了大约 52%。在该测试中，Doris 1.1.2 版本相比 Doris 0.13 版本的查询性能提升了超过 1 倍。</p><p><img loading="lazy" alt="11" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/11-164d7e9bca3b81ccb6bae88a0048be41.png" width="750" height="450" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="测试-3">测试 3<a class="hash-link" href="#测试-3" title="标题的直接链接">​</a></h4><p>为了验证调优后的 Apache Doris 1.1.2 版本在小米 A/B 实验场景之外的性能表现，我们选取了小米用户行为分析场景进行了 Doris 1.1.2 版本和 Doris 0.13 版本的并发查询性能测试。我们选取了 2022年10月24日、25日、26日和 27日这 4 天的小米线上真实的行为分析查询 Case 进行对比查询，测试结果如图所示，Doris 1.1.2 版本相比 Doris 0.13 版本，总体的平均延迟降低了大约7 7%，P95 延迟降低了大约 83%。在该测试中，Doris 1.1.2 版本相比 Doris 0.13 版本的查询性能有 4~6 倍的提升。</p><p><img loading="lazy" alt="12" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/12-125f05fc3d7544d5f15edf2ab41184e8.png" width="1080" height="338" class="img_ev3q"></p><h1>总结</h1><p>自从 Apache Doris 从 2019 年上线第一个业务至今，目前 Apache Doris 已经在小米内部服务了数十个业务及子品牌、集群数量达到数十个、节点规模达到数百台。每天完成数万次用户在线分析查询，承担了包括增长分析和报表查询等绝大多数在线分析的需求。</p><p>经过一个多月的性能调优和测试，Apache Doris 1.1.2 版本在查询性能和稳定性方面已经达到了小米 A/B实验平台的上线要求，在某些场景下的查询性能甚至超过了我们的预期，希望本次分享可以给有需要的朋友一些可借鉴的经验参考。</p><p>与此同时，在以上小米的实践中，已有部分功能在 Apache Doris 1.0 或 1.1 版本中发布，部分 PR 已经合入社区 Master，将在不久后发布的 1.2 新版本中与大家见面。随着社区的快速发展，有越来越多小伙伴参与到社区建设中，社区活跃度有了极大的提升。Apache Doris 已经变得越来越成熟，并开始从单一计算存储一体的分析型 MPP 数据库走向湖仓一体的道路，相信在未来，还会有更多的数据分析场景被探索和实现。</p><h1>联系我们</h1><p>官网：<a href="http://doris.apache.org" target="_blank" rel="noopener noreferrer">http://doris.apache.org</a></p><p>Github：<a href="https://github.com/apache/doris" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris</a></p><p>dev邮件组：<a href="mailto:dev@doris.apache.org" target="_blank" rel="noopener noreferrer">dev@doris.apache.org</a></p>]]></content>
        <author>
            <name>魏祚</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris 1.2.0 Release]]></title>
        <id>/release-1.2.0</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-1.2.0"/>
        <updated>2022-12-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>亲爱的社区小伙伴们，再一次经历数月的等候后，我们很高兴地宣布，Apache Doris 于 2022 年 12 月 7 日迎来 1.2.0 Release 版本的正式发布！有近 118 位 Contributor 为 Apache Doris 提交了超 2400 项优化和修复，感谢每一位让 Apache Doris 更好的你！</p><p>自从社区正式确立 LTS 版本管理机制后，在 1.1.x 系列版本中不再合入大的功能，仅提供问题修复和稳定性改进，力求满足更多社区用户在稳定性方面的高要求。而在综合考虑版本迭代节奏和用户需求后，我们决定将众多新特性在 1.2 版本中发布，这无疑承载了众多社区用户和开发者的深切期盼，同时这也是一场厚积而薄发后的全面进化！</p><p>在 1.2 版本中，我们实现了全面的向量化、<strong>实现多场景查询性能 3-11 倍的提升</strong>，在 Unique Key 模型上实现了 Merge-on-Write 的数据更新模式、<strong>数据高频更新时查询性能提升达 3-6 倍</strong>，增加了 Multi-Catalog 多源数据目录、<strong>提供了无缝接入 Hive、ES、Hudi、Iceberg 等外部数据源的能力</strong>，引入了 Light Schema Change 轻量表结构变更、<strong>实现毫秒级的 Schema Change 操作并可以借助 Flink CDC 自动同步上游数据库的 DML 和 DDL 操作</strong>，以 JDBC 外部表替换了过去的 ODBC 外部表，支持了 Java UDF 和 Romote UDF 以及 Array 数组类型和 JSONB 类型，修复了诸多之前版本的性能和稳定性问题，推荐大家下载和使用！</p><h1>下载安装</h1><p>GitHub下载：<a href="https://github.com/apache/doris/releases" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/releases</a></p><p>官网下载页：<a href="https://doris.apache.org/download" target="_blank" rel="noopener noreferrer">https://doris.apache.org/download</a></p><p>源码地址：<a href="https://github.com/apache/doris/releases/tag/1.2.0-rc04" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/releases/tag/1.2.0-rc04</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="下载说明">下载说明：<a class="hash-link" href="#下载说明" title="标题的直接链接">​</a></h3><p>由于 Apache 服务器文件大小限制，官网下载页的 1.2.0 版本的二进制程序分为三个包：</p><ol><li><p>apache-doris-fe</p></li><li><p>apache-doris-be</p></li><li><p>apache-doris-java-udf-jar-with-dependencies</p></li></ol><p>其中新增的 <code>apache-doris-java-udf-jar-with-dependencies</code> 包用于支持 1.2.0 版本中的 JDBC 外表和 JAVA UDF 。下载后，需要将其中的 <code>java-udf-jar-with-dependencies.jar</code> 文件放到 <code>be/lib</code> 目录下，方可启动 BE，否则无法启动成功。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="部署说明">部署说明：<a class="hash-link" href="#部署说明" title="标题的直接链接">​</a></h3><p>从历史版本升级到 1.2.0 版本，需完整更新 fe、be 下的 bin 和 lib 目录。</p><p>其他升级注意事项，请完整阅读本发版通告最后一节“升级注意事项”以及安装部署文档 <a href="https://doris.apache.org/zh-CN/docs/dev/install/install-deploy" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/install/install-deploy</a>  和集群升级文档 <a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/cluster-management/upgrade" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/cluster-management/upgrade</a></p><h1>重要更新</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-全面向量化支持性能大幅提升">1. 全面向量化支持，性能大幅提升<a class="hash-link" href="#1-全面向量化支持性能大幅提升" title="标题的直接链接">​</a></h3><p>在 Apache Doris 1.2.0 版本中，系统所有模块都实现了向量化，包括数据导入、Schema Change、Compaction、数据导出、UDF 等。新版向量化执行引擎具备了完整替换原有非向量化引擎的能力，后续我们也将考虑在未来版本中去除原有非向量化引擎的代码。</p><p>与此同时，在全面向量化的基础上，我们对数据扫描、谓词计算、Aggregation 算子、HashJoin 算子、算子之间 Shuffle 效率等进行了全链路的优化，使得查询性能有了大幅提升。</p><p>我们对 Apache Doris 1.2.0 新版本进行了多个标准测试集的测试，同时选择了 1.1.3 版本和 0.15.0 版本作为对比参照项。经测，1.2.0 <strong>在 SSB-Flat 宽表场景上相对 1.1.3 版本整体性能提升了近 4 倍、相对于 0.15.0 版本性能提升了近 10 倍，在 TPC-H 多表关联场景上较 1.1.3 版本上有近 3 倍的提升、较 0.15.0 版本性能至少提升了 11 倍。</strong></p><p><img loading="lazy" alt="ssb_flat" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/ssb_flat-a8cfebbc53e6f2db116876e3d53e19c7.png" width="1522" height="674" class="img_ev3q"></p><p><img loading="lazy" alt="tpch" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/tpch-2048da37571ef8b1d4b0a49c3fba44ca.png" width="1526" height="726" class="img_ev3q"></p><p>同时，我们将 1.2.0 版本的测试数据提交到了全球知名的数据库测试排行榜 ClickBench，在最新的排行榜中，Apache Doris 1.2.0 新版本取得了通用机型（c6a.4xlarge, 500gb gp2）下<strong>查询性能 Cold Run 第二和 Hot Run 第三的醒目成绩，共有 8 个 SQL 刷新榜单最佳成绩、成为新的性能标杆</strong>。导入性能方面，1.2.0 新版本数据写入效率在同机型所有产品中位列第一，压缩前 70G 数据写入仅耗时 415s、单节点写入速度超过 170 MB/s，在实现极致查询性能的同时也保证了高效的写入效率！</p><p><img loading="lazy" alt="coldrun" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/coldrun-14421295f1be41b3c07f50cbf6ca22da.png" width="1080" height="789" class="img_ev3q"></p><p><img loading="lazy" alt="hotrun" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/hotrun-775474e22c7de74f0763c3cbca13e377.png" width="1080" height="786" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-在-unique-key-模型上实现了-merge-on-write-的数据更新模式">2. 在 Unique Key 模型上实现了 Merge-on-Write 的数据更新模式<a class="hash-link" href="#2-在-unique-key-模型上实现了-merge-on-write-的数据更新模式" title="标题的直接链接">​</a></h3><p>在过去版本中， Apache Doris 主要是通过 Unique Key 数据模型来实现数据实时更新的。但由于采用的是 Merge-on-Read 的实现方式，查询存在着效率瓶颈，有大量非必要的 CPU 计算资源消耗和 IO 开销，且可能将出现查询性能抖动等问题。</p><p>在 1.2.0 版本中，我们在原有的 Unique Key 数据模型上，增加了 Merge-on-Write 的数据更新模式。该模式在数据写入时即对需要删除或更新的数据进行标记，始终保证有效的主键只出现在一个文件中（即在写入的时候保证了主键的唯一性），不需要在读取的时候通过归并排序来对主键进行去重，这对于高频写入的场景来说，大大减少了查询执行时的额外消耗。此外还能够支持谓词下推，并能够很好利用 Doris 丰富的索引，在数据  IO 层面就能够进行充分的数据裁剪，大大减少数据的读取量和计算量，因此在很多场景的查询中都有非常明显的性能提升。</p><p>在比较有代表性的 SSB-Flat 数据集上，通过模拟多个持续导入场景，<strong>新版本的大部分查询取得了 3-6 倍的性能提升</strong>。</p><p><img loading="lazy" alt="mergeonwrite_ssb" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/mergeonwrite_ssb-f76d6e3636efd5bbf53d0d05fdc7d90d.png" width="1280" height="889" class="img_ev3q"></p><p>使用场景：所有对主键唯一性有需求，需要频繁进行实时 Upsert 更新的用户建议打开。</p><p>使用说明：作为新的 Feature 默认关闭，用户可以通过在建表时添加下面的 Property 来开启：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">“enable_unique_key_merge_on_write” = “true”</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>另外新版本 Merge-on-Write 数据更新模式与旧版本 Merge-on-Read 实现方式存在差异，因此已经创建的 Unique Key 表无法直接通过 Alter Table 添加 Property 来支持，只能在新建表的时候指定。如果用户需要将旧表转换到新表，可以使用 <code>insert into new_table select * from old_table</code> 的方式来实现。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-multi-catalog-多源数据目录">3. Multi Catalog 多源数据目录<a class="hash-link" href="#3-multi-catalog-多源数据目录" title="标题的直接链接">​</a></h3><p>Multi-Catalog 多源数据目录功能的目标在于能够帮助用户更方便对接外部数据目录，以增强 Apache Doris 的数据湖分析和联邦数据查询能力。</p><p>在过去版本中，当我们需要对接外部数据源时，只能在 Database 或 Table 层级对接。当外部数据目录 Schema 发生变化、或者外部数据目录的 Database 或 Table 非常多时，需要用户手工进行一一映射，维护量非常大。1.2.0 版本新增的多源数据目录功能为 Apache Doris 提供了快速接入外部数据源进行访问的能力，用户可以通过 <code>CREATE CATALOG</code> 命令连接到外部数据源，Doris 会自动映射外部数据源的库、表信息。之后，用户就可以像访问普通表一样，对这些外部数据源中的数据进行访问，避免了之前用户需要对每张表手动建立外表映射的复杂操作。</p><p>目前能支持以下数据源：</p><ol><li><p>Hive Metastore：可以访问包括 Hive、Iceberg、Hudi 在内的数据表，也可对接兼容 Hive Metastore 的数据源，如阿里云的 DataLake Formation，同时支持 HDFS 和对象存储上的数据访问。</p></li><li><p>Elasticsearch：访问 ES 数据源。</p></li><li><p>JDBC：支持通过 JDBC 访问 MySQL 数据源。</p></li></ol><p>注：相应的权限层级也会自动变更，详见“升级注意事项”部分</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/ecosystem/external-table/multi-catalog" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/ecosystem/external-table/multi-catalog</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-轻量表结构变更-light-schema-change">4. 轻量表结构变更 Light Schema Change<a class="hash-link" href="#4-轻量表结构变更-light-schema-change" title="标题的直接链接">​</a></h3><p>在过去版本中，Schema Change 是一项相对消耗比较大的工作，需要对数据文件进行修改，在集群规模和表数据量较大时执行效率会明显降低。同时由于是异步作业，当上游 Schema 发生变更时，需要停止数据同步任务并手动执行 Schema Change，增加开发和运维成本的同时还可能造成消费数据的挤压。</p><p>在 1.2.0 新版本中，对数据表的加减列操作，不再需要同步更改数据文件，仅需在 FE 中更新元数据即可，从而实现毫秒级的 Schema Change 操作，且存在导入任务时效率的提升更为显著。与此同时，使得 Apache Doris 在面对上游数据表维度变化时，可以更加快速稳定实现表结构同步，保证系统的高效且平稳运转。如用户可以通过 Flink CDC，可实现上游数据库到 Doris 的 DML 和 DDL 同步，进一步提升了实时数仓数据处理和分析链路的时效性与便捷性。</p><p><img loading="lazy" alt="lightschemachange_compare.png" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/lightschemachange_compare-07aee86928ef33271351a31bec3ed9cf.png" width="1280" height="393" class="img_ev3q"></p><p>使用说明：作为新的 Feature 默认关闭，用户可以通过在建表时添加下面的 Property 来开启：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"light_schema_change" = "true"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-jdbc-外部表">5. JDBC 外部表<a class="hash-link" href="#5-jdbc-外部表" title="标题的直接链接">​</a></h3><p>在过去版本中，Apache Doris 提供了 ODBC 外部表的方式来访问 MySQL、Oracle、SQL Server、PostgreSQL 等数据源，但由于 ODBC 驱动版本问题可能造成系统的不稳定。相对于 ODBC，JDBC 接口更为统一且支持数据库众多，因此在 1.2.0 版本中我们实现了 JDBC 外部表以替换原有的 ODBC 外部表。在新版本中，用户可以通过 JDBC 连接支持 JDBC 协议的外部数据源，</p><p>当前已适配的数据源包括：</p><ul><li>MySQL</li><li>PostgreSQL</li><li>Oracle</li><li>SQLServer</li><li>ClickHouse</li></ul><p>更多数据源的适配已经在规划之中，原则上任何支持 JDBC 协议访问的数据库均能通过 JDBC 外部表的方式来访问。而之前的 ODBC 外部表功能将会在后续的某个版本中移除，还请尽量切换到 JDBC 外表功能。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/ecosystem/external-table/jdbc-of-doris/" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/ecosystem/external-table/jdbc-of-doris/</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-java-udf">6. JAVA UDF<a class="hash-link" href="#6-java-udf" title="标题的直接链接">​</a></h3><p>在过去版本中，Apache Doris 提供了 C++ 语言的原生 UDF，便于用户通过自己编写自定义函数来满足特定场景的分析需求。但由于原生 UDF 与 Doris 代码耦合度高、当 UDF 出现错误时可能会影响集群稳定性，且只支持 C++ 语言，对于熟悉 Hive、Spark 等大数据技术栈的用户而言存在较高门槛，因此在 1.2.0 新版本我们增加了 Java 语言的自定义函数，支持通过 Java 编写 UDF/UDAF，方便用户在 Java 生态中使用。同时，通过堆外内存、Zero Copy 等技术，使得跨语言的数据访问效率大幅提升。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/ecosystem/udf/java-user-defined-function" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/ecosystem/udf/java-user-defined-function</a></p><p>示例：<a href="https://github.com/apache/doris/tree/master/samples/doris-demo" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/tree/master/samples/doris-demo</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-remote-udf">7. Remote UDF<a class="hash-link" href="#7-remote-udf" title="标题的直接链接">​</a></h3><p>远程 UDF 支持通过 RPC 的方式访问远程用户自定义函数服务，从而彻底消除用户编写 UDF 的语言限制，用户可以使用任意编程语言实现自定义函数，完成复杂的数据分析工作。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/ecosystem/udf/remote-user-defined-function" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/ecosystem/udf/remote-user-defined-function</a></p><p>示例：<a href="https://github.com/apache/doris/tree/master/samples/doris-demo" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/tree/master/samples/doris-demo</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-arrayjsonb-复合数据类型">8. Array/JSONB 复合数据类型<a class="hash-link" href="#8-arrayjsonb-复合数据类型" title="标题的直接链接">​</a></h3><ul><li>Array 类型</li></ul><p>支持了数组类型，同时也支持多级嵌套的数组类型。在一些用户画像，标签等场景，可以利用 Array 类型更好的适配业务场景。同时在新版本中，我们也实现了大量数组相关的函数，以更好的支持该数据类型在实际场景中的应用。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/ARRAY" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/ARRAY</a></p><p>相关函数：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/array-functions/array" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/array-functions/array</a></p><ul><li>JSONB 类型</li></ul><p>支持二进制的 JSON 数据类型 JSONB。该类型提供更紧凑的 JSONB 编码格式，同时提供在编码格式上的数据访问，相比于使用字符串存储的 JSON 数据，有数倍的性能提升。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/JSONB" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/JSONB</a></p><p>相关函数：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/json-functions/jsonb_parse" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/json-functions/jsonb_parse</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="9-datev2datatimev2-新版日期日期时间数据类型">9. DateV2/DatatimeV2 新版日期/日期时间数据类型<a class="hash-link" href="#9-datev2datatimev2-新版日期日期时间数据类型" title="标题的直接链接">​</a></h3><p>支持 DataV2 日期类型和 DatatimeV2 日期时间类型，相较于原有的 Data 和 Datatime 效率更高且支持最多到微秒的时间精度，建议使用新版日期类型。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/DATETIMEV2/" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/DATETIMEV2/</a></p><p>  <a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/DATEV2" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Types/DATEV2</a></p><p>影响范围：</p><ol><li>用户需要在建表时指定 DateV2 和 DatetimeV2，原有表的 Date 以及 Datetime 不受影响。</li><li>Datev2 和 Datetimev2 在与原来的 Date 和 Datetime 做计算时（例如等值连接），原有类型会被cast 成新类型做计算</li><li>Example 参考文档中说明</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="10-全新内存管理框架">10. 全新内存管理框架<a class="hash-link" href="#10-全新内存管理框架" title="标题的直接链接">​</a></h3><p>在 Apache Doris 1.2.0 版本中我们增加了全新的内存跟踪器（Memory Tracker），用以记录 Doris BE 进程内存使用，包括查询、导入、Compaction、Schema Change 等任务生命周期中使用的内存以及各项缓存。通过 Memory Tracker 实现了更加精细的内存监控和控制，大大减少了因内存超限导致的 OOM 问题，使系统稳定性进一步得到提升。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/maint-monitor/memory-management/memory-tracker" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/maint-monitor/memory-management/memory-tracker</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="11-table-valued-function-表函数">11. Table Valued Function 表函数<a class="hash-link" href="#11-table-valued-function-表函数" title="标题的直接链接">​</a></h3><p>增加了 Table Valued Function（TVF，表函数），TVF 可以视作一张普通的表，可以出现在 SQL 中所有“表”可以出现的位置，让用户像访问关系表格式数据一样，读取或访问来自 HDFS 或 S3 上的文件内容，</p><p>例如使用 S3 TVF 实现对象存储上的数据导入：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">insert into tbl select * from s3("s3://bucket/file.*", "ak" = "xx", "sk" = "xxx") where c1 &gt; 2;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者直接查询 HDFS 上的数据文件：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">insert into tbl select * from hdfs("hdfs://bucket/file.*") where c1 &gt; 2;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>TVF 可以帮助用户充分利用 SQL 丰富的表达能力，灵活处理各类数据。</p><p>文档：
<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/table-functions/s3" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/table-functions/s3</a></p><p><a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/table-functions/hdfs" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-functions/table-functions/hdfs</a></p><h1>更多功能</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-更便捷的分区创建方式">1. 更便捷的分区创建方式<a class="hash-link" href="#1-更便捷的分区创建方式" title="标题的直接链接">​</a></h3><p>支持通过 <code>FROM TO</code> 命令创建一个时间范围内的多个分区。</p><p>文档搜索“MULTI RANGE”：
<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE</a></p><p>示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 根据时间date 创建分区，支持多个批量逻辑和单独创建分区的混合使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PARTITION BY RANGE(event_day)(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FROM ("2000-11-14") TO ("2021-11-14") INTERVAL 1 YEAR,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FROM ("2021-11-14") TO ("2022-11-14") INTERVAL 1 MONTH,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FROM ("2022-11-14") TO ("2023-01-03") INTERVAL 1 WEEK,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FROM ("2023-01-03") TO ("2023-01-14") INTERVAL 1 DAY,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PARTITION p_20230114 VALUES [('2023-01-14'), ('2023-01-15'))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 根据时间datetime 创建分区</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PARTITION BY RANGE(event_time)(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FROM ("2023-01-03 12") TO ("2023-01-14 22") INTERVAL 1 HOUR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-列重命名">2. 列重命名<a class="hash-link" href="#2-列重命名" title="标题的直接链接">​</a></h3><p>对于开启了 Light Schema Change 的表，支持对列进行重命名。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Alter/ALTER-TABLE-RENAME" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Alter/ALTER-TABLE-RENAME  </a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-更丰富权限管理">3. 更丰富权限管理<a class="hash-link" href="#3-更丰富权限管理" title="标题的直接链接">​</a></h3><ul><li>支持行级权限</li></ul><p>可以通过 <code>CREATE ROW POLICY</code> 命令创建行级权限。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-POLICY" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-POLICY</a></p><ul><li><p>支持指定密码强度、过期时间等。</p></li><li><p>支持在多次失败登录后锁定账户。</p></li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Account-Management-Statements/ALTER-USER" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Account-Management-Statements/ALTER-USER</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-导入相关">4. 导入相关<a class="hash-link" href="#4-导入相关" title="标题的直接链接">​</a></h3><ul><li>CSV 导入支持带 header 的 CSV 文件。</li></ul><p>在文档中搜索 <code>csv_with_names</code>：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/STREAM-LOAD/" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/STREAM-LOAD/</a></p><ul><li>Stream Load 新增 <code>hidden_columns</code>，可以显式指定 delete flag 列和 sequence 列。</li></ul><p>在文档中搜索 <code>hidden_columns</code>：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/STREAM-LOAD" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/STREAM-LOAD</a></p><ul><li><p>Spark Load 支持 Parquet 和 ORC 文件导入。</p></li><li><p>支持清理已完成的导入的 Label
文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/CLEAN-LABEL" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/CLEAN-LABEL</a></p></li><li><p>支持通过状态批量取消导入作业
文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/CANCEL-LOAD" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Load/CANCEL-LOAD</a></p></li><li><p>Broker Load 新增支持阿里云 OSS，腾讯 CHDFS 和华为云 OBS。</p></li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/advanced/broker" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/advanced/broker</a></p><ul><li>支持通过 hive-site.xml 文件配置访问 HDFS。</li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/config/config-dir" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/config/config-dir</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-支持通过-show-catalog-recycle-bin-功能查看回收站中的内容">5. 支持通过 <code>SHOW CATALOG RECYCLE BIN</code> 功能查看回收站中的内容。<a class="hash-link" href="#5-支持通过-show-catalog-recycle-bin-功能查看回收站中的内容" title="标题的直接链接">​</a></h3><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Show-Statements/SHOW-CATALOG-RECYCLE-BIN" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Show-Statements/SHOW-CATALOG-RECYCLE-BIN</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-支持-select--except-语法">6. 支持 <code>SELECT * EXCEPT</code> 语法。<a class="hash-link" href="#6-支持-select--except-语法" title="标题的直接链接">​</a></h3><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/data-table/basic-usage" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/data-table/basic-usage</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-outfile-支持-orc-格式导出并且支持多字节分隔符">7. OUTFILE 支持 ORC 格式导出，并且支持多字节分隔符。<a class="hash-link" href="#7-outfile-支持-orc-格式导出并且支持多字节分隔符" title="标题的直接链接">​</a></h3><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/OUTFILE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/OUTFILE</a></p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/OUTFILE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/OUTFILE</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-支持通过配置修改可保存的-query-profile-的数量">8. 支持通过配置修改可保存的 Query Profile 的数量。<a class="hash-link" href="#8-支持通过配置修改可保存的-query-profile-的数量" title="标题的直接链接">​</a></h3><p>文档搜索 FE 配置项：<code>max_query_profile_num</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="9-delete-语句支持-in-谓词条件并且支持分区裁剪">9. DELETE 语句支持 IN 谓词条件。并且支持分区裁剪。<a class="hash-link" href="#9-delete-语句支持-in-谓词条件并且支持分区裁剪" title="标题的直接链接">​</a></h3><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/DELETE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/DELETE</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="10-时间列的默认值支持使用-current_timestamp">10. 时间列的默认值支持使用 <code>CURRENT_TIMESTAMP</code><a class="hash-link" href="#10-时间列的默认值支持使用-current_timestamp" title="标题的直接链接">​</a></h3><p>文档中搜索 "CURRENT_TIMESTAMP"：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="11-添加两张系统表backendsrowsets">11. 添加两张系统表：backends、rowsets<a class="hash-link" href="#11-添加两张系统表backendsrowsets" title="标题的直接链接">​</a></h3><p>backends 是 Doris 中内置系统表，存放在 information_schema 数据库下，通过该系统表可以查看当前 Doris 集群中的 BE 节点信息。</p><p>rowsets 是 Doris 中内置系统表，存放在 information_schema 数据库下，通过该系统表可以查看 Doris 集群中各个 BE 节点当前 rowsets 情况。</p><p>文档：</p><p><a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/system-table/backends" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/system-table/backends</a></p><p><a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/system-table/rowsets" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/system-table/rowsets</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="12-备份恢复">12. 备份恢复<a class="hash-link" href="#12-备份恢复" title="标题的直接链接">​</a></h3><ul><li><p>Restore作业支持 <code>reserve_replica</code> 参数，使得恢复后的表的副本数和备份时一致。</p></li><li><p>Restore 作业支持 <code>reserve_dynamic_partition_enable</code> 参数，使得恢复后的表保持动态分区开启状态。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Backup-and-Restore/RESTORE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Backup-and-Restore/RESTORE</a></p></li><li><p>支持通过内置的 libhdfs 进行备份恢复操作，不再依赖 broker。</p><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Backup-and-Restore/CREATE-REPOSITORY" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Backup-and-Restore/CREATE-REPOSITORY</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="13-支持同机多磁盘之间的数据均衡">13. 支持同机多磁盘之间的数据均衡<a class="hash-link" href="#13-支持同机多磁盘之间的数据均衡" title="标题的直接链接">​</a></h3><p>文档：</p><p><a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Database-Administration-Statements/ADMIN-REBALANCE-DISK" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Database-Administration-Statements/ADMIN-REBALANCE-DISK</a></p><p><a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Database-Administration-Statements/ADMIN-CANCEL-REBALANCE-DISK" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Database-Administration-Statements/ADMIN-CANCEL-REBALANCE-DISK</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="14-routine-load-支持订阅-kerberos-认证的-kafka-服务">14. Routine Load 支持订阅 Kerberos 认证的 Kafka 服务。<a class="hash-link" href="#14-routine-load-支持订阅-kerberos-认证的-kafka-服务" title="标题的直接链接">​</a></h3><p>文档中搜索 kerberos：<a href="https://doris.apache.org/zh-CN/docs/dev/data-operate/import/import-way/routine-load-manual" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/data-operate/import/import-way/routine-load-manual</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="15-new-built-in-function-新增内置函数">15. New built-in-function 新增内置函数<a class="hash-link" href="#15-new-built-in-function-新增内置函数" title="标题的直接链接">​</a></h3><p>  新增以下内置函数:</p><ul><li>cbrt</li><li>sequence_match/sequence_count </li><li>mask/mask_first_n/mask_last_n</li><li>elt</li><li>any/any_value</li><li>group_bitmap_xor</li><li>ntile</li><li>nvl</li><li>uuid</li><li>initcap</li><li>regexp_replace_one/regexp_extract_all</li><li>multi_search_all_positions/multi_match_any</li><li>domain/domain_without_www/protocol</li><li>running_difference</li><li>bitmap_hash64</li><li>murmur_hash3_64</li><li>to_monday</li><li>not_null_or_empty</li><li>window_funnel</li><li>outer combine
以及所有 Array 函数</li></ul><h1>升级注意事项</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fe-元数据版本变更-重要">FE 元数据版本变更 【重要】<a class="hash-link" href="#fe-元数据版本变更-重要" title="标题的直接链接">​</a></h3><p>FE Meta Version 由 107 变更为 114，因此从 1.1.x 以及更早版本升级至 1.2.0 版本后，不可回滚到之前版本。
升级过程中，建议通过灰度升级的方式，先升级部分节点并观察业务运行情况，以降低升级风险，若执行非法的回滚操作将可能导致数据丢失与损坏。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="行为改变">行为改变<a class="hash-link" href="#行为改变" title="标题的直接链接">​</a></h3><ul><li><p>权限层级变更。</p><p>因为引入了 Catalog 层级，所以相应的用户权限层级也会自动变更。规则如下：</p><ul><li>GlobalPrivs 和 ResourcePrivs 保持不变</li><li>新增 CatalogPrivs 层级。</li><li>原 DatabasePrivs 层级增加 internal 前缀（表示 internal catalog 中的 db）</li><li>原 TablePrivs 层级增加 internal 前缀（表示internal catalog中的 tbl）</li></ul></li><li><p>GroupBy 和 Having 子句中，优先使用列名而不是别名进行匹配。</p></li><li><p>不再支持创建以 "mv<em>" 开头的列。"mv</em>" 是物化视图中的保留关键词</p></li><li><p>移除了 order by 语句默认添加的 65535 行的 Limit 限制，并增加 Session 变量 <code>default_order_by_limit</code> 可以自定配置这个限制。</p></li><li><p>"Create Table As Select" 生成的表，所有字符串列统一使用 String类型，不再区分 varchar/char/string </p></li><li><p>audit log 中，移除 db 和 user 名称前的 <code>default_cluster</code> 字样。</p></li><li><p>audit log 中增加 sql digest 字段</p></li><li><p>union 子句总 order by 逻辑变动。新版本中，order by 子句将在 union 执行完成后执行，除非通过括号进行显式的关联。</p></li><li><p>进行 decommission 操作时，会忽略回收站中的 tablet，确保 decomission 能够完成。</p></li><li><p>Decimal 的返回结果将按照原始列中声明的精度进行显示 ，或者按照显式指定的 cast 函数中的精度进行展示。</p></li><li><p>列名的长度限制由 64 变更为 256</p></li><li><p>FE 配置项变动</p><ul><li>默认开启 <code>enable_vectorized_load</code> 参数。</li><li>增大了 <code>create_table_timeout</code> 值。建表操作的默认超时时间将增大。 </li><li>修改 <code>stream_load_default_timeout_second</code> 默认值为 3天。</li><li>修改<code>alter_table_timeout_second</code> 的默认值为 一个月。</li><li>增加参数 <code>max_replica_count_when_schema_change</code> 用于限制 alter 作业中涉及的 replica数量，默认为100000。</li><li>添加 <code>disable_iceberg_hudi_table</code>。默认禁用了 iceberg 和 hudi 外表，推荐使用 multi catalog功能。</li></ul></li><li><p>BE 配置项变动</p><ul><li>移除了 <code>disable_stream_load_2pc</code> 参数。2PC的stream load可直接使用。</li><li>修改<code>tablet_rowset_stale_sweep_time_sec</code> ，从1800秒修改为 300 秒。</li></ul></li><li><p>Session变量变动</p><ul><li>修改变量 <code>enable_insert_strict</code> 默认为 true。这会导致一些之前可以执行，但是插入了非法值的insert操作，不再能够执行。</li><li>修改变量 <code>enable_local_exchange</code> 默认为 true </li><li>默认通过 lz4 压缩进行数据传输，通过变量 <code>fragment_transmission_compression_codec</code> 控制 </li><li>增加 <code>skip_storage_engine_merge</code> 变量，用于调试 unique 或 agg 模型的数据
文档：<a href="https://doris.apache.org/zh-CN/docs/dev/advanced/variables" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/advanced/variables</a></li></ul></li><li><p>BE 启动脚本会通过 <code>/proc/sys/vm/max_map_count</code> 检查数值是否大于200W，否则启动失败。</p></li><li><p>移除了 mini load 接口</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="升级过程中需注意">升级过程中需注意<a class="hash-link" href="#升级过程中需注意" title="标题的直接链接">​</a></h3><ol><li>升级准备</li></ol><ul><li>需替换：lib, bin 目录（start/stop 脚本均有修改）</li><li>BE 也需要配置 JAVA_HOME，已支持 JDBC Table 和 Java UDF。</li><li>fe.conf 中默认 JVM Xmx 参数修改为 8GB。</li></ul><ol start="2"><li>升级过程中可能的错误</li></ol><ul><li>repeat 函数不可使用并报错：<code>vectorized repeat function cannot be executed</code>，可以在升级前先关闭向量化执行引擎。</li><li>schema change 失败并报错：<code>desc_tbl is not set. Maybe the FE version is not equal to the BE</code></li><li>向量化 hash join 不可使用并报错。<code>vectorized hash join cannot be executed</code>。可以在升级前先关闭向量化执行引擎。</li></ul><p>以上错误在完全升级后会恢复正常。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="性能影响">性能影响<a class="hash-link" href="#性能影响" title="标题的直接链接">​</a></h3><ul><li>默认使用 JeMalloc 作为新版本 BE 的内存分配器，替换 TcMalloc 。</li></ul><p>JeMalloc 相比 TcMalloc 使用的内存更少、高并发场景性能更高，但在内存充足的性能测试时，TcMalloc 比 JeMalloc 性能高5%-10%，详细测试见: <a href="https://github.com/apache/doris/pull/12496" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/pull/12496</a></p><ul><li>tablet sink 中的 batch size 修改为至少 8K。</li><li>默认关闭 Page Cache 和 减少 Chunk Allocator 预留内存大小</li></ul><p>Page Cache 和 Chunk Allocator 分别缓存用户数据块和内存预分配，这两个功能会占用一定比例的内存并且不会释放。由于这部分内存占用无法灵活调配，导致在某些场景下可能因这部分内存占用而导致其他任务内存不足，影响系统稳定性和可用性，因此新版本中默认关闭了这两个功能。</p><p>但在某些延迟敏感的报表场景下，关闭该功能可能会导致查询延迟增加。如用户担心升级后该功能对业务造成影响，可以通过在 be.conf 中增加以下参数以保持和之前版本行为一致。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">disable_storage_page_cache=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chunk_reserved_bytes_limit=10%</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-变化">API 变化<a class="hash-link" href="#api-变化" title="标题的直接链接">​</a></h3><ul><li><p>BE 的 http api 错误返回信息，由 <code>{"status": "Fail", "msg": "xxx"}</code> 变更为更具体的 <code>{"status": "Not found", "msg": "Tablet not found. tablet_id=1202"}</code></p></li><li><p><code>SHOW CREATE TABLE</code> 中， comment的内容由双引号包裹变为单引号包裹</p></li><li><p>支持普通用户通过 http 命令获取 query profile。</p></li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/http-actions/fe/manager/query-profile-action" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/http-actions/fe/manager/query-profile-action</a></p><ul><li>优化了 sequence 列的指定方式，可以直接指定列名。</li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/data-operate/update-delete/sequence-column-manual" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/data-operate/update-delete/sequence-column-manual</a></p><ul><li><code>show backends</code> 和 <code>show tablets</code> 返回结果中，增加远端存储的空间使用情况 (#11450)</li><li>移除了 Num-Based Compaction 相关代码(#13409)</li><li>重构了BE的错误码机制，部分返回的错误信息会发生变化(#8855)</li></ul><h1>其他</h1><ul><li>支持Docker 官方镜像。</li><li>支持在 MacOS(x86/M1) 和 ubuntu-22.04 上编译 Doris</li><li>支持进行image 文件的校验。</li></ul><p>文档搜索“--image”：<a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/maint-monitor/metadata-operation" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/maint-monitor/metadata-operation</a></p><ul><li>脚本相关<ul><li>FE、BE 的 stop 脚本支持通过 <code>--grace</code> 参数退出FE、BE（使用 kill -15 信号代替 kill -9）</li><li>FE start 脚本支持通过 --version 查看当前FE 版本(#11563)</li></ul></li><li>支持通过 <code>ADMIN COPY TABLET</code> 命令获取某个 tablet 的数据和相关建表语句，用于本地问题调试 </li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Database-Administration-Statements/ADMIN-COPY-TABLET" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Database-Administration-Statements/ADMIN-COPY-TABLET</a></p><ul><li>支持通过 http api，获取一个SQL语句相关的 建表语句，用于本地问题复现</li></ul><p>文档：<a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/http-actions/fe/query-schema-action" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/admin-manual/http-actions/fe/query-schema-action</a></p><ul><li>支持建表时关闭这个表的 compaction 功能，用于测试 </li></ul><p>文档中搜索 "disble_auto_compaction"：<a href="https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE</a></p><h1>致谢</h1><p>Apache Doris 1.2.0 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是（首字母排序）：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@924060929</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@a19920714liou</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@adonis0147</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Aiden-Dong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@aiwenmo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@AshinGau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@b19mud</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BePPPower</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BiteTheDDDDt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@bridgeDream</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ByteYue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caiconghui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@CalvinKirs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@cambyzju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caoliang-web</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@carlvinhust2012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@catpineapple</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ccoffline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chenlinzhong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chovy-3012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@coderjiang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@cxzl25</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataalive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataroaring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dependabot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dinggege1024</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@DongLiang-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Doris-Extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@eldenmoon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@EmmyMiao87</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@englefly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@FreeOnePlus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gabriel39</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gaodayue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@geniusjoe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gj-zhang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gnehil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@GoGoWen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@HappenLee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hello-stephen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Henry2SS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hf200012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@huyuanfeng2018</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jacktengg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jackwener</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jeffreys-cat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Jibing-Li</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@JNSimba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Kikyou1997</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Lchangliang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@LemonLiTree</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lexoning</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liaoxin01</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lide-reed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@link3280</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liutang123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liuyaolin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@LOVEGISER</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lsy3993</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luozenglin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luzhijing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@madongz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman-cmy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morrySnow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mrhhsg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Myasuka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@myfjdthink</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@nextdreamblue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pan3793</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pangzhili</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pengxiangyu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@platoneko</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qidaye</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qzsee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SaintBacchus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SeekingYang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@smallhibiscus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@sohardforaname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@song7788q</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@spaces-X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ssusieee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@stalary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@starocean999</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SWJTU-ZhangLei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@TaoZex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@timelxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Wahno</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangbo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangshuo128</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangyf0555</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weizhengte</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weizuo93</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wsjz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wunan1210</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xhmz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokangguo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinyiZzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xy720</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yangzhg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Yankee24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yeyudefeng</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yiguolei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yinzhijian</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yixiutt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yuanyuan8983</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zbtzbtzbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zenoyang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangboya1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangstar333</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhannngchen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ZHbamboo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshiJ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhenhb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhqu1148980644</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zuochunwei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zy-kkk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在京东搜索实时 OLAP 探索与实践]]></title>
        <id>/JD_OLAP</id>
        <link href="https://doris.apache.org/zh-CN/blog/JD_OLAP"/>
        <updated>2022-12-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>京东搜索实时 OLAP 探索与实践</h1><p><img loading="lazy" alt="kv" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/kv-e94fd46c1522a3383d161daec2249d18.png" width="900" height="383" class="img_ev3q"></p><blockquote><p>前言
本文讨论了京东搜索在实时流量数据分析方面，利用Apache Flink和Apache Doris进行的探索和实践。流式计算在近些年的热度与日俱增：从Google Dataflow论文的发表，到Apache Flink计算引擎逐渐站到舞台中央，再到Apache Druid等实时分析型数据库的广泛应用，流式计算引擎百花齐放。但不同的业务场景，面临着不同的问题，没有哪一种引擎是万能的。我们希望京东搜索业务在流计算的应用实践，能够给到大家一些启发，也欢迎大家多多交流，给我们提出宝贵的建议。</p></blockquote><blockquote><p>作者：李哲，京东搜推数据开发工程师，曾就职于美团点评，主要从事离线数据开发、流计算开发以及OLAP多维查询引擎的应用开发。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="京东与京东搜索">京东与京东搜索<a class="hash-link" href="#京东与京东搜索" title="标题的直接链接">​</a></h2><p>京东集团（NASDAQ：JD）中国领先的电商企业，2021年全年净收入达到9516亿元人民币。京东集团旗下设有京东零售、京东国际、京东科技、京东物流、京东云等。 京东集团于2014年5月在美国纳斯达克证券交易所正式挂牌上市。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="搜索业务对实时数据分析的需求">搜索业务对实时数据分析的需求<a class="hash-link" href="#搜索业务对实时数据分析的需求" title="标题的直接链接">​</a></h2><p>京东搜索作为电商平台的入口，为众多商家与用户提供连接的纽带。京东搜索发挥着导流的作用，给用户提供表达需求的入口；为了正确理解用户意图，将用户的需求进行高效的转化，线上同时运行着多个AB实验算法，遍及POP形态与自营形态的多个商品。而这些商品所属的品类、所在的组织架构以及品牌店铺等属性，都需要在线进行监控，以衡量转化的效果和承接的能力。目前搜索上层应用业务对实时数据的需求，主要包含三部分内容：
1、 搜索整体数据的实时分析。
2、 AB实验效果的实时监控。
3、 热搜词的Top榜单以反映舆情的变化。
这三部分数据需求，都需要进行深度的下钻，维度细化需要到SKU粒度。同时我们也承担着搜索实时数据平台的建设任务，为下游用户输出不同层次的实时流数据。
我们的用户包括搜索的运营、产品、算法以及采销人员。虽然不同用户关心的数据粒度不同、时间频率不同、维度也不同，但是我们希望能够建立统一的实时OLAP数据仓库，并提供一套安全、可靠的、灵活的实时数据服务。
目前每日新增的曝光日志达到几亿条记录，而拆分到SKU粒度的日志则要翻10倍，再细拆到AB实验的SKU粒度时，数据量则多达上百亿记录，多维数据组合下的聚合查询要求秒级响应时间，这样的数据量也给团队带来了不小的挑战。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="实时技术架构演进">实时技术架构演进<a class="hash-link" href="#实时技术架构演进" title="标题的直接链接">​</a></h2><p>我们之前的方案是以Apache Storm引擎进行点对点的数据处理，这种方式在业务需求快速增长的阶段，可以快速的满足实时报表的需求。但是随着业务的不断发展、数据量逐渐增加以及需求逐渐多样化，弊端随之产生。例如灵活性差、数据一致性无法满足、开发效率较低、资源成本增加等。</p><p><img loading="lazy" alt="page_2-zh" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/page_2-zh-3261d16224daf63c18e91b2644108848.png" width="1684" height="801" class="img_ev3q"></p><p>为解决之前架构出现的问题，我们首先进行了架构升级，将storm引擎替换为Apache Flink，用以实现高吞吐、exactly once的处理语义。同时根据搜索数据的特点，将实时数据进行分层处理，构建出PV流明细层、SKU流明细层和AB实验流明细层，期望基于不同明细层的实时流，构建上层的实时OLAP层。
OLAP层的在技术选型时，需要满足以下几点：
1：数据延迟在分钟级，查询响应时间在秒级
2：标准SQL交互引擎，降低使用成本
3：支持join操作，方便以维度级别增加属性信息
4：流量数据可以近似去重，但订单行要精准去重
5：高吞吐，每分钟数据量在千万级记录，每天数百亿条新增记录
6：前端业务较多，查询并发度不能太低
通过对比目前业界广泛使用的支持实时导入的OLAP引擎，我们在druid、ES、clickhouse和doris之间做了横向比较：</p><p><img loading="lazy" alt="page_3-zh" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/page_3-zh-bb25c0ea2faa03912dea231b8b207d3e.png" width="2315" height="758" class="img_ev3q"></p><p>通过对比开源的几款实时OLAP引擎，我们发现doris和clickhouse能够满足我们的需求，但是clickhouse的并发度太低是个潜在的风险，而且clickhouse的数据导入没有事务支持，无法实现exactly once语义，对标准sql的支持也是有限的。
最终，我们选定doris作为聚合层，用于实时OLAP分析。对于流量数据，使用聚合模型建表；对于订单行，我们使用Uniq模型，保证同一个订单最终只会存储一条记录，从而达到订单行精准去重的目的。在flink处理时，我们也将之前的任务拆解，将反复加工的逻辑封装，每一次处理都生成新的topic流，明细层细分了不同粒度的实时流。新方案如下：</p><p><img loading="lazy" alt="page_4-zh" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/page_4-zh-87f0c1b0fea8992d98b23ad9a02b3d1e.png" width="3004" height="1571" class="img_ev3q"></p><p>目前的技术架构中，flink的任务是非常轻的。基于生产的数据明细层，我们直接使用了doris来充当聚合层的功能，将原本可以在flink中实现的窗口计算，下沉到doris中完成。利用doris的routine load消费实时数据，虽然数据在导入前是明细粒度，但是基于聚合模型，导入后自动进行异步聚合。而聚合度的高低，完全根据维度的个数与维度的基数决定。通过在base表上建立rollup，在导入时双写或多写并进行预聚合操作，这有点类似于物化视图的功能，可以将数据进行高度的汇总，以提升查询性能。
在明细层采用kafka直接对接到doris，还有一个好处就是这种方式天然的支持数据回溯。数据回溯简单说就是当遇到实时数据的乱序问题时，可以将“迟到”的数据进行重新计算，更新之前的结果。这是因为我们导入的是明细数据，延迟的数据无论何时到达都可以被写入到表中，而查询接口只需要再次进行查询即可获得最新的计算结果。最终方案的数据流图如下：</p><p><img loading="lazy" alt="page_5-zh" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/page_5-zh-248c2ca88f12afd922abf431162b289c.png" width="1137" height="729" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="doris在大促期间的优化">Doris在大促期间的优化<a class="hash-link" href="#doris在大促期间的优化" title="标题的直接链接">​</a></h2><p>上文提到我们在doris中建立了不同粒度的聚合模型，包括PV粒度、SKU粒度以及AB实验粒度。我们这里以每日生产数据量最大的曝光AB实验模型为例，阐述在doris中如何支持大促期间每日新增百亿条记录的查询的。
AB实验的效果监控，业务上需要10分钟、30分钟、60分钟以及全天累计等四个时间段，同时需要根据渠道、平台和一二三级品类等维度进行下钻分析，观测的指标则包含曝光PV、UV、曝光SKU件次、点击PV、点击UV等基础指标，以及CTR等衍生指标。
在数据建模阶段，我们将曝光实时数据建立聚合模型，其中K空间包含日期字段、分钟粒度的时间字段、渠道、平台、一二三级品类等，V空间则包含上述的指标列，其中UV和PV进行HLL近似计算，而SKU件次则采用SUM函数，每到来一条新记录则加1。由于AB实验数据都是以AB实验位作为过滤条件，因此将实验位字段设置为分桶字段，查询时能够快速定位tablet分片。值得注意的是，HLL的近似度在目前PV和UV的基数下，实际情况误差在0.8%左右，符合预期。
目前doris的集群共30+台BE，存储采用的是支持NVMe协议的SSD硬盘。AB实验曝光topic的分区数为40+，每日新增百亿条数据。在数据导入阶段，我们主要针对导入任务的三个参数进行优化：最大时间间隔、最大数据量以及最大记录数。当这3个指标中任何一个达到设置的阈值时，任务都会触发导入操作。为了更好的了解任务每次触发的条件，达到10分钟消费6亿条记录的压测目标，我们通过间隔采样的方法，每隔3分钟采样一次任务的情况，获取Statistic信息中的receivedBytes、cimmittedTaskNum、loadedRows以及taskExecuteTimeMs数值。通过对上述数值在前后2个时间段的差值计算，确定每个任务触发的条件，并调整参数，以在吞吐和延迟之间进行平衡，最终达到压测的要求。
为了实现快速的多维数据查询，基于base表建立了不同的rollup，同时每个rollup的字段顺序，也要遵循过滤的字段尽可能放到前面的原则，充分利用前缀索引的特性。这里并不是rollup越多越好，因为每个rollup都会有相应的物理存储，每增加一个rollup，在写入时就会增加一份IO。最终我们在此表上建立了2个rollup，在要求的响应时间内尽可能多的满足查询需求。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结与展望">总结与展望<a class="hash-link" href="#总结与展望" title="标题的直接链接">​</a></h2><p>京东搜索是在2020年5月份引入doris的，规模是30+台BE，线上同时运行着10+个routine load任务，每日新增数据条数在200亿+，已经成为京东体量最大的doris用户。从结果看，用doris替换flink的窗口计算，既可以提高开发效率，适应维度的变化，同时也可以降低计算资源，用doris充当实时数据仓库的聚合层，并提供统一的接口服务，保证了数据的一致性和安全性。
我们在使用中也遇到了查询相关的、任务调度相关的bug，也在推动京东OLAP平台升级到最新版本。接下来待版本升级后，我们计划使用bitmap功能来支持UV等指标的精准去重操作，并将推荐实时业务应用doris实现。除此之外，为了完善实时数仓的分层结构，为更多业务提供数据输入，我们也计划使用适当的flink窗口开发聚合层的实时流，增加数据的丰富度和完整度。</p>]]></content>
        <author>
            <name>李哲</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 助力网易严选打造精细化运营 DMP 标签系统]]></title>
        <id>/Netease</id>
        <link href="https://doris.apache.org/zh-CN/blog/Netease"/>
        <updated>2022-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>应用实践｜Apache Doris 助力网易严选打造精细化运营 DMP 标签系统</h1><p><img loading="lazy" alt="1280X1280" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/kv-a63c2e8908df91d10704f971aa636fa6.png" width="900" height="383" class="img_ev3q"></p><p><strong>导读</strong>:如果说互联网的上半场是粗狂运营，那么在下半场，精细化运营将是长久的主题，有数据分析能力才能让用户得到更好的体验。当下比较典型的分析方式是构建用户标签系统，本文将由网易严选分享 DMP 标签系统的建设以及 Apache Doris 在其中的应用实践。</p><p>作者<strong>｜</strong>刘晓东 网易严选资深开发工程师</p><p>如果说互联网的上半场是粗狂运营，因为有流量红利不需要考虑细节。那么在下半场，精细化运营将是长久的主题，有数据分析能力才能让用户得到更好的体验。当下比较典型的分析方式是构建用户标签系统，从而精准地生成用户画像，提升用户体验。今天分享的主题是网易严选 DMP 标签系统建设实践，<strong>主要围绕下面五点展开：</strong></p><ul><li>平台总览</li><li>标签生产 ：标签圈选&amp;生产链路</li><li>标签存储：存储方式&amp;存储架构演进</li><li>高性能查询</li><li>未来规划</li></ul><h1>平台总览</h1><p>DMP 作为网易严选的数据中台，向下连接数据，向上赋能业务，承担着非常重要的基石角色。</p><p><strong>DMP 的数据来源主要包括三大部分：</strong></p><ul><li>自营平台的 APP、小程序、PC 端等各端的业务日志</li><li>网易集团内部共建的一些基础数据</li><li>京东、淘宝、抖音等第三方渠道店铺的数据</li></ul><p>通过收集、清洗，将以上数据形成数据资产沉淀下来。DMP 在数据资产基础上形成了一套自己的标签产出、人群圈选和用户画像分析体系，从而为业务提供支撑，包括：智能化的选品、精准触达以及用户洞察等。总的来说，<strong>DMP 系统就是构建以数据为核心的标签体系和画像体系，从而辅助业务做一系列精细化的运营。</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1YstQ5zmLCicnNlrUrnjtPrwhGwZP8icqQLu19auVgPylzxdNHfxHcALQ/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><img loading="lazy" alt="1280X1280" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/kv-a63c2e8908df91d10704f971aa636fa6.png" width="900" height="383" class="img_ev3q"></p><p>了解 DMP 系统，先从以下几个概念开始。</p><ul><li><strong>标签</strong>: 对于实体（用户、设备、手机号等）特征的描述，是一种面向业务的数据组织形式，比如使用：年龄段、地址、偏好类目等对用户实体进行刻画。</li><li><strong>人群圈选</strong>: 通过条件组合从全体用户中圈选出一部分用户，具体就是指定一组用户标签和其对应的标签值，得到符合条件的用户人群。</li><li><strong>画像分析</strong>: 对于人群圈选结果，查看该人群的行为情况、标签分布。例如查看【城市为杭州，且性别为女性】的用户在严选 APP 上的行为路径、消费模型等。</li></ul><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1K1YX0UHuJFDsg6SR8SYS2ksIb3ZwDgnkxImicjl64Utr0RicVwRwIEwg/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>严选标签系统对外主要提供两大核心能力：</p><ol><li><p>标签查询：查询特定实体指定标签的能力，常用于基本信息的展示。</p></li><li><p>人群圈选：分为实时和离线圈选。<strong>圈选结果主要用于：</strong></p></li></ol><ul><li>分组判断：判读用户是否在指定的一个或多个分组，资源投放、触点营销等场景使用较多。</li><li>结果集拉取：拉取指定的人群数据到业务方系统中，进行定制化开发。</li><li>画像分析：分析特定人群的行为数据，消费模型等，进行更精细的运营。</li></ul><p><strong>整体的业务流程如下：</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1vwvAZ2kkh6QQaLLv45tWrxhVXdVyG4nRkPibjZicZlhib6NABc7drVI6w/640?wx_fmt=png" alt="img" class="img_ev3q"></p><ul><li>首先定义标签和人群圈选的规则；</li><li>定义出描述业务的 DSL 之后，便可以将任务提交到 Spark 进行计算；</li><li>计算完成之后，<strong>将计算结果存储到 Hive 和 Doris</strong>；</li><li>之后业务方便可以根据实际业务需求<strong>从 Hive 或</strong> <strong>Doris</strong> <strong>中查询使用数据</strong>。</li></ul><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPguh0t1dZwCVibOYEiamXy6y66P5JicLjFKuuddtibznqP5e9Zn7zhCjCzYlMqq22MqGbvliaQ909IBD0w/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>DMP 平台整体分为计算存储层、调度层、服务层、和元数据管理四大模块。</strong></p><p>所有的标签元信息存储在源数据表中；调度层对业务的整个流程进行任务调度：数据处理、聚合转化为基础标签，基础标签和源表中的数据通过 DSL 规则转化为可用于数据查询的 SQL 语义，由调度层将任务调度到计算存储层的 Spark 进行计算，<strong>并将计算结果存储到 Hive 和 Doris 中。</strong>服务层由标签服务、实体分组服务、基础标签数据服务、画像分析服务四部分组成。</p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1jkd1Of63dlmia0lBtMgaJibzo0I2B59oeCEbj8m41TQybJAvgPM8DYAg/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>标签的生命周期包含5个阶段：</strong></p><ul><li><strong>标签需求</strong>: 在此阶段，运营提出标签的需求和价值预期，产品评估需求合理性以及紧迫性。</li><li><strong>排期生产</strong>: 此阶段需要数据开发梳理数据，从 ods 到 dwd 到 dm 层整个链路，根据数据建立模型，同时数据开发需要做好质量监控。 </li><li><strong>人群圈选</strong>: 标签生产出来之后进行应用，圈选出标签对应的人群。</li><li><strong>精准营销</strong>: 对圈选出来的人群进行精准化营销。</li><li><strong>效果评估</strong>: 最后产品、数据开发和运营对标签使用率、使用效果进行效果评估来决定后续对标签进行改进或降级。</li></ul><p>总的来说，就是以业务增长为目标，围绕标签的生命周期，投入合理的资源，最大化运营效果。</p><h1>标签生产</h1><p><strong>接下来介绍标签生产的整个过程。</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1R5yhhuMUqfab8L0ib57cd0Nuev7G6onY4TiaIiadCGsia7wJ1FvDYSico3w/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>标签的数据分层：</strong></p><ul><li>最下层是 ods 层，包括用户登录日志、埋点记录日志、交易数据以及各种数据库的 Binlog 数据。</li><li>对 ods 层处理后的数据到达 dwd 明细层，包括用户登录表、用户活动表、订单信息表等。</li><li>dwd 层数据聚合后到 dm 层，标签全部基于 dm 层数据实现。</li></ul><p>目前我们从原始数据库到 ods 层数据产出已经完全自动化，从 ods 层到 dwd 层实现了部分自动化，从 dwd 到 dm 层有一部分自动化操作，但自动化程度还不高，这部分的自动化操作是我们接下来的工作重点。</p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1iacicmmGMQpvkibkCayaEfibwnz5yatmTpbBFXpIxMvMwfrzfYEZFUzsNQ/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>标签根据时效性分为</strong>：离线标签、近实时标签和实时标签。</p><p><strong>根据聚合粒度分为</strong>：聚合标签和明细标签。</p><p>通过类别维度可将标签分为：账号属性标签、消费行为标签、活跃行为标签、用户偏好标签、资产信息标签等。</p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1nlRv6HFeBhWR9icFFJYS3anmyEUVZVHIic6Fo6YxGF0RSMFNSlP3c88A/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>直接将 dm 层的数据不太方便拿来用，原因在于：</strong></p><p>基础数据比较原始，抽象层次有所欠缺、使用相对繁琐。通过对基础数据进行与、或、非的组合，形成业务标签供业务方使用，可以降低运营的理解成本，降低使用难度。</p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1LfWal1W06JHzQcdcXocU12S1r811v3DfIpbKHduTvxhWZnmNv3UNgQ/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>标签组合之后需要对标签进行具体业务场景应用，如人群圈选。配置如上图左侧所示，支持离线人群包和实时行为（需要分开配置）。</p><p>配置完后，生成上图右侧所示的 DSL 规则，以 Json 格式表达，对前端比较友好，也可以转成存储引擎的查询语句。</p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1mSV0ghMXHMOl0GlurpVgDJ2OcX4KiaibQlZJdEVpcQN3HEEyjo9Xo7iag/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1ibxI3tWSJM5tpic4EyfxlBblicRV6WiaIqFwK9H927MenkqRZicXEeJdrKA/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>标签有一部分实现了自动化。在人群圈选部分自动化程度比较高。比如分组刷新，每天定时刷新；高级计算，如分组与分组间的交/并/差集；数据清理，及时清理过期失效的实体集。</p><h1>标签存储</h1><p><strong>下面介绍一下我们在标签存储方面的实践。</strong></p><p>严选 DMP 标签系统需要承载比较大的 C端流量，对实时性要求也比较高。</p><p>我们对存储的要求包括：</p><ul><li>支持高性能查询，以应对大规模 C端流量</li><li>支持 SQL，便于应对数据分析场景</li><li>支持数据更新机制</li><li>可存储大数据量</li><li>支持扩展函数，以便处理自定义数据结构</li><li>和大数据生态结合紧密</li></ul><p>目前还没有一款存储能够完全满足要求。</p><p><strong>我们第一版的存储架构如下图所示：</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1zFrMrNdNRI5GDcmBnQo3fApLIkjmFOUia2o7jyfdNsoAeHU69ialQusw/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>离线数据大部分存储在 Hive 中，小部分存储在 Hbase（主要用于基础标签的查询）。实时数据一部分存储在 Hbase 中用于基础标签的查询，部分双写到 KUDU 和 ES 中，用于实时分组圈选和数据查询。离线圈选的数据通过 impala 计算出来缓存在 Redis 中。</p><p><strong>这一版本的缺点包括：</strong></p><ul><li>存储引擎过多。</li><li>双写有数据质量隐患，可能一方成功一方失败，导致数据不一致。</li><li>项目复杂，可维护性较差。</li></ul><p>为了减少引擎和存储的使用量，提高项目可维护性，在版本一的基础上改进实现了版本二。</p><p><strong>我们第二版的存储架构如下图所示：</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1mlDkbiaNBOZ3NdP7Wbe10pA59RTS2rTRdXs4HIx545N98IrzKSK96HA/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>存储架构版本二引入了 Apache Doris</strong>，离线数据主要存储在 Hive 中，同时将基础标签导入到 Doris，实时数据也存储在 Doris，基于 Spark 做 Hive 加 Doris 的联合查询，并将计算出来的结果存储在 Redis 中。经过此版改进后，实时离线引擎存储得到了统一，性能损失在可容忍范围内（Hbase 的查询性能比 Doris 好一些，能控制在 10ms 以内，Doris 目前是 1.0 版本，p99，查询性能能控制在 20ms 以内，p999，能控制在 50ms 以内）；<strong>项目简化，降低了运维成本。</strong></p><p><strong>在大数据领域，各种存储计算引擎有各自的适用场景，如下表所示：</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1ZxBxNx3JrBUDT1jZ6ViaqMfQPt7z6Cugd7GOFS6F33L1PHC5HXI5ciaA/640?wx_fmt=png" alt="img" class="img_ev3q"></p><h1>高性能查询</h1><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj19cGc43b0KbcEnCFDb58XCCibCbCiassbkFB5c1WSE4WMetVJSicZpXNRg/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>分组存在性判断：判断用户是否在指定的一个分组或者多个分组。包括两大部分：</p><ul><li>第一部分为静态人群包，提前进行预计算，存入 Redis 中（Key 为实体的 ID，Value 为结果集 ID），采用 Lua 脚本进行批量判断，提升性能；</li><li>第二部分为实时行为人群，需要从上下文、API 和 Apache Doris 中提取数据进行规则判断。性能提升方案包括，异步化查询、快速短路、查询语句优化、控制 Join表数量等。</li></ul><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1LcNHF6380ct4bSv6r7MtNayJptnUUp7jsD27HXf7IjjicHPibJA9xkSQ/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>还有一个场景是人群分析：人群分析需要将人群包数据同多个表进行联合查询，分析行为路径。目前 Doris 还不支持路径分析函数，因此我们开发了 DorisUDF 来支持此业务。<strong>Doris 的计算模型对自定义函数的开发还是很友好的，能够比较好地满足我们的性能需要。</strong></p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1DZ8XPKg3icGpw3FzerppSjcXIcgz6hWED863oPiaMh0POvBbKuuib6bAQ/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>Apache Doris 在网易严选中已应用于点查、批量查询、路径分析、人群圈选等场景。在实践中具备以下优势：</strong></p><ul><li>在点查和少量表的联合查询性能 QPS 超过万级，RT99&lt;50MS。</li><li>水平扩展能力很强，运维成本相对比较低。</li><li>离线数据和实时数据相统一，降低标签模型复杂度。</li></ul><p>不足之处在于大量小数据量的导入任务资源占用较多，待 Doris 1.1.2 版本正式发布后我们也会及时同步升级。不过此问题已经在 Doris 1.1 版本中进行了优化，<strong>Doris 在 1.1 中大幅增强了数据 Compaction 能力，对于新增数据能够快速完成聚合，避免分片数据中的版本过多导致的 -235 错误以及带来的查询效率问题。</strong></p><p><strong>具体可以参考：</strong><a href="http://mp.weixin.qq.com/s?__biz=Mzg3Njc2NDAwOA==&amp;mid=2247500848&amp;idx=1&amp;sn=a667665ed4ccf4cf807a47be7c264f69&amp;chksm=cf2fca37f85843219e2f74d856478d4aa24d381c1d6e7f9f6a64b65f3344ce8451ad91c5af97&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">Apache Doris 1.1 特性揭秘：Flink 实时写入如何兼顾高吞吐和低延时</a></p><h1>未来规划</h1><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgtennfZnKiaXyYX6AtIRWj1AOgeyT6rKS4Amy9BwZM6RJubVlW2X0CLOkTvUVAib08uxQ8H4TJ3q2g/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p><strong>提升存储&amp;计算性能</strong>: Hive 和 Spark 逐渐全部转向 Apache Doris。</p><p><strong>优化标签体系：</strong></p><ul><li>建立丰富准确的标签评价体系</li><li>提升标签质量和产出速度</li><li>提升标签覆盖率</li></ul><p><strong>更精准的运营</strong></p><ul><li>建立丰富的用户分析模型</li><li>从使用频次和用户价值两个方面提升用户洞察模型评价体系</li><li>建立通用化画像分析能力，辅助运营智能化决策</li></ul><h1>资料下载</h1><p>关注公众号「<strong>SelectDB</strong>」，后台回复【<strong>网易严选</strong>】获取本次演讲 <strong>PPT 资料</strong>！</p><p><img loading="lazy" src="https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSYAsL4vHMicGdVmylG5uibxhN3XOBT5xjTQVpyojBwHjhJgsRgD318FicEzjw0t3rK6F6HAZkDnDuq2A/640?wx_fmt=png" alt="img" class="img_ev3q"></p><p>SelectDB 是一家开源技术公司，致力于为 Apache Doris 社区提供一个由全职工程师、产品经理和支持工程师组成的团队，繁荣开源社区生态，打造实时分析型数据库领域的国际工业界标准。基于 Apache Doris 研发的新一代云原生实时数仓 SelectDB，运行于多家云上，为用户和客户提供开箱即用的能力。</p><p><strong>相关链接：</strong></p><p>SelectDB 官方网站：</p><p><a href="https://selectdb.com" target="_blank" rel="noopener noreferrer">https://selectdb.com</a> </p><p>Apache Doris 官方网站：</p><p><a href="http://doris.apache.org" target="_blank" rel="noopener noreferrer">http://doris.apache.org</a></p><p>Apache Doris Github：</p><p><a href="https://github.com/apache/doris" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris</a></p><p>Apache Doris 开发者邮件组：</p><p><a href="mailto:dev@doris.apache.org" target="_blank" rel="noopener noreferrer">dev@doris.apache.org</a></p>]]></content>
        <author>
            <name>刘晓东</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在蔚来汽车的应用]]></title>
        <id>/NIO</id>
        <link href="https://doris.apache.org/zh-CN/blog/NIO"/>
        <updated>2022-11-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>Apache Doris 在蔚来汽车的应用</h1><p><img loading="lazy" alt="NIO" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/NIO_kv-7601d71a49c7ecd7fb42f03de600ae6c.png" width="900" height="383" class="img_ev3q"></p><blockquote><p>导读：本次分享的题目是Apache Doris在蔚来汽车的应用，主要包括以下几大部分：</p><ol><li>蔚来</li><li>OLAP在蔚来的发展</li><li>Doris作为统一OLAP数仓</li><li>Doris在运营平台上的实践</li><li>经验总结</li></ol></blockquote><p>作者：唐怀东，蔚来汽车 数据团队负责人</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="蔚来">蔚来<a class="hash-link" href="#蔚来" title="标题的直接链接">​</a></h2><p>蔚来（纽约证券交易所代码：NIO）是设计高端智能电动汽车市场的领先公司。 NIO 成立于 2014 年 11 月，设计、开发、联合制造和销售高端智能电动汽车，并不断推动自动驾驶、数字技术、电动动力总成和电池领域的创新。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="olap在蔚来的发展">OLAP在蔚来的发展<a class="hash-link" href="#olap在蔚来的发展" title="标题的直接链接">​</a></h2><p>首先，让我们来一起回顾OLAP在蔚来汽车的发展。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-2017年引入apache-druid">1. 2017年引入Apache Druid<a class="hash-link" href="#1-2017年引入apache-druid" title="标题的直接链接">​</a></h3><p>在当时可选择的OLAP存储和查询引擎并不多，比较常见的有Apache Druid、Apache Kylin。我们优先引入Druid的原因是以前有使用经验，而Kylin预计算虽然具有极高的查询效率优势，但是：</p><ul><li><p>Kylin底层最合适和最优的存储是HBase，之前公司并未引入，会额外增加运维的工作。</p></li><li><p>Kylin对各种维度和指标进行预计算，如果维度和维度取值非常多，会有维度爆炸的问题，对存储造成非常大的压力。</p></li></ul><p>Druid的优势很明显，支持实时和离线数据接入，列式存储，高并发，查询效率非常高。其缺点也比较明显：</p><ul><li>未使用标准协议例如JDBC，使用门槛高</li><li>Join的支持较弱</li><li>精确去重的效率低，性能会随之下降。整体性能要分场景去考虑，这也是我们后期去选型其他OLAP的原因</li><li>运维成本高，不同的组件有不同的安装方式和不同的依赖；数据导入还要考虑和Hadoop集成以及JAR包的依赖</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-2019年引入tidb">2. 2019年引入TiDB<a class="hash-link" href="#2-2019年引入tidb" title="标题的直接链接">​</a></h3><p><strong>TiDB是一个OLTP+OLAP的成熟引擎，同样是优点、缺点分明：</strong></p><p>优势：</p><ul><li>OLTP数据库，更新友好。</li><li>支持明细和聚合，有指标计算和数据看板展示，还支持明细数据查询</li><li>支持标准SQL，使用成本低</li><li>运维成本低</li></ul><p>劣势：</p><ul><li>它不是一个独立的OLAP。TiFlash依赖于OLTP，会增加存储。其OLAP能力稍显不足</li><li>整体性能要分场景去衡量</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-2021年引入doris">3. 2021年引入Doris<a class="hash-link" href="#3-2021年引入doris" title="标题的直接链接">​</a></h3><p>自2021年起，我们正式引入了Apache Doris。在系统选型过程中，产品的性能、SQL语法、系统兼容性、学习以及运维成本等多方面因素是我们最为关心的部分。经过深入调研、层层对比以下几个系统后，我们得出了如下结论：</p><p><strong>我们重点关注的Doris，其优点完全满足我们的诉求：</strong></p><ul><li>支持高并发查询（我们最关心的一点）</li><li>同时支持实时和离线数据</li><li>支持明细和聚合</li><li>Uniq模型支持更新</li><li>物化视图的能力能极大的加速查询效率</li><li>兼容MySQL协议，所以开发和使用成本比较低</li><li>性能完全满足我们的要求</li><li>运维成本比较低</li></ul><p><strong>Clickhouse，我们之前也调研过，也尝试想去使用它。其单机性能极强，但是缺点明显:</strong></p><ul><li>我们明确需要的场景下，它的多表join支持的稍微差一些</li><li>并发度比较低</li><li>运维成本极高</li></ul><p>凭借多种性能优势，Apache Doris比较理想地替代了Druid和TiDB。而Clickhouse在我们的业务上并不能很好的适配，让我们最终走向了Apache Doris。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="doris作为统一olap数仓">Doris作为统一OLAP数仓<a class="hash-link" href="#doris作为统一olap数仓" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="NIO" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/olap-96ad3bb86cebd92a200a0581f0418d3c.png" width="1018" height="669" class="img_ev3q"></p><p>这张图基本上就是从数据源到数据接入、数据计算、数据仓库、数据服务以及应用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-数据源">1. 数据源<a class="hash-link" href="#1-数据源" title="标题的直接链接">​</a></h3><p>蔚来的场景下，数据源不仅仅指业务系统的数据，还有埋点数据、设备数据、车辆数据等等。数据会通过一种接入方式接入到大数据平台。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-数据接入">2. 数据接入<a class="hash-link" href="#2-数据接入" title="标题的直接链接">​</a></h3><p>对于一些业务系统的数据，可以开启CDC捕捉变化的数据，然后转换成一个数据流存储到Kafka，接续再进行流式的计算。某些只能通过批量的方式的数据会直接进入到我们的分布式存储。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-数据计算">3. 数据计算<a class="hash-link" href="#3-数据计算" title="标题的直接链接">​</a></h3><p>我们没有采用流批一体，采用的是Lambda架构。
我们本身的业务决定了我们的Lambda架构是离线和实时分成了两条路径：</p><ul><li>部分数据是流式的。</li><li>部分数据能够存储到数据流里，一些历史数据不会存储到Kafka。</li><li>有些场景数据要求高精准度。为了保证数据的准确性，一个离线的pipeline将会把整个数据重新计算和刷新。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-数据仓库">4. 数据仓库<a class="hash-link" href="#4-数据仓库" title="标题的直接链接">​</a></h3><p>数据计算到数仓，这两条线路我们没有采用Flink或Spark Doris Connector。我们用Routine Load来连接Apache Doris和Flink，用Broker Load连接Doris和Spark。 由Spark批量生成的数据，会备份到Hive供其他场景使用。这样每计算一次，就同时供多个场景去使用，大大提升了效率。Flink的情况也诸如此类。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-数据服务">5. 数据服务<a class="hash-link" href="#5-数据服务" title="标题的直接链接">​</a></h3><p>Doris后面是One Service。通过注册数据源或灵活配置的方式，自动生成API，对API进行流量的控制和权限的控制，灵活性大大提高。并借助于k8s serverless方案，整个服务非常灵活和丰富。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-数据应用">6. 数据应用<a class="hash-link" href="#6-数据应用" title="标题的直接链接">​</a></h3><p>应用层中我们主要是部署一些报表应用和其他的一些服务。</p><p>我们主要有两类使用场景：</p><ul><li>面向用户，类似于互联网，我们有很多用户的场景，包括看板和指标</li><li>面向车，车的数据通过这种方式进入到Doris，通过一定的聚合之后，Doris数据体量在几十亿级别。但总体性能仍然可以满足我们的要求。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="doris在运营平台上的实践">Doris在运营平台上的实践<a class="hash-link" href="#doris在运营平台上的实践" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-cdp-architecture">1. CDP Architecture<a class="hash-link" href="#1-cdp-architecture" title="标题的直接链接">​</a></h3><p><img loading="lazy" alt="NIO" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/cdp-3d65926e741a2837759b07514e914bbf.png" width="1471" height="422" class="img_ev3q"></p><p>接下来我来介绍Doris在运营平台上的实践。这是我们的真实使用场景。如今互联网公司普遍会做自己的CDP，它一般包括几个模块：</p><ul><li>标签，是最基础的部分。</li><li>圈人，基于标签，按照一定逻辑将人圈选出来。</li><li>洞察，针对圈定的人群，了解人群分布、特点。</li><li>触达，利用例如短信、电话、声音、APP通知、IM等方式触达到用户，并配合流量控制。</li><li>效果分析，提升运营平台的完整性，有动作、有效果、有反馈。</li></ul><p>Doris在这里面起到了最重要的作用，包括：标签存储、人群存储、效果分析。
标签分为基础标签和用户行为的基础数据，在此基础之上，我们可以灵活自定义其他标签。从实效性来看，标签还分为实时的标签和离线的标签。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-cdp存储选型的考量点">2. CDP存储选型的考量点<a class="hash-link" href="#2-cdp存储选型的考量点" title="标题的直接链接">​</a></h3><p>我们从5个维度去考量CDP存储的选型。</p><p>**(1) 离线和实时统一
如前所述标签有离线标签，有实时标签。目前我们是准实时的场景。对于有些数据，准实时已足够满足我们的需求，大量的标签还是离线的标签，采用的方式就是Doris的Routine Load和Broker Load。</p><table><thead><tr><th><strong>场景</strong></th><th><strong>需求</strong></th><th><strong>Apache Doris功能点</strong></th></tr></thead><tbody><tr><td>实时标签</td><td>数据实时更新</td><td>Routine Load</td></tr><tr><td>离线标签</td><td>高效大批量导入</td><td>Broker Load</td></tr><tr><td>流批统一</td><td>实时历险数据存储统一</td><td>Routine Load 和 Broker Load 更新同一张表的不同列</td></tr></tbody></table><p>另外同一张表上，不同列更新的频率也是不一样的。例如用户的基础标签，我们对用户的身份需要实时的更新，因为用户的身份是时刻变化的。T+1的更新不能满足我们的需求。有些标签离线，例如用户的性别、年龄等基础标签，T+1更新足以满足我们的标准。基础用户的原子标签放在一张表中带来的维护成本很低。当后期自定义标签时，表的数量会大大减少，这样对于整体性能的提升有极大好处。</p><p><strong>(2) 高效圈选</strong></p><p>用户运营有了标签，第二步就是圈人，圈选就是根据标签的不同组合，把符合标签条件的所有人筛选出来，这时会有不同标签条件组合的查询、这个查询在Doris引入向量化之后有比较明显的提升。</p><table><thead><tr><th><strong>场景</strong></th><th><strong>需求</strong></th><th><strong>Apache Doris功能点</strong></th></tr></thead><tbody><tr><td>复杂条件圈选</td><td>高效的支持多条件圈选</td><td>SIMD的优化</td></tr></tbody></table><p><strong>(3) 高效聚合</strong></p><p>前面提到的用户洞察或群体洞察以及效果分析统计，需要对数据做统计分析，并不是单一的按用户ID获取标签的这种简单场景。其读取的数据量和查询效率，对我们这个标签的分布、群体的分布、效果分析的统计都有很大的影响。在这里，体现到的Doris的功能特点是：</p><ul><li>第一是数据分片，我们按时间把数据分片，分析统计就会极大的减少数据量，可以极大的加速查询和分析的效率。</li><li>第二是节点聚合，然后再收集做统一的聚合。</li><li>第三是向量化加速，向量化引擎对性能提升非常显著。</li></ul><table><thead><tr><th><strong>场景</strong></th><th><strong>需求</strong></th><th><strong>Apache Doris功能点</strong></th></tr></thead><tbody><tr><td>标签值的分布</td><td>每天都需要更新所有标签，需要快速高效统计</td><td>数据分片，减少数据传输和计算</td></tr><tr><td>群体的分布</td><td>同上</td><td>存算统一，每个节点先聚合</td></tr><tr><td>效果分析的统计值</td><td>同上</td><td>SIMD提速</td></tr></tbody></table><p><strong>(4) 多表关联</strong></p><p>我们的CDP可能和业内常见的CDP场景不太一样，因为有些场景的CDP标签是提前预估完成的，不存在自定义标签。只做原子标签，或者说用户基础行为数据的统计，这样可以把灵活性留给使用CDP的用户，根据自己的业务场景去自定义标签。底层的数据是分散在不同的数据库表里，如果做自定义的标签的建设，势必需要做表的关联。
我们选择Doris一个非常重要的原因，就是多表关联的能力。通过性能测试，Doris目前能够满足我们的要求。而且Doris为用户提供了非常强大的能力。因为标签是动态的。</p><table><thead><tr><th><strong>场景</strong></th><th><strong>需求</strong></th><th><strong>Apache Doris功能点</strong></th></tr></thead><tbody><tr><td>群体的特征分布</td><td>统计群体在某个特征下的分布</td><td>多表关联</td></tr><tr><td>Single Tag</td><td>Display tags</td><td></td></tr></tbody></table><p><strong>(5) 联邦查询</strong></p><p>用户触达成功与否我们会记录到TiDB。用户运营中的通知，可能只影响用户体验，如果涉及到钱例如发放积分或优惠券，任务执行就要做到不重不漏，这种OLTP场景用TiDB比较合适。
做效果分析，需要了解运营计划执行到什么程度，是否达成目标，其分布情况等等。需要把任务执行情况和人群圈选相结合才能进行分析，就会用到Doris和TiDB的关联，外表关联进行查询。
我们设想标签体量比较小，保存到es可能比较合适，然而ES不能满足我们的需求，后面会解释其原因。</p><table><thead><tr><th><strong>场景</strong></th><th><strong>需求</strong></th><th><strong>Apache Doris功能点</strong></th></tr></thead><tbody><tr><td>效果分析关联任务执行明细</td><td>Doris数据关联TiDB数据</td><td>关联外表进行查询</td></tr><tr><td>人群标签关联行为聚合数据</td><td>Doris数据关联Elasticsearch数据</td><td></td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="经验和总结">经验和总结<a class="hash-link" href="#经验和总结" title="标题的直接链接">​</a></h2><ol><li><p><strong>bitmap</strong>. 我们的体量无法充分发挥其效率。如果体量达到一定程度，用bitmap会有很好的性能提升。例如计算UV场景，Id全集大于5000万，可以考虑bitmap聚合。</p></li><li><p><strong>ES外表。单表查询下效率比较理想。</strong> </p></li><li><p><strong>分批更新列</strong>. 为了减少表的数量和提升join表的性能，设计表尽量精简尽量聚合，相同类型的事实都放在一起。但相同类型的字段可能更新频率不同，有些字段需要天级更新，有些字段可能需要小时级更新，单独更新某一列就是一个明显的诉求。Doris聚合模型单独更新某些列的解决方案是使用REPLACE_IF_NOT_NULL。注意:用null替换原来的非null值是做不到的,可以把所有的null替换成有意义的默认值，例如unknown。</p></li><li><p><strong>在线服务</strong>. Doris同一份数据同时服务在线离线场景，对资源隔离的要求比较高，目前还存在进一步优化的空间。</p></li></ol>]]></content>
        <author>
            <name>唐怀东</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 1.2 Star-Schema-Benchmark 性能测试报告]]></title>
        <id>/ssb</id>
        <link href="https://doris.apache.org/zh-CN/blog/ssb"/>
        <updated>2022-11-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>Star Schema Benchmark</h1><p><a href="https://www.cs.umb.edu/~poneil/StarSchemaB.PDF" target="_blank" rel="noopener noreferrer">Star Schema Benchmark(SSB)</a> 是一个轻量级的数仓场景下的性能测试集。SSB 基于 <a href="http://www.tpc.org/tpch/" target="_blank" rel="noopener noreferrer">TPC-H</a> 提供了一个简化版的星型模型数据集，主要用于测试在星型模型下，多表关联查询的性能表现。另外，业界内通常也会将 SSB 打平为宽表模型（以下简称：SSB flat），来测试查询引擎的性能，参考<a href="https://clickhouse.com/docs/zh/getting-started/example-datasets/star-schema" target="_blank" rel="noopener noreferrer">Clickhouse</a>。</p><p>本文档主要介绍Apache Doris 在 SSB 100G 测试集上的性能表现。</p><blockquote><p>注 1：包括 SSB 在内的标准测试集通常和实际业务场景差距较大，并且部分测试会针对测试集进行参数调优。所以标准测试集的测试结果仅能反映数据库在特定场景下的性能表现。建议用户使用实际业务数据进行进一步的测试。</p><p>注 2：本文档涉及的操作都在 Ubuntu Server 20.04 环境进行，CentOS 7 也可测试。</p></blockquote><p>在 SSB 标准测试数据集上的 13 个查询上，我们基于 Apache Doris 1.2.0-rc01， Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04 版本进行了对别测试。</p><p>在 SSB FlAT 宽表上， Apache Doris 1.2.0-rc01上相对 Apache Doris 1.1.3 整体性能提升了将近4倍，相对于 Apache Doris 0.15.0 RC04 ,性能提升了将近10倍 。</p><p><img loading="lazy" alt="ssb_v11_v015_compare" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/ssb_flat-a8cfebbc53e6f2db116876e3d53e19c7.png" width="1522" height="674" class="img_ev3q"></p><p>在标准的 SSB 测试SQL上， Apache Doris 1.2.0-rc01 上相对 Apache Doris 1.1.3 整体性能提升了将近2倍，相对于 Apache Doris 0.15.0 RC04 ,性能提升了将近 31 倍 。</p><p><img loading="lazy" alt="ssb_12_11_015" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/ssb-6f7fc8825356019f61622f6fcb9fa1d0.png" width="1354" height="728" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-硬件环境">1. 硬件环境<a class="hash-link" href="#1-硬件环境" title="标题的直接链接">​</a></h2><table><thead><tr><th>机器数量</th><th>4 台腾讯云主机（1个FE，3个BE）</th></tr></thead><tbody><tr><td>CPU</td><td>AMD EPYC™ Milan(2.55GHz/3.5GHz) 16核</td></tr><tr><td>内存</td><td>64G</td></tr><tr><td>网络带宽</td><td>7Gbps</td></tr><tr><td>磁盘</td><td>高性能云硬盘</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-软件环境">2. 软件环境<a class="hash-link" href="#2-软件环境" title="标题的直接链接">​</a></h2><ul><li>Doris 部署 3BE 1FE；</li><li>内核版本：Linux version 5.4.0-96-generic (buildd@lgw01-amd64-051)</li><li>操作系统版本：Ubuntu Server 20.04 LTS 64位</li><li>Doris 软件版本： Apache Doris 1.2.0-rc01、Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04</li><li>JDK：openjdk version "11.0.14" 2022-01-18</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-测试数据量">3. 测试数据量<a class="hash-link" href="#3-测试数据量" title="标题的直接链接">​</a></h2><table><thead><tr><th align="left">SSB表名</th><th align="left">行数</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">lineorder</td><td align="left">600,037,902</td><td align="left">商品订单明细表表</td></tr><tr><td align="left">customer</td><td align="left">3,000,000</td><td align="left">客户信息表</td></tr><tr><td align="left">part</td><td align="left">1,400,000</td><td align="left">零件信息表</td></tr><tr><td align="left">supplier</td><td align="left">200,000</td><td align="left">供应商信息表</td></tr><tr><td align="left">date</td><td align="left">2,556</td><td align="left">日期表</td></tr><tr><td align="left">lineorder_flat</td><td align="left">600,037,902</td><td align="left">数据展平后的宽表</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-ssb-宽表测试结果">4. SSB 宽表测试结果<a class="hash-link" href="#4-ssb-宽表测试结果" title="标题的直接链接">​</a></h2><p>这里我们使用 Apache Doris 1.2.0-rc01、 Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04 版本进行对比测试，测试结果如下：</p><table><thead><tr><th>Query</th><th>Apache Doris 1.2.0-rc01(ms)</th><th>Apache Doris 1.1.3(ms)</th><th>Apache Doris 0.15.0 RC04(ms)</th></tr></thead><tbody><tr><td>Q1.1</td><td>20</td><td>90</td><td>250</td></tr><tr><td>Q1.2</td><td>10</td><td>10</td><td>30</td></tr><tr><td>Q1.3</td><td>30</td><td>70</td><td>120</td></tr><tr><td>Q2.1</td><td>90</td><td>360</td><td>900</td></tr><tr><td>Q2.2</td><td>90</td><td>340</td><td>1020</td></tr><tr><td>Q2.3</td><td>60</td><td>260</td><td>770</td></tr><tr><td>Q3.1</td><td>160</td><td>550</td><td>1710</td></tr><tr><td>Q3.2</td><td>80</td><td>290</td><td>670</td></tr><tr><td>Q3.3</td><td>90</td><td>240</td><td>550</td></tr><tr><td>Q3.4</td><td>20</td><td>20</td><td>30</td></tr><tr><td>Q4.1</td><td>140</td><td>480</td><td>1250</td></tr><tr><td>Q4.2</td><td>50</td><td>240</td><td>400</td></tr><tr><td>Q4.3</td><td>30</td><td>200</td><td>330</td></tr><tr><td>合计</td><td>880</td><td>3150</td><td>8030</td></tr></tbody></table><p><strong>结果说明</strong></p><ul><li>测试结果对应的数据集为 scale 100, 约 6 亿条。</li><li>测试环境配置为用户常用配置，云服务器 4 台，16 核 64G SSD，1 FE 3 BE 部署。</li><li>选用用户常见配置测试以降低用户选型评估成本，但整个测试过程中不会消耗如此多的硬件资源。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-标准-ssb-测试结果">5. 标准 SSB 测试结果<a class="hash-link" href="#5-标准-ssb-测试结果" title="标题的直接链接">​</a></h2><p>这里我们使用 Apache Doris 1.2.0-rc01、Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04 版本进行对比测试，测试结果如下：</p><table><thead><tr><th>Query</th><th>Apache Doris 1.2.0-rc01(ms)</th><th>Apache Doris 1.1.3 (ms)</th><th>Apache Doris 0.15.0 RC04(ms)</th></tr></thead><tbody><tr><td>Q1.1</td><td>40</td><td>18</td><td>350</td></tr><tr><td>Q1.2</td><td>30</td><td>100</td><td>80</td></tr><tr><td>Q1.3</td><td>20</td><td>70</td><td>80</td></tr><tr><td>Q2.1</td><td>350</td><td>940</td><td>20680</td></tr><tr><td>Q2.2</td><td>320</td><td>750</td><td>18250</td></tr><tr><td>Q2.3</td><td>300</td><td>720</td><td>14760</td></tr><tr><td>Q3.1</td><td>650</td><td>2150</td><td>22190</td></tr><tr><td>Q3.2</td><td>260</td><td>510</td><td>8360</td></tr><tr><td>Q3.3</td><td>220</td><td>450</td><td>6200</td></tr><tr><td>Q3.4</td><td>60</td><td>70</td><td>160</td></tr><tr><td>Q4.1</td><td>840</td><td>1480</td><td>24320</td></tr><tr><td>Q4.2</td><td>460</td><td>560</td><td>6310</td></tr><tr><td>Q4.3</td><td>610</td><td>660</td><td>10170</td></tr><tr><td>合计</td><td>4160</td><td>8478</td><td>131910</td></tr></tbody></table><p><strong>结果说明</strong></p><ul><li>测试结果对应的数据集为scale 100, 约6亿条。</li><li>测试环境配置为用户常用配置，云服务器4台，16核 64G SSD，1 FE 3 BE 部署。</li><li>选用用户常见配置测试以降低用户选型评估成本，但整个测试过程中不会消耗如此多的硬件资源。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-环境准备">6. 环境准备<a class="hash-link" href="#6-环境准备" title="标题的直接链接">​</a></h2><p>请先参照 <a href="/zh-CN/install/install-deploy.md">官方文档</a> 进行 Apache Doris 的安装部署，以获得一个正常运行中的 Doris 集群（至少包含 1 FE 1 BE，推荐 1 FE 3 BE）。</p><p>以下文档中涉及的脚本都存放在 Apache Doris 代码库：<a href="https://github.com/apache/doris/tree/master/tools/ssb-tools" target="_blank" rel="noopener noreferrer">ssb-tools</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-数据准备">7. 数据准备<a class="hash-link" href="#7-数据准备" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="71-下载安装-ssb-数据生成工具">7.1 下载安装 SSB 数据生成工具。<a class="hash-link" href="#71-下载安装-ssb-数据生成工具" title="标题的直接链接">​</a></h3><p>执行以下脚本下载并编译 <a href="https://github.com/electrum/ssb-dbgen.git" target="_blank" rel="noopener noreferrer">ssb-dbgen</a> 工具。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> build-ssb-dbgen.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>安装成功后，将在 <code>ssb-dbgen/</code> 目录下生成 <code>dbgen</code> 二进制文件。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="72-生成-ssb-测试集">7.2 生成 SSB 测试集<a class="hash-link" href="#72-生成-ssb-测试集" title="标题的直接链接">​</a></h3><p>执行以下脚本生成 SSB 数据集：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> gen-ssb-data.sh -s </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> -c </span><span class="token number" style="color:#36acaa">100</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>注1：通过 <code>sh gen-ssb-data.sh -h</code> 查看脚本帮助。</p><p>注2：数据会以 <code>.tbl</code> 为后缀生成在  <code>ssb-data/</code> 目录下。文件总大小约60GB。生成时间可能在数分钟到1小时不等。</p><p>注3：<code>-s 100</code> 表示测试集大小系数为 100，<code>-c 100</code> 表示并发100个线程生成 lineorder 表的数据。<code>-c</code> 参数也决定了最终 lineorder 表的文件数量。参数越大，文件数越多，每个文件越小。</p></blockquote><p>在 <code>-s 100</code> 参数下，生成的数据集大小为：</p><table><thead><tr><th>Table</th><th>Rows</th><th>Size</th><th>File Number</th></tr></thead><tbody><tr><td>lineorder</td><td>6亿（600037902）</td><td>60GB</td><td>100</td></tr><tr><td>customer</td><td>300万（3000000）</td><td>277M</td><td>1</td></tr><tr><td>part</td><td>140万（1400000）</td><td>116M</td><td>1</td></tr><tr><td>supplier</td><td>20万（200000）</td><td>17M</td><td>1</td></tr><tr><td>date</td><td>2556</td><td>228K</td><td>1</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="73-建表">7.3 建表<a class="hash-link" href="#73-建表" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="731-准备-doris-clusterconf-文件">7.3.1 准备 <code>doris-cluster.conf</code> 文件。<a class="hash-link" href="#731-准备-doris-clusterconf-文件" title="标题的直接链接">​</a></h4><p>在调用导入脚本前，需要将 FE 的 ip 端口等信息写在 <code>doris-cluster.conf</code> 文件中。</p><p>文件位置和 <code>load-ssb-dimension-data.sh</code> 平级。</p><p>文件内容包括 FE 的 ip，HTTP 端口，用户名，密码以及待导入数据的 DB 名称：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">FE_HOST</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"xxx"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">FE_HTTP_PORT</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"8030"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">FE_QUERY_PORT</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"9030"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">USER</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"root"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">PASSWORD</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'xxx'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">DB</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"ssb"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="732-执行以下脚本生成创建-ssb-表">7.3.2 执行以下脚本生成创建 SSB 表：<a class="hash-link" href="#732-执行以下脚本生成创建-ssb-表" title="标题的直接链接">​</a></h4><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> create-ssb-tables.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者复制 <a href="https://github.com/apache/incubator-doris/tree/master/tools/ssb-tools/ddl/create-ssb-tables.sql" target="_blank" rel="noopener noreferrer">create-ssb-tables.sql</a>  和 <a href="https://github.com/apache/incubator-doris/tree/master/tools/ssb-tools/ddl/create-ssb-flat-table.sql" target="_blank" rel="noopener noreferrer">create-ssb-flat-table.sql</a>  中的建表语句，在 MySQL 客户端中执行。</p><p>下面是 <code>lineorder_flat</code> 表建表语句。在上面的 <code>create-ssb-flat-table.sh</code>  脚本中创建 <code>lineorder_flat</code> 表，并进行了默认分桶数（48个桶)。您可以删除该表，根据您的集群规模节点配置对这个分桶数进行调整，这样可以获取到更好的一个测试效果。</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">lineorder_flat</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERDATE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERKEY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_LINENUMBER</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_CUSTKEY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_PARTKEY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_SUPPKEY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERPRIORITY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_SHIPPRIORITY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_QUANTITY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_EXTENDEDPRICE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDTOTALPRICE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_DISCOUNT</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_REVENUE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_SUPPLYCOST</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_TAX</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_COMMITDATE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_SHIPMODE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_NAME</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_ADDRESS</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_CITY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_NATION</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_REGION</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_PHONE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">C_MKTSEGMENT</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">S_NAME</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">S_ADDRESS</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">S_CITY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">S_NATION</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">S_REGION</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">S_PHONE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_NAME</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_MFGR</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_CATEGORY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_BRAND</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_COLOR</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_TYPE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_SIZE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">P_CONTAINER</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ENGINE</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">OLAP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">DUPLICATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERDATE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERKEY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"OLAP"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> RANGE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERDATE</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p1 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0000-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1993-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p2 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1993-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p3 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1995-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p4 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1995-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1996-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p5 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1996-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1997-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p6 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1997-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1998-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> p7 </span><span class="token keyword" style="color:#00009f">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1998-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1999-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">DISTRIBUTED</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">HASH</span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">LO_ORDERKEY</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> BUCKETS </span><span class="token number" style="color:#36acaa">48</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PROPERTIES </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">"replication_num"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">"colocate_with"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"groupxx1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">"in_memory"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"false"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">"storage_format"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"DEFAULT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="74-导入数据">7.4 导入数据<a class="hash-link" href="#74-导入数据" title="标题的直接链接">​</a></h3><p>我们使用以下命令完成 SSB 测试集所有数据导入及 SSB FLAT 宽表数据合成并导入到表里。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> bin/load-ssb-data.sh -c </span><span class="token number" style="color:#36acaa">10</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>-c 5</code> 表示启动 10 个并发线程导入（默认为 5）。在单 BE 节点情况下，由 <code>sh gen-ssb-data.sh -s 100 -c 100</code> 生成的 lineorder 数据，同时会在最后生成ssb-flat表的数据，如果开启更多线程，可以加快导入速度，但会增加额外的内存开销。</p><blockquote><p>注：</p><ol><li><p>为获得更快的导入速度，你可以在 be.conf 中添加 <code>flush_thread_num_per_store=5</code> 后重启BE。该配置表示每个数据目录的写盘线程数，默认为2。较大的数据可以提升写数据吞吐，但可能会增加 IO Util。（参考值：1块机械磁盘，在默认为2的情况下，导入过程中的 IO Util 约为12%，设置为5时，IO Util 约为26%。如果是 SSD 盘，则几乎为 0）。</p></li><li><p>flat 表数据采用 'INSERT INTO ... SELECT ... ' 的方式导入。</p></li></ol></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="75-检查导入数据">7.5 检查导入数据<a class="hash-link" href="#75-检查导入数据" title="标题的直接链接">​</a></h3><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> lineorder_flat</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>数据量应和生成数据的行数一致。</p><table><thead><tr><th>Table</th><th>Rows</th><th>Origin Size</th><th>Compacted Size(1 Replica)</th></tr></thead><tbody><tr><td>lineorder_flat</td><td>6亿（600037902）</td><td></td><td>59.709 GB</td></tr><tr><td>lineorder</td><td>6亿（600037902）</td><td>60 GB</td><td>14.514 GB</td></tr><tr><td>customer</td><td>300万（3000000）</td><td>277 MB</td><td>138.247 MB</td></tr><tr><td>part</td><td>140万（1400000）</td><td>116 MB</td><td>12.759 MB</td></tr><tr><td>supplier</td><td>20万（200000）</td><td>17 MB</td><td>9.143 MB</td></tr><tr><td>date</td><td>2556</td><td>228 KB</td><td>34.276 KB</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="76-查询测试">7.6 查询测试<a class="hash-link" href="#76-查询测试" title="标题的直接链接">​</a></h3><p>SSB-FlAT 查询语句 ：<a href="https://github.com/apache/doris/tree/master/tools/ssb-tools/ssb-flat-queries" target="_blank" rel="noopener noreferrer">ssb-flat-queries</a></p><p>标准 SSB 查询语句 ：<a href="https://github.com/apache/doris/tree/master/tools/ssb-tools/ssb-queries" target="_blank" rel="noopener noreferrer">ssb-queries</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="761-ssb-flat-测试-sql">7.6.1 SSB FLAT 测试 SQL<a class="hash-link" href="#761-ssb-flat-测试-sql" title="标题的直接链接">​</a></h4><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">--Q1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_EXTENDEDPRICE </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> LO_DISCOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain">  LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19930101</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19931231</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_DISCOUNT </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_QUANTITY </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">25</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q1.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_EXTENDEDPRICE </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> LO_DISCOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19940101</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19940131</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_DISCOUNT </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_QUANTITY </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">35</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q1.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_EXTENDEDPRICE </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> LO_DISCOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain">  weekofyear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19940101</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19941231</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_DISCOUNT </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_QUANTITY </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">35</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> P_CATEGORY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#12'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain">  </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> P_BRAND </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2221'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> P_BRAND </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2228'</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> P_BRAND </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2239'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EUROPE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> C_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> C_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19920101</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19971231</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> C_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> revenue </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> C_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> C_NATION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED STATES'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_NATION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED STATES'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19920101</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19971231</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> C_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> revenue </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> C_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> C_CITY </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_CITY </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19920101</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19971231</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> C_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> revenue </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> C_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> C_CITY </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_CITY </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19971201</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19971231</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> C_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> revenue </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> C_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> LO_SUPPLYCOST</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> profit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> C_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> P_MFGR </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'MFGR#1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> C_NATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> C_NATION </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">S_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_CATEGORY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> LO_SUPPLYCOST</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> profit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> C_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> S_REGION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19970101</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19981231</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> P_MFGR </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'MFGR#1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_NATION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_CATEGORY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_NATION </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_CATEGORY </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_ORDERDATE </span><span class="token operator" style="color:#393A34">DIV</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LO_REVENUE </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> LO_SUPPLYCOST</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> profit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder_flat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> S_NATION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED STATES'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19970101</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> LO_ORDERDATE </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19981231</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> P_CATEGORY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#14'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">YEAR</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> S_CITY </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> P_BRAND </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="762-ssb-标准测试-sql"><strong>7.6.2 SSB 标准测试 SQL</strong><a class="hash-link" href="#762-ssb-标准测试-sql" title="标题的直接链接">​</a></h4><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">--Q1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> lo_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1993</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_discount </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_quantity </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">25</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q1.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> lo_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_yearmonth </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Jan1994'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_discount </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_quantity </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">35</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q1.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> lo_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_weeknuminyear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1994</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_discount </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_quantity </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">35</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> p_category </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#12'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> p_brand</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> p_brand </span><span class="token operator" style="color:#393A34">BETWEEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2221'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2228'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> p_brand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2239'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EUROPE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> c_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1992</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1997</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> c_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> REVENUE </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> c_nation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED STATES'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_nation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED STATES'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1992</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1997</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> c_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> REVENUE </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> c_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        s_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> s_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1992</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1997</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> c_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> REVENUE </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3.4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> REVENUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> c_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        s_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> s_city </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED KI5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> d_yearmonth </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Dec1997'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> c_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> REVENUE </span><span class="token keyword" style="color:#00009f">DESC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(parallel_fragment_exec_instance_num=4, enable_vectorized_engine=true, batch_size=4096, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> lo_supplycost</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> PROFIT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> dates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> c_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        p_mfgr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> p_mfgr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c_nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c_nation</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4.2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_category</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> lo_supplycost</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> PROFIT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> dates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> c_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_region </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        d_year </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1997</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1998</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        p_mfgr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> p_mfgr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_category</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_category</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4.3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_brand</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lo_revenue </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> lo_supplycost</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> PROFIT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> dates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lineorder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lo_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> lo_orderdate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> d_datekey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> s_nation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'UNITED STATES'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        d_year </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1997</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">OR</span><span class="token plain"> d_year </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1998</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> p_category </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MFGR#14'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> d_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_city</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_brand</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="技术解析" term="技术解析"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 1.2 TPC-H 性能测试报告]]></title>
        <id>/tpch</id>
        <link href="https://doris.apache.org/zh-CN/blog/tpch"/>
        <updated>2022-11-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>TPC-H Benchmark</h1><p>TPC-H是一个决策支持基准（Decision Support Benchmark），它由一套面向业务的特别查询和并发数据修改组成。查询和填充数据库的数据具有广泛的行业相关性。这个基准测试演示了检查大量数据、执行高度复杂的查询并回答关键业务问题的决策支持系统。TPC-H报告的性能指标称为TPC-H每小时复合查询性能指标(QphH@Size)，反映了系统处理查询能力的多个方面。这些方面包括执行查询时所选择的数据库大小，由单个流提交查询时的查询处理能力，以及由多个并发用户提交查询时的查询吞吐量。</p><p>本文档主要介绍 Doris 在 TPC-H 100G 测试集上的性能表现。</p><blockquote><p>注1：包括 TPC-H 在内的标准测试集通常和实际业务场景差距较大，并且部分测试会针对测试集进行参数调优。所以标准测试集的测试结果仅能反映数据库在特定场景下的性能表现。建议用户使用实际业务数据进行进一步的测试。</p><p>注2：本文档涉及的操作都在 CentOS 7.x 上进行测试。</p></blockquote><p>在 TPC-H 标准测试数据集上的 22 个查询上，我们基于 Apache Doris 1.2.0-rc01， Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04 版本进行了对别测试， Apache Doris 1.2.0-rc01上相对 Apache Doris 1.1.3 整体性能提升了将近 3 倍，相对于 Apache Doris 0.15.0 RC04 ,性能提升了将近 11 倍 。</p><p><img loading="lazy" alt="image-20220614114351241" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/tpch-2048da37571ef8b1d4b0a49c3fba44ca.png" width="1526" height="726" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-硬件环境">1. 硬件环境<a class="hash-link" href="#1-硬件环境" title="标题的直接链接">​</a></h2><table><thead><tr><th>硬件</th><th>配置说明</th></tr></thead><tbody><tr><td>机器数量</td><td>4 台腾讯云主机（1个FE，3个BE）</td></tr><tr><td>CPU</td><td>Intel Xeon(Cascade Lake) Platinum 8269CY  16核  (2.5 GHz/3.2 GHz)</td></tr><tr><td>内存</td><td>64G</td></tr><tr><td>网络带宽</td><td>5Gbps</td></tr><tr><td>磁盘</td><td>ESSD云硬盘</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-软件环境">2. 软件环境<a class="hash-link" href="#2-软件环境" title="标题的直接链接">​</a></h2><ul><li>Doris部署 3BE 1FE；</li><li>内核版本：Linux version 5.4.0-96-generic (buildd@lgw01-amd64-051)</li><li>操作系统版本：CentOS 7.8</li><li>Doris 软件版本： Apache Doris 1.2.0-rc01、 Apache Doris 1.1.3 、 Apache Doris 0.15.0 RC04</li><li>JDK：openjdk version "11.0.14" 2022-01-18</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-测试数据量">3. 测试数据量<a class="hash-link" href="#3-测试数据量" title="标题的直接链接">​</a></h2><p>整个测试模拟生成 TPCH 100G 的数据分别导入到 Apache Doris 1.2.0-rc01， Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04  版本进行测试，下面是表的相关说明及数据量。</p><table><thead><tr><th align="left">TPC-H表名</th><th align="left">行数</th><th>导入后大小</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">REGION</td><td align="left">5</td><td>400KB</td><td align="left">区域表</td></tr><tr><td align="left">NATION</td><td align="left">25</td><td>7.714 KB</td><td align="left">国家表</td></tr><tr><td align="left">SUPPLIER</td><td align="left">100万</td><td>85.528 MB</td><td align="left">供应商表</td></tr><tr><td align="left">PART</td><td align="left">2000万</td><td>752.330 MB</td><td align="left">零部件表</td></tr><tr><td align="left">PARTSUPP</td><td align="left">8000万</td><td>4.375 GB</td><td align="left">零部件供应表</td></tr><tr><td align="left">CUSTOMER</td><td align="left">1500万</td><td>1.317 GB</td><td align="left">客户表</td></tr><tr><td align="left">ORDERS</td><td align="left">1.5亿</td><td>6.301 GB</td><td align="left">订单表</td></tr><tr><td align="left">LINEITEM</td><td align="left">6亿</td><td>20.882 GB</td><td align="left">订单明细表</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-测试sql">4. 测试SQL<a class="hash-link" href="#4-测试sql" title="标题的直接链接">​</a></h2><p>TPCH 22 个测试查询语句 ： <a href="https://github.com/apache/incubator-doris/tree/master/tools/tpch-tools/queries" target="_blank" rel="noopener noreferrer">TPCH-Query-SQL</a></p><p><strong>注意：</strong></p><p>以上 SQL 中的以下四个参数在 Apache Doris 0.15.0 RC04 中不存在，在执行的时候，去掉：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1. enable_vectorized_engine=true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2. batch_size=4096,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3. disable_join_reorder=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4. enable_projection=true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-测试结果">5. 测试结果<a class="hash-link" href="#5-测试结果" title="标题的直接链接">​</a></h2><p>这里我们使用 Apache Doris 1.2.0-rc01， Apache Doris 1.1.3 及 Apache Doris 0.15.0 RC04 版本进行对比测试，测试结果如下：</p><table><thead><tr><th>Query</th><th>Apache Doris 1.2.0-rc01 (s)</th><th>Apache Doris 1.1.3 (s)</th><th>Apache Doris 0.15.0 RC04 (s)</th></tr></thead><tbody><tr><td>Q1</td><td>2.12</td><td>3.75</td><td>28.63</td></tr><tr><td>Q2</td><td>0.20</td><td>4.22</td><td>7.88</td></tr><tr><td>Q3</td><td>0.62</td><td>2.64</td><td>9.39</td></tr><tr><td>Q4</td><td>0.61</td><td>1.5</td><td>9.3</td></tr><tr><td>Q5</td><td>1.05</td><td>2.15</td><td>4.11</td></tr><tr><td>Q6</td><td>0.08</td><td>0.19</td><td>0.43</td></tr><tr><td>Q7</td><td>0.58</td><td>1.04</td><td>1.61</td></tr><tr><td>Q8</td><td>0.72</td><td>1.75</td><td>50.35</td></tr><tr><td>Q9</td><td>3.61</td><td>7.94</td><td>16.34</td></tr><tr><td>Q10</td><td>1.26</td><td>1.41</td><td>5.21</td></tr><tr><td>Q11</td><td>0.15</td><td>0.35</td><td>1.72</td></tr><tr><td>Q12</td><td>0.21</td><td>0.57</td><td>5.39</td></tr><tr><td>Q13</td><td>2.62</td><td>8.15</td><td>20.88</td></tr><tr><td>Q14</td><td>0.16</td><td>0.3</td><td></td></tr><tr><td>Q15</td><td>0.30</td><td>0.66</td><td>1.86</td></tr><tr><td>Q16</td><td>0.38</td><td>0.79</td><td>1.32</td></tr><tr><td>Q17</td><td>0.65</td><td>1.51</td><td>26.67</td></tr><tr><td>Q18</td><td>2.28</td><td>3.364</td><td>11.77</td></tr><tr><td>Q19</td><td>0.20</td><td>0.829</td><td>1.71</td></tr><tr><td>Q20</td><td>0.21</td><td>2.77</td><td>5.2</td></tr><tr><td>Q21</td><td>1.17</td><td>4.47</td><td>10.34</td></tr><tr><td>Q22</td><td>0.46</td><td>0.9</td><td>3.22</td></tr><tr><td><strong>合计</strong></td><td><strong>19.64</strong></td><td><strong>51.253</strong></td><td><strong>223.33</strong></td></tr></tbody></table><p><strong>结果说明</strong></p><ul><li>测试结果对应的数据集为scale 100, 约6亿条。</li><li>测试环境配置为用户常用配置，云服务器4台，16核 64G SSD，1 FE 3 BE 部署。</li><li>选用用户常见配置测试以降低用户选型评估成本，但整个测试过程中不会消耗如此多的硬件资源。</li><li>Apache Doris 0.15 RC04 在 TPC-H 测试中 Q14 执行失败，无法完成查询。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-环境准备">6. 环境准备<a class="hash-link" href="#6-环境准备" title="标题的直接链接">​</a></h2><p>请先参照 <a href="/zh-CN/install/install-deploy.md">官方文档</a> 进行 Doris 的安装部署，以获得一个正常运行中的 Doris 集群（至少包含 1 FE 1 BE，推荐 1 FE 3 BE）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-数据准备">7. 数据准备<a class="hash-link" href="#7-数据准备" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="71-下载安装-tpc-h-数据生成工具">7.1 下载安装 TPC-H 数据生成工具<a class="hash-link" href="#71-下载安装-tpc-h-数据生成工具" title="标题的直接链接">​</a></h3><p>执行以下脚本下载并编译  <a href="https://github.com/apache/incubator-doris/tree/master/tools/tpch-tools" target="_blank" rel="noopener noreferrer">tpch-tools</a>  工具。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> build-tpch-dbgen.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>安装成功后，将在 <code>TPC-H_Tools_v3.0.0/</code> 目录下生成 <code>dbgen</code> 二进制文件。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="72-生成-tpc-h-测试集">7.2 生成 TPC-H 测试集<a class="hash-link" href="#72-生成-tpc-h-测试集" title="标题的直接链接">​</a></h3><p>执行以下脚本生成 TPC-H 数据集：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> gen-tpch-data.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>注1：通过 <code>sh gen-tpch-data.sh -h</code> 查看脚本帮助。</p><p>注2：数据会以 <code>.tbl</code> 为后缀生成在  <code>tpch-data/</code> 目录下。文件总大小约100GB。生成时间可能在数分钟到1小时不等。</p><p>注3：默认生成 100G 的标准测试数据集</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="73-建表">7.3 建表<a class="hash-link" href="#73-建表" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="731-准备-doris-clusterconf-文件">7.3.1 准备 <code>doris-cluster.conf</code> 文件<a class="hash-link" href="#731-准备-doris-clusterconf-文件" title="标题的直接链接">​</a></h4><p>在调用导入脚本前，需要将 FE 的 ip 端口等信息写在 <code>doris-cluster.conf</code> 文件中。</p><p>文件位置和 <code>load-tpch-data.sh</code> 平级。</p><p>文件内容包括 FE 的 ip，HTTP 端口，用户名，密码以及待导入数据的 DB 名称：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Any of FE host</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">FE_HOST</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'127.0.0.1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># http_port in fe.conf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">FE_HTTP_PORT</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">8030</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># query_port in fe.conf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">FE_QUERY_PORT</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">9030</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Doris username</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">USER</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'root'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Doris password</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">PASSWORD</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The database where TPC-H tables located</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">DB</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'tpch1'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="732-执行以下脚本生成创建-tpc-h-表">7.3.2 执行以下脚本生成创建 TPC-H 表<a class="hash-link" href="#732-执行以下脚本生成创建-tpc-h-表" title="标题的直接链接">​</a></h4><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> create-tpch-tables.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者复制 <a href="https://github.com/apache/incubator-doris/blob/master/tools/tpch-tools/create-tpch-tables.sql" target="_blank" rel="noopener noreferrer">create-tpch-tables.sql</a> 中的建表语句，在 Doris 中执行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="74-导入数据">7.4 导入数据<a class="hash-link" href="#74-导入数据" title="标题的直接链接">​</a></h3><p>通过下面的命令执行数据导入：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> ./load-tpch-data.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="75-检查导入数据">7.5 检查导入数据<a class="hash-link" href="#75-检查导入数据" title="标题的直接链接">​</a></h3><p>执行下面的 SQL 语句检查导入的数据与上面的数据量是一致。</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  lineitem</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  orders</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  partsupp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  part</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  customer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  supplier</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  nation</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  region</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain">  revenue0</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="76-查询测试">7.6 查询测试<a class="hash-link" href="#76-查询测试" title="标题的直接链接">​</a></h3><h2 class="anchor anchorWithStickyNavbar_LWe7" id="761-执行查询脚本">7.6.1 执行查询脚本<a class="hash-link" href="#761-执行查询脚本" title="标题的直接链接">​</a></h2><p>执行上面的测试 SQL 或者 执行下面的命令</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./run-tpch-queries.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>注意：</p><ol><li><p>目前Doris的查询优化器和统计信息功能还不完善，所以我们在TPC-H中重写了一些查询以适应Doris的执行框架，但不影响结果的正确性</p></li><li><p>Doris 新的查询优化器将在后续的版本中发布</p></li><li><p>执行查询之前设置 <code>set mem_exec_limit=8G</code></p></li></ol></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="762-单个-sql-执行">7.6.2 单个 SQL 执行<a class="hash-link" href="#762-单个-sql-执行" title="标题的直接链接">​</a></h2><p>下面是测试时使用的 SQL 语句，你也可以从代码库里获取最新的 SQL 。最新测试查询语句地址：<a href="https://github.com/apache/doris/tree/master/tools/tpch-tools/queries" target="_blank" rel="noopener noreferrer">TPC-H 测试查询语句</a></p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">--Q1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=false) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_returnflag</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_linestatus</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> sum_qty</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> sum_base_price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> sum_disc_price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> l_tax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> sum_charge</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">avg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> avg_qty</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">avg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> avg_price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">avg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> avg_disc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> count_order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_shipdate </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1998-12-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'90'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">day</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_returnflag</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_linestatus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_returnflag</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_linestatus</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=1, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_acctbal</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_partkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_mfgr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_comment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    partsupp </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ps_partkey </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> a_partkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ps_supplycost</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> a_min</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            partsupp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            region</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ps_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ps_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_regionkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> r_regionkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> r_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EUROPE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_type </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%BRASS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> a_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> A </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> ps_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> a_partkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> ps_supplycost</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">a_min </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    region</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ps_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ps_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_type </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%BRASS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_regionkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> r_regionkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> r_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EUROPE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_acctbal </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=false, enable_projection=true, runtime_filter_wait_time_ms=10000) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_orderkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> revenue</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_shippriority</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> l_orderkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> l_extendedprice</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> o_shippriority</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> o_custkey </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        lineitem </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> orders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1995-03-15'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1995-03-15'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t1 </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> customer c </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> c_mktsegment </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'BUILDING'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_orderkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_shippriority</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    revenue </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=4, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderpriority</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> order_count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> l_commitdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> l_receiptdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">right</span><span class="token plain"> semi </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> orders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1993-07-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1993-07-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">month</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderpriority</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderpriority</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    region</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> c_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_regionkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> r_regionkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> r_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ASIA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    revenue </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q6</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=1, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_shipdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_discount </span><span class="token operator" style="color:#393A34">between</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">.06</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.01</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">.06</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.01</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">24</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q7</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=458589934592, parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supp_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cust_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            n1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> supp_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            n2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> cust_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            extract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> l_shipdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> l_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lineitem</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            orders</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nation n1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nation n2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> c_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> c_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'FRANCE'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'GERMANY'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'GERMANY'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'FRANCE'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">between</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1995-01-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1996-12-31'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> shipping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supp_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cust_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supp_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cust_nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_year</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> nation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'BRAZIL'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> mkt_share</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            extract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> o_orderdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> o_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> volume</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            n2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_name </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lineitem</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            orders</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nation n1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nation n2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            region</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> c_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_regionkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> r_regionkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> r_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMERICA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">between</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1995-01-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1996-12-31'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ECONOMY ANODIZED STEEL'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> all_nations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_year</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q9</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=37179869184, parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=true, enable_remove_no_conjuncts_runtime_filter_policy=true, runtime_filter_wait_time_ms=100000) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">amount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> sum_profit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            n_name </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            extract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> o_orderdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> o_year</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> ps_supplycost </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> l_quantity </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> amount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lineitem </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> o_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">join</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">shuffle</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> part </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">join</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">shuffle</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> partsupp </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> ps_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">join</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">shuffle</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> supplier </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">join</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">broadcast</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> nation </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ps_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_suppkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            p_name </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%green%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> profit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_year</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_year </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=4, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_custkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> revenue</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_acctbal</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_comment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    customer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> o_custkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">l_extendedprice</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">l_discount </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> lineitem</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> orders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1993-10-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1993-10-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">month</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_returnflag </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'R'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> c_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_custkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_acctbal</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_comment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    revenue </span><span class="token keyword" style="color:#00009f">desc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q11</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ps_partkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ps_supplycost </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ps_availqty</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    partsupp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'GERMANY'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ps_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> B</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ps_partkey </span><span class="token keyword" style="color:#00009f">having</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ps_supplycost </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ps_availqty</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ps_supplycost </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ps_availqty</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.000002</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                partsupp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'GERMANY'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ps_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q12</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_shipmode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> o_orderpriority </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1-URGENT'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> o_orderpriority </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'2-HIGH'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> high_line_count</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> o_orderpriority </span><span class="token operator" style="color:#393A34">&lt;&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1-URGENT'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderpriority </span><span class="token operator" style="color:#393A34">&lt;&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'2-HIGH'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> low_line_count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    o_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipmode </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'MAIL'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'SHIP'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_commitdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> l_receiptdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> l_commitdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_receiptdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_receiptdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_shipmode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_shipmode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q13</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=45899345920, parallel_fragment_exec_instance_num=16, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_count</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> custdist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            c_custkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> c_count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            orders </span><span class="token keyword" style="color:#00009f">right</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">outer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> customer </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                c_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_comment </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%special%requests%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            c_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> c_orders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    custdist </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_count </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q14</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=true, enable_projection=true, runtime_filter_mode=OFF) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">100.00</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> p_type </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'PROMO%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> promo_revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    part</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1995-09-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1995-09-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">month</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_suppkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    total_revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supplier</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    revenue0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> supplier_no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> total_revenue </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">total_revenue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            revenue0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s_suppkey</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q16</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=8, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_brand</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_size</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> ps_suppkey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> supplier_cnt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    partsupp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    part</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ps_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_brand </span><span class="token operator" style="color:#393A34">&lt;&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Brand#45'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_type </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MEDIUM POLISHED%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_size </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">49</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">14</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">23</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">45</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">36</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> ps_suppkey </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            s_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            supplier</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            s_comment </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%Customer%Complaints%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_brand</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_size</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    supplier_cnt </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_brand</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_size</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q17</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=1, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7.0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> avg_yearly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">broadcast</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    part p1 </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_brand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Brand#23'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_container </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MED BOX'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">avg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lineitem </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">broadcast</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            part p2 </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            l_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_brand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Brand#23'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_container </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MED BOX'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q18</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=45899345920, parallel_fragment_exec_instance_num=4, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_custkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">customer </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lineitem </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orders </span><span class="token keyword" style="color:#00009f">left</span><span class="token plain"> semi </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          l_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          l_orderkey </span><span class="token keyword" style="color:#00009f">having</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">300</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> o_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> t2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_orderkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> c_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_custkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q19</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_extendedprice</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> l_discount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> revenue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    part</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_brand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Brand#12'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_container </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SM CASE'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'SM BOX'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'SM PACK'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'SM PKG'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_size </span><span class="token operator" style="color:#393A34">between</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipmode </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'AIR'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AIR REG'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipinstruct </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DELIVER IN PERSON'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_brand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Brand#23'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_container </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'MED BAG'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MED BOX'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MED PKG'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MED PACK'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_size </span><span class="token operator" style="color:#393A34">between</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipmode </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'AIR'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AIR REG'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipinstruct </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DELIVER IN PERSON'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        p_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_partkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_brand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Brand#34'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_container </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'LG CASE'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LG BOX'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LG PACK'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LG PKG'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_quantity </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_size </span><span class="token operator" style="color:#393A34">between</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipmode </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'AIR'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AIR REG'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipinstruct </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DELIVER IN PERSON'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=2, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=true, enable_projection=true, runtime_bloom_filter_size=551943) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s_address </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">supplier </span><span class="token keyword" style="color:#00009f">left</span><span class="token plain"> semi </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> l_partkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">l_suppkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> l_q</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> lineitem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l_shipdate </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1994-01-01'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interval</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">year</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> l_partkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">l_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t2 </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> ps_partkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ps_suppkey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ps_availqty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> partsupp </span><span class="token keyword" style="color:#00009f">left</span><span class="token plain"> semi </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> part</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> ps_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_partkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> p_name </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'forest%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> t2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_partkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ps_partkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> t2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ps_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ps_availqty </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> t2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_q</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ps_suppkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CANADA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> s_name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q21</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=4, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=true, enable_cost_based_join_reorder=true, enable_projection=true) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> numwait</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lineitem l2 </span><span class="token keyword" style="color:#00009f">right</span><span class="token plain"> semi </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lineitem l3 </span><span class="token keyword" style="color:#00009f">right</span><span class="token plain"> anti </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      orders </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> lineitem l1 </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> l1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o_orderkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o_orderstatus </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'F'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        supplier </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> nation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s_nationkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n_nationkey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> n_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'SAUDI ARABIA'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> t1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">s_suppkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_suppkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_receiptdate </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_commitdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> l3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_suppkey </span><span class="token operator" style="color:#393A34">&lt;&gt;</span><span class="token plain"> t2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_suppkey  </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_receiptdate </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_commitdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> t3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> l2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_orderkey </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> l2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_suppkey </span><span class="token operator" style="color:#393A34">&lt;&gt;</span><span class="token plain"> t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">l_suppkey </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">s_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    numwait </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">s_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">--Q22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> tmp </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">avg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_acctbal</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> av</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    customer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    c_acctbal </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'13'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'31'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'23'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'29'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'30'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'18'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'17'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=4,runtime_bloom_filter_size=4194304) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cntrycode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> numcust</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_acctbal</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> totacctbal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> cntrycode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            c_acctbal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             orders </span><span class="token keyword" style="color:#00009f">right</span><span class="token plain"> anti </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> customer c </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain">  o_custkey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c_custkey </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> tmp </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c_acctbal </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">av</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_phone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'13'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'31'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'23'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'29'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'30'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'18'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'17'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> custsale</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cntrycode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cntrycode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="技术解析" term="技术解析"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris 1.1.4 Release]]></title>
        <id>/release-1.1.4</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-1.1.4"/>
        <updated>2022-11-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>作为 1.1 LTS（Long-term Support，长周期支持）版本基础之上的 Bugfix 版本，在 Apache Doris 1.1.4 版本中，Doris 团队修复了自 1.1.3 版本以来的约 60 个 Issue 或性能优化项。改进了 Spark Load 的使用体验，优化了诸多内存以及 BE 异常宕机的问题，系统稳定性和性能得以进一步加强，推荐所有用户下载和使用。</p><h1>新增功能</h1><ul><li><p>Broker Load 支持 华为云 OBS 对象存储。<a href="https://github.com/apache/doris/pull/13523" target="_blank" rel="noopener noreferrer">#13523</a></p></li><li><p>Spark Load 支持 Parquet 和 Orc 文件。<a href="https://github.com/apache/doris/pull/13438" target="_blank" rel="noopener noreferrer">#13438</a></p></li></ul><h1>优化改进</h1><ul><li>禁用 Metric Hook 中的互斥量，其将影响数据导入过程中的查询性能。 <a href="https://github.com/apache/doris/pull/10941" target="_blank" rel="noopener noreferrer">#10941</a></li></ul><h1>Bug 修复</h1><ul><li><p>修复了当 Spark Load 加载文件时 Where 条件不生效的问题。 <a href="https://github.com/apache/doris/pull/13804" target="_blank" rel="noopener noreferrer">#13804</a></p></li><li><p>修复了 If 函数存在 Nullable 列时开启向量化返回错误结果的问题。 <a href="https://github.com/apache/doris/pull/13779" target="_blank" rel="noopener noreferrer">#13779</a></p></li><li><p>修复了在使用 Anti Join 和其他 Join 谓词时产生错误结果的问题。 <a href="https://github.com/apache/doris/pull/13743" target="_blank" rel="noopener noreferrer">#13743</a></p></li><li><p>修复了当调用函数 concat(ifnull)时 BE 宕机的问题。 <a href="https://github.com/apache/doris/pull/13693" target="_blank" rel="noopener noreferrer">#13693</a></p></li><li><p>修复了 group by 语句中存在函数时 planner 错误的问题。 <a href="https://github.com/apache/doris/pull/13613" target="_blank" rel="noopener noreferrer">#13613</a></p></li><li><p>修复了 lateral view 语句不能正确识别表名和列名的问题。 <a href="https://github.com/apache/doris/pull/13600" target="_blank" rel="noopener noreferrer">#13600</a></p></li><li><p>修复了使用物化视图和表别名时出现未知列的问题。 <a href="https://github.com/apache/doris/pull/13605" target="_blank" rel="noopener noreferrer">#13605</a></p></li><li><p>修复了 JSONReader 无法释放值和解析 allocator 内存的问题。 <a href="https://github.com/apache/doris/pull/13513" target="_blank" rel="noopener noreferrer">#13513</a></p></li><li><p>修复了当 enable_vectorized_alter_table 为 true 时允许使用 to_bitmap() 对负值列创建物化视图的问题。 <a href="https://github.com/apache/doris/pull/13448" target="_blank" rel="noopener noreferrer">#13448</a></p></li><li><p>修复了函数 from_date_format_str 中微秒数丢失的问题。 <a href="https://github.com/apache/doris/pull/13446" target="_blank" rel="noopener noreferrer">#13446</a></p></li><li><p>修复了排序 exprs 的 nullability 属性在使用子 smap 信息进行替换后可能不正确的问题。 <a href="https://github.com/apache/doris/pull/13328" target="_blank" rel="noopener noreferrer">#13328</a></p></li><li><p>修复了 case when 有 1000 个条件时出现 Core 的问题。 <a href="https://github.com/apache/doris/pull/13315" target="_blank" rel="noopener noreferrer">#13315</a></p></li><li><p>修复了 Stream Load 导入数据时最后一行数据丢失的问题。 <a href="https://github.com/apache/doris/pull/13066" target="_blank" rel="noopener noreferrer">#13066</a></p></li><li><p>恢复表或分区的副本数与备份前相同。 <a href="https://github.com/apache/doris/pull/11942" target="_blank" rel="noopener noreferrer">#11942</a></p></li></ul>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris 1.1.3 Release]]></title>
        <id>/release-1.1.3</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-1.1.3"/>
        <updated>2022-10-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>作为 1.1.2 LTS（Long-term Support，长周期支持）版本基础之上的 Bugfix 版本，在 Apache Doris 1.1.3 版本中，有超过 80 个 Issue 或性能优化项被合入，优化了在导入或查询过程中的内存控制，修复了许多导致 BE Core 以及产生错误查询结果的问题，系统稳定性和性能得以进一步加强，推荐所有用户下载和使用。</p><h1>新增功能</h1><ul><li><p>在 ODBC 表中支持 SQLServer 和 PostgreSQL 的转义标识符。</p></li><li><p>支持使用 Parquet 作为导出文件格式。</p></li></ul><h1>优化改进</h1><ul><li><p>优化了 Flush 策略以及避免过多 Segment 小文件。 <a href="https://github.com/apache/doris/pull/12706" target="_blank" rel="noopener noreferrer">#12706</a> <a href="https://github.com/apache/doris/pull/12716" target="_blank" rel="noopener noreferrer">#12716</a></p></li><li><p>重构 Runtime Filter 以减少初始准备时间。 <a href="https://github.com/apache/doris/pull/13127" target="_blank" rel="noopener noreferrer">#13127</a></p></li><li><p>修复了若干个在查询或导入过程中的内存控制问题。 <a href="https://github.com/apache/doris/pull/12682" target="_blank" rel="noopener noreferrer">#12682</a> <a href="https://github.com/apache/doris/pull/12688" target="_blank" rel="noopener noreferrer">#12688</a> <a href="https://github.com/apache/doris/pull/12708" target="_blank" rel="noopener noreferrer">#12708</a> <a href="https://github.com/apache/doris/pull/12776" target="_blank" rel="noopener noreferrer">#12776</a> <a href="https://github.com/apache/doris/pull/12782" target="_blank" rel="noopener noreferrer">#12782</a> <a href="https://github.com/apache/doris/pull/12791" target="_blank" rel="noopener noreferrer">#12791</a> <a href="https://github.com/apache/doris/pull/12794" target="_blank" rel="noopener noreferrer">#12794</a> <a href="https://github.com/apache/doris/pull/12820" target="_blank" rel="noopener noreferrer">#12820</a> <a href="https://github.com/apache/doris/pull/12932" target="_blank" rel="noopener noreferrer">#12932</a> <a href="https://github.com/apache/doris/pull/12954" target="_blank" rel="noopener noreferrer">#12954</a> <a href="https://github.com/apache/doris/pull/12951" target="_blank" rel="noopener noreferrer">#12951</a></p></li></ul><h1>Bug 修复</h1><ul><li><p>修复了 largeint 类型在 Compaction 过程中导致 Core 的问题。 <a href="https://github.com/apache/doris/pull/10094" target="_blank" rel="noopener noreferrer">#10094</a></p></li><li><p>修复了 Grouping set 导致 BE Core 或者返回错误结果的问题。 <a href="https://github.com/apache/doris/pull/12313" target="_blank" rel="noopener noreferrer">#12313</a></p></li><li><p>修复了使用 orthogonal_bitmap_union_count 函数时执行计划 PREAGGREGATION 显示错误的问题。 <a href="https://github.com/apache/doris/pull/12581" target="_blank" rel="noopener noreferrer">#12581</a></p></li><li><p>修复了 Level1Iterator 未被释放导致的内存泄漏问题。 <a href="https://github.com/apache/doris/pull/12592" target="_blank" rel="noopener noreferrer">#12592</a></p></li><li><p>修复了当 2 BE 且存在 Colocation 表时通过 Decommission 下线节点失败的问题。 <a href="https://github.com/apache/doris/pull/12644" target="_blank" rel="noopener noreferrer">#12644</a></p></li><li><p>修复了 TBrokerOpenReaderResponse 过大时导致堆栈缓冲区溢出而导致的 BE Core 问题。 <a href="https://github.com/apache/doris/pull/12658" target="_blank" rel="noopener noreferrer">#12658</a></p></li><li><p>修复了出现 -238错误时 BE 节点可能 OOM 的问题。 <a href="https://github.com/apache/doris/pull/12666" target="_blank" rel="noopener noreferrer">#12666</a></p></li><li><p>修复了 LEAD() 函数错误子表达式的问题。 <a href="https://github.com/apache/doris/pull/12587" target="_blank" rel="noopener noreferrer">#12587</a></p></li><li><p>修复了行存代码中相关查询失败的问题。 <a href="https://github.com/apache/doris/pull/12712" target="_blank" rel="noopener noreferrer">#12712</a></p></li><li><p>修复了 curdate()/current_date() 函数产生错误结果的问题。 <a href="https://github.com/apache/doris/pull/12720" target="_blank" rel="noopener noreferrer">#12720</a></p></li><li><p>修复了 lateral View explode_split 函数出现错误结果的问题。 <a href="https://github.com/apache/doris/pull/13643" target="_blank" rel="noopener noreferrer">#13643</a></p></li><li><p>修复了两张相同表中 Bucket Shuffle Join 计划错误的问题。 <a href="https://github.com/apache/doris/pull/12930" target="_blank" rel="noopener noreferrer">#12930</a></p></li><li><p>修复了更新或导入过程中 Tablet 版本可能错误的问题。 <a href="https://github.com/apache/doris/pull/13070" target="_blank" rel="noopener noreferrer">#13070</a></p></li><li><p>修复了在加密函数下使用 Broker 导入数据时 BE 可能发生 Core 的问题。 <a href="https://github.com/apache/doris/pull/13009" target="_blank" rel="noopener noreferrer">#13009</a></p></li></ul><h1>升级说明</h1><p>默认情况下禁用 PageCache 和 ChunkAllocator 以减少内存使用，用户可以通过修改配置项 <code>disable_storage_page_cache</code> 和 <code>chunk_reserved_bytes_limit</code> 来重新启用。</p><p>Storage Page Cache 和 Chunk Allocator 分别缓存用户数据块和内存预分配。</p><p>这两个功能会占用一定比例的内存，并且不会释放。 这部分内存占用无法灵活调配，导致在某些场景下，因这部分内存占用而导致其他任务内存不足，影响系统稳定性和可用性。因此我们在 1.1.3 版本中默认关闭了这两个功能。</p><p>但在某些延迟敏感的报表场景下，关闭该功能可能会导致查询延迟增加。如用户担心升级后该功能对业务造成影响，可以通过在 be.conf 中增加以下参数以保持和之前版本行为一致。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">disable_storage_page_cache=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chunk_reserved_bytes_limit=10%</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>disable_storage_page_cache</code>：是否关闭 Storage Page Cache。 1.1.2（含）之前的版本，默认是false，即打开。1.1.3 版本默认为 true，即关闭。</li><li><code>chunk_reserved_bytes_limit</code>：Chunk allocator 预留内存大小。1.1.2（含）之前的版本，默认是整体内存的 10%。1.1.3 版本默认为 209715200（200MB）。</li></ul>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris 1.1.2 Release]]></title>
        <id>/release-1.1.2</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-1.1.2"/>
        <updated>2022-09-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>在 Apache Doris 1.1.2 版本中，我们引入了新的 Memtracker、极大程度上避免 OOM 类问题的发生，提升了向量化执行引擎在多数查询场景的性能表现，修复了诸多导致 BE 和 FE 发生异常的问题，优化了在湖仓联邦查询场景的部分体验问题并提升访问外部数据的性能。</p><p>相较于 1.1.1 版本，在 1.1.2 版本中有超过 170 个 Issue 和性能优化项被合入，系统稳定性和性能都得到进一步加强。与此同时，1.1.2 版本还将作为 Apache Doris 首个 LTS （Long-term Support）长周期支持版本，后续长期维护和支持，推荐所有用户下载和升级。</p><h1>新增功能</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="memtracker">MemTracker<a class="hash-link" href="#memtracker" title="标题的直接链接">​</a></h3><p>MemTracker 是一个用于分析内存使用情况的统计工具，在 1.1.1 版本中我们引入了简易版 Memtracker 用以控制 BE 侧内存。在 1.1.2 版本中，我们引入了新的 MemTracker，在向量化执行引擎和非向量化执行引擎中都更为准确。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="增加展示和取消正在执行-query-的-api">增加展示和取消正在执行 Query 的 API<a class="hash-link" href="#增加展示和取消正在执行-query-的-api" title="标题的直接链接">​</a></h3><p><code>GET /rest/v2/manager/query/current_queries</code></p><p><code>GET /rest/v2/manager/query/kill/{query_id}</code></p><p>具体使用参考文档 <a href="https://doris.apache.org/zh-CN/docs/dev/admin-manual/http-actions/fe/manager/query-profile-action?_highlight=current&amp;_highlight=query#request" target="_blank" rel="noopener noreferrer">Query Profile Action</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持读写-emoji-表情通过-odbc-外表">支持读写 Emoji 表情通过 ODBC 外表<a class="hash-link" href="#支持读写-emoji-表情通过-odbc-外表" title="标题的直接链接">​</a></h3><h1>优化改进</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据湖相关改进">数据湖相关改进<a class="hash-link" href="#数据湖相关改进" title="标题的直接链接">​</a></h3><ul><li><p>扫描 HDFS ORC 文件时性能提升约 300%。<a href="https://github.com/apache/doris/pull/11501" target="_blank" rel="noopener noreferrer">#11501</a></p></li><li><p>查询 Iceberg 表支持 HDFS 的 HA 模式。</p></li><li><p>支持查询由 <a href="https://tez.apache.org/" target="_blank" rel="noopener noreferrer">Apache Tez</a> 创建的 Hive 数据</p></li><li><p>添加阿里云 OSS 作为 Hive 外部支持</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="在-spark-load-中增加对-string-字符串类型和-text-文本类型的支持">在 Spark Load 中增加对 String 字符串类型和 Text 文本类型的支持<a class="hash-link" href="#在-spark-load-中增加对-string-字符串类型和-text-文本类型的支持" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="在非向量化引擎支持复用-block在某些场景中有-50性能提升11392">在非向量化引擎支持复用 Block，在某些场景中有 50%性能提升。<a href="https://github.com/apache/doris/pull/11392" target="_blank" rel="noopener noreferrer">#11392</a><a class="hash-link" href="#在非向量化引擎支持复用-block在某些场景中有-50性能提升11392" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="提升-like-和正则表达式的性能">提升 Like 和正则表达式的性能<a class="hash-link" href="#提升-like-和正则表达式的性能" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="禁用-tcmalloc-的-aggressive_memory_decommit">禁用 TCMalloc 的 aggressive_memory_decommit。<a class="hash-link" href="#禁用-tcmalloc-的-aggressive_memory_decommit" title="标题的直接链接">​</a></h3><p>在查询或导入时将会有 40% 性能提升，也可以在配置文件中通过 <code>tc_enable_aggressive_memory_decommit</code>来修改</p><h1>Bug Fix</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复部分可能导致-fe-失败或者数据损坏的问题">修复部分可能导致 FE 失败或者数据损坏的问题<a class="hash-link" href="#修复部分可能导致-fe-失败或者数据损坏的问题" title="标题的直接链接">​</a></h3><ul><li><p>在 HA 环境中，BDBJE 将保留尽可能多的文件，通过增加配置 <code>bdbje_reserved_disk_bytes </code>以避免产生太多的 BDBJE 文件，BDBJE 日志只有在接近磁盘限制时才会删除。</p></li><li><p>修复了 BDBJE 中的重要错误，该错误将导致 FE 副本无法正确启动或数据损坏。</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复-fe-在查询过程中会在-waitfor_rpc-上-hang-住以及-be-在高并发情况下会-hang-住的问题">修复 FE 在查询过程中会在 waitFor_rpc 上 Hang 住以及 BE 在高并发情况下会 Hang 住的问题。<a class="hash-link" href="#修复-fe-在查询过程中会在-waitfor_rpc-上-hang-住以及-be-在高并发情况下会-hang-住的问题" title="标题的直接链接">​</a></h3><p><a href="https://github.com/apache/doris/pull/12459" target="_blank" rel="noopener noreferrer">#12459</a> <a href="https://github.com/apache/doris/pull/12458" target="_blank" rel="noopener noreferrer">#12458</a> <a href="https://github.com/apache/doris/pull/12392" target="_blank" rel="noopener noreferrer">#12392</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复向量化执行引擎查询时得到错误结果的问题">修复向量化执行引擎查询时得到错误结果的问题。<a class="hash-link" href="#修复向量化执行引擎查询时得到错误结果的问题" title="标题的直接链接">​</a></h3><p><a href="https://github.com/apache/doris/pull/11754" target="_blank" rel="noopener noreferrer">#11754</a> <a href="https://github.com/apache/doris/pull/11694" target="_blank" rel="noopener noreferrer">#11694</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复许多-planner-导致-be-core-或者处于不正常状态的问题">修复许多 Planner 导致 BE Core 或者处于不正常状态的问题。<a class="hash-link" href="#修复许多-planner-导致-be-core-或者处于不正常状态的问题" title="标题的直接链接">​</a></h3><p><a href="https://github.com/apache/doris/pull/12080" target="_blank" rel="noopener noreferrer">#12080</a> <a href="https://github.com/apache/doris/pull/12075" target="_blank" rel="noopener noreferrer">#12075</a> <a href="https://github.com/apache/doris/pull/12040" target="_blank" rel="noopener noreferrer">#12040</a> <a href="https://github.com/apache/doris/pull/12003" target="_blank" rel="noopener noreferrer">#12003</a> <a href="https://github.com/apache/doris/pull/12007" target="_blank" rel="noopener noreferrer">#12007</a> <a href="https://github.com/apache/doris/pull/11971" target="_blank" rel="noopener noreferrer">#11971</a> <a href="https://github.com/apache/doris/pull/11933" target="_blank" rel="noopener noreferrer">#11933</a> <a href="https://github.com/apache/doris/pull/11861" target="_blank" rel="noopener noreferrer">#11861</a> <a href="https://github.com/apache/doris/pull/11859" target="_blank" rel="noopener noreferrer">#11859</a> <a href="https://github.com/apache/doris/pull/11855" target="_blank" rel="noopener noreferrer">#11855</a> <a href="https://github.com/apache/doris/pull/11837" target="_blank" rel="noopener noreferrer">#11837</a> <a href="https://github.com/apache/doris/pull/11834" target="_blank" rel="noopener noreferrer">#11834</a> <a href="https://github.com/apache/doris/pull/11821" target="_blank" rel="noopener noreferrer">#11821</a> <a href="https://github.com/apache/doris/pull/11782" target="_blank" rel="noopener noreferrer">#11782</a> <a href="https://github.com/apache/doris/pull/11723" target="_blank" rel="noopener noreferrer">#11723</a> <a href="https://github.com/apache/doris/pull/11569" target="_blank" rel="noopener noreferrer">#11569</a></p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doris Stream Load原理解析]]></title>
        <id>/principle-of-Doris-Stream-Load</id>
        <link href="https://doris.apache.org/zh-CN/blog/principle-of-Doris-Stream-Load"/>
        <updated>2022-09-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p><strong>导读：</strong></p><p>Stream Load是Doris用户最常用的数据导入方式之一，它是一种同步的导入方式, 允许用户通过Http访问的方式批量地将数据导入Doris，并返回数据导入的结果。用户可以直接通过Http请求的返回体判断数据导入是否成功，也可以通过在客户端执行查询SQL来查询历史任务的结果。</p><h1><strong>Stream Load简介</strong></h1><p>Doris的导入（Load）功能就是将用户的原始数据导入到 Doris表中。Doris底层实现了统一的流式导入框架，在这个框架之上，Doris提供了非常丰富的导入方式以适应不同的数据源和数据导入需求。Stream Load是Doris用户最常用的数据导入方式之一，它是一种同步的导入方式, 允许用户通过Http访问的方式批量地将CSV格式或JSON格式的数据导入Doris，并返回数据导入的结果。用户可以直接通过Http请求的返回体判断数据导入是否成功，也可以通过在客户端执行查询SQL来查询历史任务的结果。另外，Doris还为Stream Load提供了操作审计功能，可以通过审计日志对历史的Stream Load任务信息进行审计。本文将从Stream Load的执行流程、事务管理、导入计划的执行、数据写入以及操作审计等方面对Stream Load的实现原理进行深入地解析。</p><h1>1 <strong>执行流程</strong></h1><p>用户将Stream Load的Http请求提交给FE，FE会通过 Http 重定向（Redirect）将数据导入请求转发给某一个BE节点，该BE节点将作为本次Stream Load任务的Coordinator。在这个过程中，接收请求的FE节点仅仅提供转发服务，由作为 Coordinator的BE节点实际负责整个导入作业，比如负责向Master FE发送事务请求、从FE获取导入执行计划、接收实时数据、分发数据到其他Executor BE节点以及数据导入结束后返回结果给用户。用户也可以将Stream Load的Http请求直接提交给某一个指定的BE节点，并由该节点作为本次Stream Load任务的Coordinator。在Stream Load过程中，Executor BE节点负责将数据写入存储层。</p><p>在Coordinator BE中，通过一个线程池来处理所有的Http请求，其中包括Stream Load请求。一次Stream Load任务通过导入的Label唯一标识。Stream Load的原理框图如图1所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_1_en-b2fe685555585338cf6207b8d24a878e.png" width="1080" height="1044" class="img_ev3q"></p><p>Stream Load完整执行流程如图2所示：</p><p>(1)用户提交Stream Load的Http请求到FE（用户也可以直接提交Stream Load的Http请求到Coordinator BE）。</p><p>(2)FE接收到用户提交的Stream Load请求后，会进行Http的Header解析（其中包括解析数据导入的库、表、Label等信息），然后进行用户鉴权。如果Http的Header解析成功并且用户鉴权通过，FE会将Stream Load的Http请求转发到一台BE节点，该BE节点将作为本次Stream Load的Coordinator；否则，FE会直接向用户返回Stream Load的失败信息。</p><p>(3)Coordinator BE接收到Stream Load的Http请求后，会首先进行Http的Header解析和数据校验，其中包括解析数据的文件格式、数据body的大小、Http超时时间、进行用户鉴权等。如果Header数据校验失败，会直接向用户返回Stream Load的失败信息。</p><p>(4)Http Header数据校验通过之后，Coordinator BE会通过Thrift RPC向FE发送Begin Transaction的请求。</p><p>(5)FE收到Coordinator BE发送的Begin Transaction的请求之后，会开启一个事务，并向Coordinator BE返回Transaction Id。</p><p>(6)Coordinator BE收到Begin Transaction成功信息之后，会通过Thrift RPC向 FE发送获取导入计划的请求。</p><p>(7)FE收到Coordinator BE发送的获取导入计划的请求之后，会为Stream Load任务生成导入计划，并返回给Coordinator BE。</p><p>(8)Coordinator BE接收到导入计划之后，开始执行导入计划，其中包括接收Http传来的实时数据以及将实时数据通过BRPC分发到其他Executor BE。</p><p>(9)Executor BE接收到Coordinator BE分发的实时数据之后，负责将数据写入存储层。</p><p>(10)Executor BE完成数据写入之后，Coordinator BE通过Thrift RPC 向FE发送Commit Transaction的请求。</p><p>(11)FE收到Coordinator BE发送的Commit Transaction的请求之后，会对事务进行提交， 并向Executor BE发送 Publish Version的任务，同时等待Executor BE执行Publish Version完成。</p><p>(12)Executor BE异步执行Publish Version，将数据导入生成的Rowset变为可见数据版本。</p><p>(13)Publish Version正常完成或执行超时之后，FE向Coordinator BE返回Commit Transaction和Publish Version的结果。</p><p>(14)Coordinator BE向用户返回Stream Load的最终结果。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_2_en-c2ea39e56fb64fa30ef649c281ee5e67.png" width="1068" height="1461" class="img_ev3q"></p><h1>2 事务管理</h1><p>Doris通过事务（Transaction）来保证数据导入的原子性，一次Stream Load任务对应一个事务。Stream Load的事务管理由FE负责，FE通过FrontendService接收Coordinator BE节点发送来的Thrift RPC事务请求，事务请求类型包括Begin Transaction、Commit Transaction和Rollback Transaction。Doris的事务状态包括：PREPARE、COMMITTED、VISIBLE和ABORTED。Stream Load事务的状态流转过程如图3所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_3_en-afe100ea9995f8032cf312bb75825028.png" width="1080" height="165" class="img_ev3q"></p><p>数据导入开始之前，Coordinator BE节点会向FE发送Begin Transaction请求，FE会检查本次Begin Transaction请求的label是否已经存在，如果label在系统中不存在，则会为当前label开启一个新的事务，并为事务分配Transaction Id，同时将事务状态设置为PREPARE，然后将Transaction Id以及Begin Transaction成功的信息返回给Coordinator BE；否则，本次事务可能是一次重复的数据导入，FE向Coordinator BE返回Begin Transaction失败的信息，Stream Load任务退出。</p><p>当数据在所有Executor BE节点完成写入之后，Coordinator BE节点会向FE发送Commit Transaction请求，FE收到Commit Transaction请求之后会执行Commit Transaction以及Publish Version两个操作。首先，FE会判断每一个Tablet成功写入数据的副本数量是否超过了Tablet副本总数的一半，如果每一个Tablet成功写入数据的副本数量都超过Tablet副本总数的一半（多数成功），则Commit Transaction成功，并将事务状态设置为COMMITTED；否则，向Coordinator BE返回Commit Transaction失败的信息。COMMITTED状态表示数据已经成功写入，但是数据还不可见，需要继续执行Publish Version任务，此后，事务不可被回滚。</p><p>FE会有一个单独的线程对Commit成功的Transaction执行Publish Version，FE执行Publish Version时会通过Thrift RPC向Transaction相关的所有Executor BE节点下发Publish Version请求，Publish Version任务在各个Executor BE节点异步执行，将数据导入生成的Rowset变为可见的数据版本。当Executor BE上所有的Publish Version任务执行成功，FE会将事务状态设置为VISIBLE，并向Coordinator BE返回Commit Transaction以及Publish Version成功的信息。如果存在某些Publish Version任务失败，FE会向Executor BE节点重复下发Publish Version请求直到之前失败的Publish Version任务成功。如果在一定超时时间之后，事务状态还没有被设置为VISIBLE，FE就会向Coordinator BE返回Commit Transaction成功但Publish Version超时的信息（注意，此时数据依然是写入成功的，只是还处于不可见状态，用户需要等待事务状态最终变为VISIBLE）。</p><p>当从FE获取导入计划失败、执行数据导入失败或Commit Transaction失败时，Coordinator BE节点会向FE发送Rollback Transaction请求，执行事务回滚。FE收到事务回滚的请求之后，会将事务的状态设置为ABORTED，并通过Thrift RPC向Executor BE发送Clear Transaction的请求，Clear Transaction任务在BE节点异步执行，将数据导入生成的Rowset标记为不可用，这些Rowset在之后会从BE上被删除。状态为COMMITTED的事务（Commit Transaction成功但Publish Version超时的事务）不能被回滚。</p><h1>3 导入计划的执行</h1><p>在Doris的BE中，所有执行计划由FragmentMgr管理，每一个导入计划的执行由PlanFragmentExecutor负责。BE从FE获取到导入执行计划之后，会将导入计划提交到FragmentMgr的线程池执行。Stream Load 的导入执行计划只有一个Fragment， 其中包含一个BrokerScanNode 和 一个 OlapTableSink。BrokerScanNode负责实时读取流式数据，并将 CSV 格式或JSON格式的数据行转为 Doris 的Tuple格式；OlapTableSink 负责将实时数据发送到对应的Executor BE节点，每个数据行对应哪个Executor BE节点是由数据行所在的Tablet存储在哪些BE上决定的，可以根据数据行的 PartitionKey和DistributionKey确定该行数据所在的Partition和Tablet，每个Tablet及其副本存储在哪台BE节点上是在Table或Partition创建时就已经确定的。</p><p>导入执行计划提交到FragmentMgr的线程池之后，Stream Load线程会按块（chunk）接收通过Http传输的实时数据并写入StreamLoadPipe中，BrokerScanNode会从StreamLoadPipe中批量读取实时数据，OlapTableSink会将BrokerScanNode读取的批量数据通过BRPC发送到Executor BE进行数据写入。所有实时数据都写入StreamLoadPipe之后，Stream Load线程会等待导入计划执行结束。</p><p>PlanFragmentExecutor执行一个具体的导入计划过程由Prepare、Open和Close三个阶段组成。在Prepare阶段，主要对来自FE的导入执行计划进行解析；在Open阶段，会打开BrokerScanNode和OlapTableSink，BrokerScanNode负责每次读取一个Batch的实时数据，OlapTableSink负责调用BRPC将每一个Batch的数据发送到其他Executor BE节点；在Close阶段，负责等待数据导入结束，并关闭BrokerScanNode和OlapTableSink。Stream Load的导入执行计划如图4所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_4_en-6bf14a31ea5acff82e83e5745a3603aa.png" width="1080" height="888" class="img_ev3q"></p><p>OlapTableSink负责Stream Load任务的数据分发。Doris中的Table可能会有Rollup或物化视图，每一个Table及其Rollup、物化视图都称为一个Index。数据分发过程中，IndexChannel会维护一个Index的数据分发通道，Index下的Tablet可能会有多个副本（Replica），并分布在不同的BE节点上，NodeChannel会在IndexChannel下维护一个Executor BE节点的数据分发通道，因此，OlapTableSink下包含多个IndexChannel，每一个IndexChannel下包含多个NodeChannel，如图5所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_5_en-f040fee94a651a88a2a3ef68de235532.png" width="1080" height="471" class="img_ev3q"></p><p>OlapTableSink分发数据时，会逐行读取BrokerScanNode获取到的数据Batch，并将数据行添加到每一个Index的IndexChannel中。可以根据 PartitionKey和DistributionKey确定数据行所在的Partition和Tablet，进而根据Tablet在Partition中的顺序计算出数据行在其他Index中对应的Tablet。每一个Tablet可能会有多个副本，并分布在不同的BE节点上，因此，在IndexChannel中会将每一个数据行添加到其所在Tablet的每一个副本对应的NodeChannel中。每一个NodeChannel中都会有一个发送队列，当NodeChannel中新增的数据行累积到一定的大小就会作为一个数据Batch被添加到发送队列中。OlapTableSink中会有一个固定的线程依次轮训每一个IndexChannel下的每一个NodeChannel，并调用BRPC将发送队列中的一个数据Batch发送到对应的Executor BE上。Stream Load任务的数据分发过程如图6所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_6_en-20cfadfbbb14b377e4a0debd6ef0bb1b.png" width="1080" height="850" class="img_ev3q"></p><h1>4 <strong>数据写入</strong></h1><p>Executor BE的BRPC server接收到Coordinator BE发送来的数据Batch之后，会将数据写入任务提交到线程池来异步执行。在Doris的BE中，数据采用分层的方式写入存储层，每一个Stream Load任务在每个Executor BE上都对应一个LoadChannel，LoadChannel维护一次Stream Load任务的数据写入通道，负责一次Stream Load任务在当前Executor BE节点的数据写入，LoadChannel可以将一次Stream Load任务在当前BE节点的数据分批写入存储层，直到Stream Load任务完成。每一个LoadChannel由Load Id唯一标识，BE节点上的所有LoadChannel由LoadChannelMgr进行管理。一次Stream Load任务对应的Table可能会有多个Index，每一个Index对应一个TabletsChannel，由Index Id唯一标识，因此，每一个LoadChannel下会有多个TabletsChannel。TabletsChannel维护一个Index的数据写入通道，负责管理Index下所有Tablet的数据写入，TabletsChannel会逐行读取数据Batch并通过DeltaWriter写入对应的Tablet中。DeltaWriter维护一个Tablet的数据写入通道，由Tablet Id唯一标识，负责接收单个Tablet的数据导入，并将数据写入Tablet对应的MemTable中，当MemTable写满之后，会将MemTable里的数据刷写（Flush）到磁盘并生成一个个Segment文件。MemTable采用SkipList的数据结构，将数据暂时保存在内存中，SkipList会按照Schema的Key对数据行进行排序，另外，如果数据模型为Aggregate或Unique，MemTable会对具有相同Key的数据行进行聚合。Stream Load任务的数据写入通道如图7所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_7_en-757ccfec5d94537f5e85cc8026cc0d4a.png" width="1080" height="656" class="img_ev3q"></p><p>MemTable的刷写操作由MemtableFlushExecutor异步执行，当MemTable的刷写任务提交到线程池之后，会生成一个新的MemTable来接收当前Tablet的后续数据写入。MemtableFlushExecutor执行数据刷写时，RowsetWriter会读出MemTable中的所有数据，并通过SegmentWriter刷写出多个Segment文件，每个Segment文件大小不超过256MB。对于一个Tablet，每次Stream Load任务都会生成一个新的Rowset，生成的Rowset中可以包含多个Segment文件。Stream Load任务的数据写入过程如图8所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_8_en-11db5419d6ebd287d1abcb254fd174f0.png" width="1073" height="1280" class="img_ev3q"></p><p>Executor BE节点上的TxnManager负责Tablet级别数据导入的事务管理，DeltaWriter初始化时，会执行Prepare Transaction将对应Tablet在本次Stream Load任务中的数据写入事务添加到TxnManager中进行管理；数据写入Tablet完成并关闭DeltaWriter时，会执行Commit Transaction将数据导入生成的新的Rowset添加到TxnManager中进行管理。注意，这里的TxnManager只是负责单个BE上的事务，而FE中的事务管理是负责整体导入事务的。</p><p>数据导入结束之后，Executor BE执行FE下发的Publish  Version任务时，会执行Publish Transaction将数据导入生成的新的Rowset变为可见版本，并从TxnManager中将对应Tablet在本次Stream Load任务中的数据写入事务删除，这意味着Tablet在本次Stream Load任务中的数据写入事务结束。</p><h1>5 <strong>Stream Load操作审计</strong></h1><p>Doris为Stream Load增加了操作审计功能，每一次Stream Load任务结束并将结果返回给用户之后，Coordinator BE会将本次Stream Load任务的详细信息持久化地存储在本地RocksDB上。Master FE定时地通过Thrift RPC从集群的各个BE节点上拉取已经结束的Stream Load任务的信息，每次从一个BE节点上拉取一个批次的Stream Load操作记录，并将拉取到的Stream Load任务信息写入审计日志（fe.audit.log）中。存储在BE上的每一条Stream Load任务信息会设有过期时间（TTL），RocksDB执行Compaction时会将过期的Stream Load任务信息进行删除。用户可以通过FE的审计日志对历史的Stream Load任务信息进行审计。</p><p>FE将拉取的Stream Load任务信息写入Audit日志的同时，会在内存中保留一份。为防止内存膨胀，内存中会保留固定数量的Stream Load任务的信息，随着后续拉取数据地持续进行，会从FE内存中逐渐淘汰掉早期的Stream Load任务信息。用户可以通过客户端执行SHOW STREAM LOAD命令来查询最近的Stream Load任务信息。</p><h1>总结</h1><p>本文从Stream Load的执行流程、事务管理、导入计划的执行、数据写入以及操作审计等方面对Stream Load的实现原理进行了深入地解析。Stream Load是Doris用户最常用的数据导入方式之一，它是一种同步的导入方式, 允许用户通过Http访问的方式批量地将数据导入Doris，并返回数据导入的结果。用户可以直接通过Http请求的返回体判断数据导入是否成功，也可以通过在客户端执行查询SQL来查询历史任务的结果。另外，Doris还为Stream Load提供了结果审计功能，可以通过审计日志对历史的Stream Load任务信息进行审计。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="技术解析" term="技术解析"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doris全面解析：Doris SQL 原理解析]]></title>
        <id>/principle-of-Doris-SQL-parsing</id>
        <link href="https://doris.apache.org/zh-CN/blog/principle-of-Doris-SQL-parsing"/>
        <updated>2022-08-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p><strong>导读：</strong>
本文主要介绍了Doris SQL解析的原理。</p><p>重点讲述了生成单机逻辑计划，生成分布式逻辑计划，生成分布式物理计划的过程。对应于代码实现是Analyze，SinglePlan，DistributedPlan，Schedule四个部分。</p><p>Analyze负责对AST进行前期的一些处理，SinglePlan根据AST进行优化生成单机查询计划，DistributedPlan将单机的查询计划拆成分布式的查询计划，Schedule阶段负责决定查询计划下发到哪些机器上执行。</p><p>由于SQL类型有很多，本文侧重介绍查询SQL的解析，从算法原理和代码实现上深入讲解了Doris的SQL解析原理。</p><h1>1 Doris简介</h1><p>Doris是基于MPP架构的交互式SQL数据仓库，主要用于解决近实时的报表和多维分析。</p><p>Doris分成两部分FE和BE，FE 负责存储以及维护集群元数据、接收、解析、查询、设计规划整体查询流程，BE 负责数据存储和具体的实施过程。</p><p>在 Doris 的存储引擎中，用户数据被水平划分为若干个数据分片（Tablet，也称作数据分桶）。每个 Tablet 包含若干数据行。多个 Tablet 在逻辑上归属于不同的分区Partition。一个 Tablet 只属于一个 Partition。而一个 Partition 包含若干个 Tablet。Tablet 是数据移动、复制等操作的最小物理存储单元。</p><h1>2 SQL解析简介</h1><p>SQL解析在这篇文章中指的是<strong>将一条sql语句经过一系列的解析最后生成一个完整的物理执行计划的过程</strong>。</p><p>这个过程包括以下四个步骤：词法分析，语法分析，生成逻辑计划，生成物理计划。 如图1所示：</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_1_cn-40a07911a7de6d2ea4a4fe09ef5150dd.png" width="1080" height="446" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="21-词法分析">2.1 词法分析<a class="hash-link" href="#21-词法分析" title="标题的直接链接">​</a></h2><p>词法分析主要负责将字符串形式的sql识别成一个个token，为语法分析做准备。</p><div class="language-undefined codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-undefined codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">select ......  from ...... where ....... group by ..... order by ......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL 的 Token 可以分为如下几类：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">￮ 关键字（select、from、where）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">￮ 操作符（+、-、&gt;=）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">￮ 开闭合标志（(、CASE）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">￮ 占位符（?）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">￮ 注释</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">￮ 空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="22-语法分析">2.2 语法分析<a class="hash-link" href="#22-语法分析" title="标题的直接链接">​</a></h2><p>语法分析主要负责根据语法规则，将词法分析生成的token转成抽象语法树（Abstract Syntax Tree），如图2所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_2_cn-a6c0ccfee6ceab8bc0833a1ff300311f.png" width="1080" height="473" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="23-逻辑计划">2.3 逻辑计划<a class="hash-link" href="#23-逻辑计划" title="标题的直接链接">​</a></h2><p>逻辑计划负责将抽象语法树转成代数关系。代数关系是一棵算子树，每个节点代表一种对数据的计算方式，整棵树代表了数据的计算方式以及流动方向，如图3所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_3_cn-7a6ac1b525922fce20195f2224d176ad.png" width="573" height="893" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="24-物理计划">2.4 物理计划<a class="hash-link" href="#24-物理计划" title="标题的直接链接">​</a></h2><p>物理计划是在逻辑计划的基础上，根据机器的分布，数据的分布，决定去哪些机器上执行哪些计算操作。</p><p>Doris系统的SQL解析也是采用这些步骤，只不过根据Doris系统结构的特点和数据的存储方式，进行了细化和优化，最大化发挥机器的计算能力。</p><h1>3 设计目标</h1><p>Doris SQL解析架构的设计有以下目标：</p><ol><li><p>最大化计算的并行性</p></li><li><p>最小化数据的网络传输</p></li><li><p>最大化减少需要扫描的数据</p></li></ol><h1>4 总体架构</h1><p>Doris SQL解析具体包括了五个步骤：词法分析，语法分析，生成单机逻辑计划，生成分布式逻辑计划，生成物理执行计划。</p><p>具体代码实现上包含以下五个步骤：Parse, Analyze, SinglePlan, DistributedPlan, Schedule。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_4_cn-f9b7dc9188c57e7edf593b075148b8a5.png" width="1080" height="1682" class="img_ev3q"></p><p>如图4所示，Parse阶段本文不详细讲，Analyze负责对AST进行前期的一些处理，SinglePlan根据AST进行优化生成单机查询计划，DistributedPlan将单机的查询计划拆成分布式的查询计划，Schedule阶段负责决定查询计划下发到哪些机器上执行。</p><p><strong>由于SQL类型有很多，本文侧重介绍查询SQL的解析。</strong></p><p>图5展示了一个简单的查询SQL在Doris的解析实现</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_5_cn-c3d2f2f05d9a0a1c5a095f487bb20081.png" width="1080" height="1344" class="img_ev3q"></p><h1>5 Parse阶段</h1><p>词法分析采用jflex技术，语法分析采用java cup parser技术，最后生成抽象语法树（Abstract Syntax Tree）AST，这些都是现有的、成熟的技术，在这里不进行详细介绍。</p><p>AST是一种树状结构，代表着一条SQL。不同类型的查询select, insert, show, set, alter table, create table等经过Parse阶段后生成不同的数据结构（SelectStmt, InsertStmt, ShowStmt, SetStmt, AlterStmt, AlterTableStmt, CreateTableStmt等），但他们都继承自Statement，并根据自己的语法规则进行一些特定的处理。例如：对于select类型的sql， Parse之后生成了SelectStmt结构。</p><p>SelectStmt结构包含了SelectList，FromClause，WhereClause，GroupByClause，SortInfo等结构。这些结构又包含了更基础的一些数据结构，如WhereClause包含了BetweenPredicate（between表达式）, BinaryPredicate（二元表达式）， CompoundPredicate（and or组合表达式）, InPredicate（in表达式）等。</p><p>AST中所有结构都是由基本结构表达式Expr通过多种组合而成，如图6所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_6_cn-39088e65b97c95938d6cf9c1aba359e8.png" width="1080" height="718" class="img_ev3q"></p><h1>6 Analyze阶段</h1><p>Analyze主要是对Parse阶段生成的抽象语法树AST进行一些前期的处理和语义分析，为生成单机逻辑计划做准备。</p><p>抽象语法树是由StatementBase这个抽象类表示。这个抽象类包含一个最重要的成员函数analyze()，用来执行Analyze阶段要做的事。</p><p>不同类型的查询select, insert, show, set, alter table, create table等经过Parse阶段后生成不同的数据结构（SelectStmt, InsertStmt, ShowStmt, SetStmt, AlterStmt, AlterTableStmt, CreateTableStmt等），这些数据结构继承自StatementBase，并实现analyze()函数，对特定类型的SQL进行特定的Analyze。</p><p>例如：select类型的查询，会转成对select sql的子语句SelectList, FromClause, GroupByClause, HavingClause, WhereClause, SortInfo等的analyze()。然后这些子语句再各自对自己的子结构进行进一步的analyze()，通过层层迭代，把各种类型的sql的各种情景都分析完毕。例如：WhereClause进一步分析其包含的BetweenPredicate（between表达式）, BinaryPredicate（二元表达式）， CompoundPredicate（and or组合表达式）, InPredicate（in表达式）等。</p><p><strong>对于查询类型的SQL，包含以下几项重要工作：</strong></p><ul><li><p><strong>元信息的识别和解析</strong>：识别和解析sql中涉及的 Cluster, Database, Table, Column 等元信息，确定需要对哪个集群的哪个数据库的哪些表的哪些列进行计算。</p></li><li><p><strong>SQL 的合法性检查</strong>：窗口函数不能 DISTINCT，投影列是否有歧义，where语句中不能含有grouping操作等。</p></li><li><p><strong>SQL 简单重写</strong>：比如将 select * 扩展成 select 所有列，count distinct转成bitmap或者hll函数等。</p></li><li><p><strong>函数处理</strong>：检查sql中包含的函数和系统定义的函数是否一致，包括参数类型，参数个数等。</p></li><li><p><strong>Table 和 Column 的别名处理</strong></p></li><li><p><strong>类型检查和转换</strong>：例如二元表达式两边的类型不一致时，需要对其中一个类型进行转换（BIGINT 和 DECIMAL 比较，BIGINT 类型需要 Cast 成 DECIMAL）。</p></li></ul><p>对AST 进行analyze后，会再进行一次rewrite操作，进行精简或者是转成统一的处理方式。目前rewrite的算法是基于规则的方式，针对AST的树状结构，自底向上，应用每一条规则进行重写。如果重写后，AST有变化，则再次进行analyze和rewrite，直到AST无变化为止。</p><p>例如：常量表达式的化简：1 + 1 + 1 重写成 3，1 &gt; 2 重写成 Flase 等。将一些语句转成统一的处理方式，比如将 where in, where exists 重写成 semi join, where not in, where not exists 重写成 anti join。</p><h1>7 生成单机逻辑Plan阶段</h1><p>这部分工作主要是根据AST抽象语法树生成代数关系，也就是俗称的算子数。树上的每个节点都是一个算子，代表着一种操作。</p><p>如图7所示，ScanNode代表着对一个表的扫描操作，将一个表的数据读出来。HashJoinNode代表着join操作，小表在内存中构建哈希表，遍历大表找到连接键相同的值。Project表示投影操作，代表着最后需要输出的列，图7表示只用输出citycode这一列。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_7_cn-3b659a292f7c875ca9651197305c47ab.png" width="1080" height="543" class="img_ev3q"></p><p>如果不进行优化，生成的关系代数下发到存储中执行的代价非常高。</p><p>对于查询：</p><div class="language-undefined codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-undefined codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">select a.siteid, a.pv from table1 a join table2 b on a.siteid = b.siteid where a.citycode=122216 and b.username="test" order by a.pv limit 10</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>未优化的关系代数，如图8所示，需要将所有列读出来进行一系列的计算，在最后选择输出siteid, pv两列，大量无用的列数据浪费了计算资源。</p><p>Doris在生成代数关系时，进行了大量的优化，将投影列和查询条件尽可能放到扫描操作时执行。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_8_cn-021b337867f379cc036dfbe34f5fe9f8.png" width="500" height="1110" class="img_ev3q"></p><p><strong>具体来说这个阶段主要做了如下几项工作：</strong></p><ul><li><p><strong>Slot 物化</strong>：指确定一个表达式对应的列需要 Scan 和计算，比如聚合节点的聚合函数表达式和 Group By 表达式需要进行物化。</p></li><li><p><strong>投影下推</strong>：BE 在 Scan 时只会 Scan 必须读取的列。</p></li><li><p><strong>谓词下推</strong>：在满足语义正确的前提下将过滤条件尽可能下推到 Scan 节点。</p></li><li><p><strong>分区，分桶裁剪</strong>：根据过滤条件中的信息，确定需要扫描哪些分区，哪些桶的tablet。</p></li><li><p><strong>Join Reorder</strong>：对于 Inner Join, Doris 会根据行数调整表的顺序，将大表放在前面。</p></li><li><p><strong>Sort + Limit 优化成 TopN</strong>：对于order by limit语句会转换成TopN的操作节点，方便统一处理。</p></li><li><p><strong>MaterializedView 选择</strong>：会根据查询需要的列，过滤，排序和 Join 的列，行数，列数等因素选择最佳的物化视图。</p></li></ul><p>图9展示了优化的示例，Doris是在生成关系代数的过程中优化，边生成边优化。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_9_cn-cceafd6d3dd41c1765b4dbbf3ce047e1.png" width="1080" height="290" class="img_ev3q"></p><h1>8 生成分布式Plan阶段</h1><p>有了单机的PlanNode树之后，就需要进一步根据分布式环境，拆成分布式PlanFragment树（PlanFragment用来表示独立的执行单元），毕竟一个表的数据分散地存储在多台主机上，完全可以让一些计算并行起来。</p><p>这个步骤的主要目标是最大化并行度和数据本地化。主要方法是将能够并行执行的节点拆分出去单独建立一个PlanFragment，用ExchangeNode代替被拆分出去的节点，用来接收数据。拆分出去的节点增加一个DataSinkNode，用来将计算之后的数据传送到ExchangeNode中，做进一步的处理。</p><p>这一步采用递归的方法，自底向上，遍历整个PlanNode树，然后给树上的每个叶子节点创建一个PlanFragment，如果碰到父节点，则考虑将其中能够并行执行的子节点拆分出去，父节点和保留下来的子节点组成一个parent PlanFragment。拆分出去的子节点增加一个父节点DataSinkNode组成一个child PlanFragment，child PlanFragment指向parent PlanFragment。这样就确定了数据的流动方向。</p><p>对于查询操作来说，join操作是最常见的一种操作。</p><p><strong>Doris目前支持4种join算法</strong>：broadcast join，hash partition join，colocate join，bucket shuffle join。</p><p><strong>broadcast join</strong>：将小表发送到大表所在的每台机器，然后进行hash join操作。当一个表扫描出的数据量较少时，计算broadcast join的cost，通过计算比较hash partition的cost，来选择cost最小的方式。</p><p><strong>hash partition join</strong>：当两张表扫描出的数据都很大时，一般采用hash partition join。它遍历表中的所有数据，计算key的哈希值，然后对集群数取模，选到哪台机器，就将数据发送到这台机器进行hash join操作。</p><p><strong>colocate join</strong>：两个表在创建的时候就指定了数据分布保持一致，那么当两个表的join key与分桶的key一致时，就会采用colocate join算法。由于两个表的数据分布是一样的，那么hash join操作就相当于在本地，不涉及到数据的传输，极大提高查询性能。</p><p><strong>bucket shuffle join</strong>：当join key是分桶key，并且只涉及到一个分区时，就会优先采用bucket shuffle join算法。由于分桶本身就代表了数据的一种切分方式，所以可以利用这一特点，只需将右表对左表的分桶数hash取模，这样只需网络传输一份右表数据，极大减少了数据的网络传输，如图10所示。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_10_cn-e99cc952e6ef7e1500565bffbd73da18.png" width="878" height="938" class="img_ev3q"></p><p>如图11展示了带有HashJoinNode的单机逻辑计划创建分布式逻辑计划的核心流程。</p><ul><li><p>对PlanNode，自底向上创建PlanFragment。</p></li><li><p>如果是ScanNode，则直接创建一个PlanFragment，PlanFragment的RootPlanNode是这个ScanNode。</p></li><li><p>如果是HashJoinNode，则首先计算下broadcastCost，为选择boracast join还是hash partition join提供参考。</p></li><li><p>根据不同的条件判断选择哪种Join算法</p></li><li><p>如果使用colocate join，由于join操作都在本地，就不需要拆分。设置HashJoinNode的左子节点为leftFragment的RootPlanNode，右子节点为rightFragment的RootPlanNode，与leftFragment共用一个PlanFragment，删除掉rightFragment。</p></li><li><p>如果使用bucket shuffle join，需要将右表的数据发送给左表。所以先创建了一个ExchangeNode，设置HashJoinNode的左子节点为leftFragment的RootPlanNode，右子节点为这个ExchangeNode，与leftFragment共用一个PlanFragment，并且指定rightFragment数据发送的目的地为这个ExchangeNode。</p></li><li><p>如果使用broadcast join，需要将右表的数据发送给左表。所以先创建了一个ExchangeNode，设置HashJoinNode的左子节点为leftFragment的RootPlanNode，右子节点为这个ExchangeNode，与leftFragment共用一个PlanFragment，并且指定rightFragment数据发送的目的地为这个ExchangeNode。</p></li><li><p>如果使用hash partition join，左表和右边的数据都要切分，需要将左右节点都拆分出去，分别创建left ExchangeNode, right ExchangeNode，HashJoinNode指定左右节点为left ExchangeNode和 right ExchangeNode。单独创建一个PlanFragment，指定RootPlanNode为这个HashJoinNode。最后指定leftFragment, rightFragment的数据发送目的地为left ExchangeNode, right ExchangeNode。</p></li></ul><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_11_cn-3c4cdbe9e51459cf48d90f63b4bd893f.png" width="1080" height="975" class="img_ev3q"></p><p>图12是两个表的join操作转换成PlanFragment树之后的示例，一共生成了3个PlanFragment。最终数据的输出通过ResultSinkNode节点。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_12_cn-fc24ac9080f5429b9e7a871a34192f97.png" width="1080" height="1079" class="img_ev3q"></p><h1>9 Schedule阶段</h1><p>这一步是根据分布式逻辑计划，创建分布式物理计划。主要解决以下问题：</p><ul><li><p>哪个 BE 执行哪个 PlanFragment</p></li><li><p>每个 Tablet 选择哪个副本去查询</p></li><li><p>如何进行多实例并发</p></li></ul><p><strong>图13展示了创建分布式物理计划的核心流程：</strong></p><p><strong>a. prepare阶段</strong>：给每个PlanFragment创建一个FragmentExecParams结构，用来表示PlanFragment执行时所需的所有参数；如果一个PlanFragment包含有DataSinkNode，则找到数据发送的目的PlanFragment，然后指定目的PlanFragment的FragmentExecParams的输入为该PlanFragment的FragmentExecParams。</p><p><strong>b. computeScanRangeAssignment阶段</strong>：针对不同类型的join进行不同的处理。</p><ul><li><p>computeScanRangeAssignmentByColocate：针对colocate join进行处理，由于join的两个表桶中的数据分布都是一样的，他们是基于桶的join操作，所以在这里是确定每个桶选择哪个host。在给host分配桶时，尽量保证每个host分配到的桶基本平均。</p></li><li><p>computeScanRangeAssignmentByBucket：针对bucket shuffle join进行处理，也只是基于桶的操作，所以在这里是确定每个桶选择哪个host。在给host分配桶时，同样需要尽量保证每个host分配到的桶基本平均。</p></li><li><p>computeScanRangeAssignmentByScheduler：针对其他类型的join进行处理。确定每个scanNode读取tablet哪个副本。一个scanNode会读取多个tablet，每个tablet有多个副本。为了使scan操作尽可能分散到多台机器上执行，提高并发性能，减少IO压力，Doris采用了Round-Robin算法，使tablet的扫描尽可能地分散到多台机器上去。例如100个tablet需要扫描，每个tablet 3个副本，一共10台机器，在分配时，保障每台机器扫描10个tablet。</p></li></ul><p><strong>c. computeFragmentExecParams阶段</strong>：这个阶段解决PlanFragment下发到哪个BE上执行，以及如何处理实例并发问题。确定了每个tablet的扫描地址之后，就可以以地址为维度，将FragmentExecParams生成多个实例，也就是FragmentExecParams中包含的地址有多个，就生成多个实例FInstanceExecParam。如果设置了并发度，那么一个地址的执行实例再进一步的拆成多个FInstanceExecParam。针对bucket shuffle join和colocate join会有一些特殊处理，但是基本思想一样。FInstanceExecParam创建完成后，会分配一个唯一的ID，方便追踪信息。如果FragmentExecParams中包含有ExchangeNode，需要计算有多少senders，以便知道需要接受多少个发送方的数据。最后FragmentExecParams确定destinations，并把目的地址填充上去。</p><p><strong>d. create result receiver阶段</strong>：result receiver是查询完成后，最终数据需要输出的地方。</p><p><strong>e. to thrift阶段</strong>：根据所有PlanFragment的FInstanceExecParam创建rpc请求，然后下发到BE端执行。这样一个完整的SQL解析过程完成了。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_13_cn-11d11e8bdcacdc813f16f698e3c7cb6d.png" width="1080" height="846" class="img_ev3q"></p><p>如图14所示是一个简单示例，图中的PlanFrament包含了一个ScanNode，ScanNode扫描3个tablet，每个tablet有2副本，集群假设有2台host。</p><p>computeScanRangeAssignment阶段确定了需要扫描replica 1,3,5,8,10,12，其中replica 1,3,5位于host1上，replica 8,10,12位于host2上。</p><p>如果全局并发度设置为1时，则创建2个实例FInstanceExecParam，下发到host1和host2上去执行，如果如果全局并发度设置为3，这个host1上创建3个实例FInstanceExecParam，host2上创建3个实例FInstanceExecParam，每个实例扫描一个replica，相当于发起6个rpc请求。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/Figure_14_cn-584e7935ee2ef6eb13e0cd4dada6ac8d.png" width="1080" height="545" class="img_ev3q"></p><h1>10 总结</h1><p>本文首先简单介绍了Doris，然后介绍SQL解析的通用流程：词法分析，语法分析，生成逻辑计划，生成物理计划，接着从总体上介绍了Doris在SQL解析这块的总体架构，最后详细讲解了Parse，Analyze，SinglePlan，DistributedPlan，Schedule等5个过程，从算法原理和代码实现上进行了深入的讲解。</p><p>Doris遵守了SQL解析的常用方法，但根据底层存储架构，以及分布式的特点，在SQL解析这块进行了大量的优化，实现了最大并行度和最小化网络传输，给SQL执行层面减少很多负担。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="技术解析" term="技术解析"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在小米数据场景的应用实践与优化]]></title>
        <id>/xiaomi</id>
        <link href="https://doris.apache.org/zh-CN/blog/xiaomi"/>
        <updated>2022-08-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>背景</h1><p>因增长分析业务需要，小米集团于 2019 年首次引入了 Apache Doris 。经过三年时间的发展，目前 Apache Doris 已经在广告投放、新零售、增长分析、数据看板、天星数科、小米有品、用户画像等小米内部数十个业务中得到广泛应用 <strong>，并且在小米内部已经形成一套以 Apache Doris 为核心的数据生态。</strong>
<img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/25d7c2c45acd4e1c8c1a1742016fc6b9~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q">
当前 Apache Doris 在小米内部已经具有<strong>数十个</strong>集群、总体达到<strong>数百台</strong> BE 节点的规模，其中单集群最大规模达到<strong>近百台节点</strong>，拥有<strong>数十个</strong>流式数据导入产品线，每日单表最大增量 <strong>120 亿</strong>、支持 <strong>PB 级别</strong>存储，单集群每天可以支持 <strong>2W 次以上</strong>的多维分析查询。</p><h1>架构演进</h1><p>小米引入 Apache Doris 的初衷是为了解决内部进行用户行为分析时所遇到的问题。随着小米互联网业务的发展，各个产品线利用用户行为数据对业务进行增长分析的需求越来越迫切。让每个业务产品线都自己搭建一套增长分析系统，不仅成本高昂，也会导致效率低下。因此能有一款产品能够帮助他们屏蔽底层复杂的技术细节，让相关业务人员能够专注于自己的技术领域，可以极大提高工作效率。基于此，小米大数据和云平台联合开发了增长分析系统 Growing Analytics（下文中简称 GA )，旨在提供一个灵活的多维实时查询和分析平台，统一数据接入和查询方案，帮助业务线做精细化运营。（此处内容引用自：<a href="https://mp.weixin.qq.com/s?__biz=MzUxMDQxMDMyNg==&amp;mid=2247486817&amp;idx=1&amp;sn=99fbef15b4d6f6059c3affbc77517e6e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">基于Apache Doris的小米增长分析平台实践</a>）</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/897a0453e1a540ae88cdf05ee9188b56~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>分析、决策、执行是一个循环迭代的过程，在对用户进行行为分析后，针对营销策略是否还有提升空间、是否需要在前端对用户进行个性化推送等问题进行决策，帮助小米实现业务的持续增长。这个过程是对用户行为进行<strong>分析-决策-优化执行-再分析-再决策-再优化执行</strong>的迭代过程。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="历史架构">历史架构<a class="hash-link" href="#历史架构" title="标题的直接链接">​</a></h3><p>增长分析平台立项于 2018 年年中，当时基于开发时间和成本，技术栈等因素的考虑，小米复用了现有各种大数据基础组件（HDFS, Kudu, SparkSQL 等），搭建了一套基于 Lamda 架构的增长分析查询系统。<strong>GA 系统初代版本的架构如下图所示，包含了以下几个方面：</strong></p><ul><li>数据源：数据源是前端的埋点数据以及可能获取到的用户行为数据。</li><li>数据接入层：对埋点数据进行统一的清洗后打到小米内部自研的消息队列 Talos 中，并通过 Spark Streaming 将数据导入存储层 Kudu 中。</li><li>存储层：在存储层中进行冷热数据分离。热数据存放在 Kudu 中，冷数据则会存放在 HDFS 上。同时在存储层中进行分区，当分区单位为天时，每晚会将一部分数据转冷并存储到 HDFS 上。</li><li>计算层/查询层：在查询层中，使用 SparkSQL 对 Kudu 与 HDFS 上数据进行联合视图查询，最终把查询结果在前端页面上进行显示。</li></ul><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9039c4f9ef8a4a3cbfd092b21233e831~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>在当时的历史背景下，初代版本的增长分析平台帮助我们解决了一系列用户运营过程中的问题，但同时在历史架构中也存在了两个问题：</strong></p><p><strong>第一个问题：</strong> 由于历史架构是基于 SparkSQL + Kudu + HDFS 的组合，依赖的组件过多导致运维成本较高。原本的设计是各个组件都使用公共集群的资源，但是实践过程中发现执行查询作业的过程中，查询性能容易受到公共集群其他作业的影响，容易抖动，尤其在读取 HDFS 公共集群的数据时，有时较为缓慢。</p><p><strong>第二个问题：</strong> 通过 SparkSQL 进行查询时，延迟相对较高。SparkSQL 是基于批处理系统设计的查询引擎，在每个 Stage 之间交换数据 Shuffle 的过程中依然需要落盘操作，完成 SQL 查询的时延较高。为了保证 SQL 查询不受资源的影响，我们通过添加机器来保证查询性能，但是实践过程中发现，性能提升的空间有限，这套解决方案并不能充分地利用机器资源来达到高效查询的目的，存在一定的资源浪费。 <strong>（此处内容引用自：<a href="https://mp.weixin.qq.com/s?__biz=MzUxMDQxMDMyNg==&amp;mid=2247486817&amp;idx=1&amp;sn=99fbef15b4d6f6059c3affbc77517e6e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">基于Apache Doris的小米增长分析平台实践</a>）</strong></p><p>针对上述两个问题，我们的目标是寻求一款计算存储一体的 MPP 数据库来替代我们目前的存储计算层的组件，<strong>在通过技术选型后，最终我们决定使用 Apache Doris 替换老一代历史架构。</strong></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="基于-apache-doris-的新版架构">基于 Apache Doris 的新版架构<a class="hash-link" href="#基于-apache-doris-的新版架构" title="标题的直接链接">​</a></h3><p>当前架构从数据源获取前端埋点数据后，通过数据接入层打入 Apache Doris 后可以直接查询结果并在前端进行显示。<img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/540f5fa779af4b629869e54b793ea273~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>选择 Doris 原因：</strong></p><ul><li><p>Doris 具有优秀的查询性能，能够满足业务需求。</p></li><li><p>Doris 支持标准 SQL ，用户使用与学习成本较低。</p></li><li><p>Doris 不依赖于其他的外部系统，运维简单。</p></li><li><p>Doris 社区拥有很高活跃度，有利于后续系统的维护升级。</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新旧架构性能对比">新旧架构性能对比<a class="hash-link" href="#新旧架构性能对比" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ada8246b409a4cb6b11ffd2454aa2b06~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>我们选取了日均数据量大约 10 亿的业务，分别在不同场景下进行了性能测试，其中包含 6 个事件分析场景，3 个留存分析场景以及 3 个漏斗分析场景。<strong>经过对比后，得出以下结论：</strong></p><ul><li>在事件分析的场景下，平均查询所耗时间<strong>降低了 85%</strong> 。</li><li>在留存分析和漏斗分析场景下，平均查询所耗时间<strong>降低了 50%</strong> <strong>。</strong></li></ul><h1>应用实践</h1><p>随着接入业务的增多和数据规模的增长，让我们也遇到不少问题和挑战，下面我们将介绍在<strong>使用 Apache Doris 过程中沉淀出来的一些实践经验</strong>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据导入">数据导入<a class="hash-link" href="#数据导入" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8afce198933f4ca4b2c97d4cf85b27de~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q">小米内部主要通过 Stream Load 与 Broker Load 以及少量 Insert 方式来进行 Doris 的数据导入。数据一般会先打到 Talos 消息队列中，并分为实时数据和离线数据两个部分。</p><p><strong>实时数据写入 Apache Doris 中：</strong></p><p> 一部分业务在通过 Flink 对数据进行处理后，会通过 Doris 社区提供的 Flink Doris Connector 组件写入到 Doris 中，底层依赖于 Doris Stream Load 数据导入方式。也有一部分会通过 Spark Streaming 封装的 Stream Load 将数据导入到 Doris 中。</p><p><strong>离线数据写入</strong> <strong>Apache Doris 中：</strong></p><p>离线数据部分则会先写到 Hive 中，再通过小米的数据工场将数据导入到 Doris 中。用户可以直接在数据工场提交 Broker Load 任务并将数据直接导入 Doris 中，也可以通过 Spark SQL 将数据导入 Doris 中。Spark SQL 方式则是依赖了 Doris 社区提供的 Spark Doris Connector 组件，底层也是对 Doris 的 Stream Load 数据导入方式进行的封装。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据查询">数据查询<a class="hash-link" href="#数据查询" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c1cd3554e854dbe99aba27499e28118~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>用户通过数据工场将数据导入至 Doris 后即可进行查询，在小米内部是通过小米自研的数鲸平台来做查询的。用户可以通过数鲸平台对 Doris 进行查询可视化，并实现用户行为分析（为满足业务的事件分析、留存分析、漏斗分析、路径分析等行为分析需求，我们为 Doris 添加了相应的 UDF 和 UDAF ）和用户画像分析。</p><p>虽然目前依然需要将 Hive 的数据导过来，但 Doris 社区也正在支持湖仓一体能力，在后续实现湖仓一体能力后，我们会考虑直接通过 Doris 查询 Hive 与 Iceberg 外表。<strong>值得一提的是，Doris 1.1 版本已经实现支持查询 Iceberg 外表能力。</strong> 同时在即将发布的 <strong>1.2 版本</strong>中，还将支持 Hudi 外表并增加了 Multi Catalog ，可以实现外部表元数据的同步，无论是查询外部表的性能还是接入外表的易用性都有了很大的提升。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="compaction-调优">Compaction 调优<a class="hash-link" href="#compaction-调优" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92ad4ea90c564af2b720080b449c6edf~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>Doris 底层采用类似 LSM-Tree 方式，支持快速的数据写入。每一次的数据导入都会在底层的 Tablet 下生成一个新的数据版本，每个数据版本内都是一个个小的数据文件。单个文件内部是有序的，但是不同的文件之间又是无序的。为了使数据有序，在 Doris 底层就会存在 Compaction 机制，异步将底层小的数据版本合并成大的文件。Compaction 不及时就会造成版本累积，增加元数据的压力，并影响查询性能。由于 Compaction 任务本身又比较耗费机器CPU、内存与磁盘资源，如果 Compaction 开得太大就会占用过多的机器资源并影响到查询性能，同时也可能会造成 OOM。<strong>针对以上问题，我们一方面从业务侧着手，通过以下方面引导用户：</strong></p><ul><li>通过引导业务侧进行合理优化，对表设置<strong>合理的分区和分桶</strong>，避免生成过多的数据分片。</li><li>引导用户尽量<strong>降低数据的导入频率</strong> <strong>，</strong> <strong>增大单次数据导入的量</strong>，降低 Compaction 压力。</li><li>引导用户<strong>避免过多使用会在底层生成 Delete 版本的 Delete 操作</strong>。在 Doris 中 Compaction 分为 Base Compaction 与 Cumulative Compaction。Cumulative Compaction 会快速的把大量新导入的小版本进行快速的合并，在执行过程中若遇到 Delete 操作就会终止并将当前 Delete 操作版本之前的所有版本进行合并。由于 Cumulative Compaction 无法处理 Delete 版本，在合并完之后的版本会和当前版本一起放到 Base Compaction 中进行。当 Delete 版本特别多时， Cumulative Compaction 的步长也会相应变短，只能合并少量的文件，导致 Cumulative Compaction 不能很好的发挥小文件合并效果。</li></ul><p><strong>另一方面我们从运维侧着手：</strong></p><ul><li><strong>针对不同的业务集群配置不同的 Compaction 参数。</strong> 部分业务是实时写入数据的，需要的查询次数很多，我们就会将 Compaction 开的大一点以达到快速合并目的。而另外一部分业务只写今天的分区，但是只对之前的分区进行查询，在这种情况下，我们会适当的将 Compaction 放的小一点，避免 Compaction 占用过大内存或 CPU 资源。到晚上导入量变少时，之前导入的小版本能够被及时合并，对第二天查询效率不会有很大影响。</li><li><strong>适当降低 Base Compaction 任务优先级并增加 Cumulative Compaction 优先级。</strong> 根据上文提到的内容，Cumulative Compaction 能够快速合并大量生成的小文件，而 Base Compaction 由于合并的文件较大，执行的时间也会相应变长，读写放大也会比较严重。所以我们希望 Cumulative Compaction 优先、快速的进行。</li><li><strong>增加版本积压报警。</strong> 当我们收到版本积压报警时，动态调大 Compaction 参数，尽快消耗积压版本。</li><li><strong>支持手动触发指定表与分区下数据分片的 Compaction 任务。</strong> 由于 Compaction 不及时，部分表在查询时版本累积较多并需要能够快速进行合并。所以，我们支持对单个表或单个表下的某个分区提高 Compaction 优先级。</li></ul><p><strong>目前 Doris 社区针对以上问题已经做了</strong> <strong>一系列的优化</strong> <strong>，在 1.1 版本中</strong> <strong>大幅增强了数据 Compaction 能力，对于新增数据能够快速完成聚合，避免分片数据中的版本过多导致的 -235 错误以及带来的查询效率问题。</strong>\
<strong>首先</strong>，在 Doris 1.1 版本中，引入了 QuickCompaction，增加了主动触发式的 Compaction 检查，在数据版本增加的时候主动触发 Compaction。同时通过提升分片元信息扫描的能力，快速的发现数据版本多的分片，触发 Compaction。通过主动式触发加被动式扫描的方式，彻底解决数据合并的实时性问题。</p><p><strong>同时</strong>，针对高频的小文件 Cumulative Compaction，实现了 Compaction 任务的调度隔离，防止重量级的 Base Compaction 对新增数据的合并造成影响。</p><p><strong>最后</strong>，针对小文件合并，优化了小文件合并的策略，采用梯度合并的方式，每次参与合并的文件都属于同一个数据量级，防止大小差别很大的版本进行合并，逐渐有层次的合并，减少单个文件参与合并的次数，能够大幅的节省系统的 CPU 消耗。<img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd2f0a547d6e4ddcb027715c4a544c5a~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"><strong>在社区 1.1 新版本的测试结果中，不论是Compaction 的效率、CPU 的资源消耗，还是高频导入时的查询抖动，效果都有了大幅的提升。</strong></p><p><strong>具体可以参考：</strong> <a href="http://mp.weixin.qq.com/s?__biz=Mzg3Njc2NDAwOA==&amp;mid=2247500848&amp;idx=1&amp;sn=a667665ed4ccf4cf807a47be7c264f69&amp;chksm=cf2fca37f85843219e2f74d856478d4aa24d381c1d6e7f9f6a64b65f3344ce8451ad91c5af97&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">Apache Doris 1.1 特性揭秘：Flink 实时写入如何兼顾高吞吐和低延时</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="监控报警">监控报警<a class="hash-link" href="#监控报警" title="标题的直接链接">​</a></h3><p>Doris 的监控主要是通过 Prometheus 以及 Grafana 进行。对于 Doris 的报警则是通过 Falcon 进行。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3fbe6b44f1124a91bf5ee17608f302d5~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q">小米内部使用 Minos 进行集群部署。Minos 是小米内部自研并开源的大数据服务进程管理工具。在完成 Doris 集群部署后会更新至小米内部的轻舟数仓中。在轻舟数仓中的节点注册到 ZooKeeper 后，Prometheus 会监听 ZooKeeper 注册的节点，同时访问对应端口，拉取对应 Metrics 。在这之后，Grafana 会在面板上对监控信息进行显示，若有指标超过预设的报警阈值，Falcon 报警系统就会在报警群内报警，同时针对报警级别较高或某些无法及时响应的警告，可直接通过电话呼叫值班同学进行报警。</p><p>另外，小米内部针对每一个 Doris 集群都有 Cloud - Doris 的守护进程。Could - Doris 最大功能是可以对 Doris 进行可用性探测。比如我们每一分钟对 Doris 发送一次 select current timestamp(); 查询，若本次查询 20 秒没有返回，我们就会判断本次探测不可用。小米内部对每一个集群的可用性进行保证，通过上述探测方法，可以在小米内部输出 Doris可用性指标。</p><h1>小米对Apache Doris的优化实践</h1><p>在应用 Apache Doris 解决业务问题的同时，我们也发现了 Apache Doris 存在的一些优化项，因此在与社区进行沟通后我们开始深度参与社区开发，解决自身问题的同时也及时将开发的重要 Feature 回馈给社区，具体包括 Stream Load 两阶段提交（2PC）、单副本数据导入、Compaction 内存限制等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="stream-load-两阶段提交2pc">Stream Load 两阶段提交（2PC)<a class="hash-link" href="#stream-load-两阶段提交2pc" title="标题的直接链接">​</a></h3><p><strong>遇到的问题</strong></p><p>在 Flink 和 Spark 导入数据进 Doris 的过程中，当某些异常状况发生时可能会导致如下问题：</p><p><strong>Flink 数据重复导入</strong> <strong>：</strong> Flink 通过周期性 Checkpoint 机制处理容错并实现 EOS，通过主键或者两阶段提交实现包含外部存储的端到端 EOS。Doris-Flink-Connector 1.1 之前 UNIQUE KEY 表通过唯一键实现了EOS，非 UNIQUE KEY 表不支持 EOS。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7750384cac44a569c8edf6c5de61744~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p> <strong>Spark SQL 数据部分导入</strong> <strong>：</strong> 通过 SparkSQL 从 Hive 表中查出的数据并写入 Doris 表中的过程需要使用到 Spark Doris Connector 组件，会将 Hive 中查询的数据通过多个 Stream Load 任务写入 Doris 中，出现异常时会导致部分数据导入成功，部分导入失败。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/936ffd500f364f838a9976584727ed42~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>Stream Load 两阶段提交设计</strong></p><p>以上两个问题可以通过导入支持两阶段提交解决，第一阶段完成后确保数据不丢且数据不可见，这就能保证第二阶段发起提交时一定能成功，也能够保证第二阶段发起取消时一定能成功。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/50e59f3a78f74ba6a8dd2d7960497adb~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>Doris 中的写入事务分为三步：</strong></p><ol><li>在  FE 上开始事务，状态为 Prepare ；</li><li>数据写入 BE；</li><li>多数副本写入成功的情况下，提交事务，状态变成 Committed，并且 FE 向 BE 下发 Publish Version 任务，让数据立即可见。</li></ol><p>引入两阶段提交之后，第 3 步变为状态修改为 Pre Commit，Publish Version 在第二阶段完成。用户在第一阶段完成后（事务状态为 Pre Commit ），可以选择在第二阶段放弃或者提交事务。</p><p><strong>支持 Flink Exactly-Once 语义</strong></p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef5e0a81b441487ba7c3b3fa22e8c85d~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q">Doris-Flink-Connector 1.1 使用两阶段 Stream Load 并支持 Flink 两阶段提交实现了 EOS，只有全局的 Checkpoint 完成时，才会发起 Sream Load 的第二阶段提交，否则发起第二阶段放弃。</p><p><strong>解决 SparkSQL 数据部分导入</strong></p><p>Doris-Spark-Connector 使用两阶段 Stream Load 之后，成功的 Task 通过 Stream Load 第一阶段将写入数据到 Doris （Pre Commit 状态，不可见），当作业成功后，发起所有 Stream Load 第二阶段提交，作业失败时，发起所有 Stream Load 第二阶段取消。这就确保了不会有数据部分导入的问题。<img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/26b11a29566946c99b53ef90e01665ef~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="单副本数据导入优化">单副本数据导入优化<a class="hash-link" href="#单副本数据导入优化" title="标题的直接链接">​</a></h3><p><strong>单副本数据导入设计</strong></p><p><strong>Doris 通过多副本机制确保数据的高可靠以及系统高可用。</strong> 写入任务可以按照使用的资源分为计算和存储两类：排序、聚合、编码、压缩等使用的是 CPU 和内存的计算资源，最后的文件存储使用存储资源，三副本写入时计算和存储资源会占用三份。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0012b34b7404e5482700c281f6c206f~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>那能否只写一份副本数据在内存中，待到单副本写入完成并生成存储文件后，将文件同步到另外两份副本呢？答案是可行的，因此针对三副本写入的场景，我们做了单副本写入设计。<strong>单副本数据在内存中做完排序、聚合、编码以及压缩后，将文件同步至其他两个副本，这样很大程度上可以节省出 CPU 和内存资源。</strong></p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e3528e0d75184068aa3b50384cb548d1~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>性能对比测试</strong></p><p><strong>Broker Load 导入 62G 数据性能对比</strong>
<strong>导入时间：</strong> 三副本导入耗时 33 分钟，单副本导入耗时 31 分钟。</p><p><strong>内存使用：</strong> 内存使用上优化效果十分明显，三副本数据导入的内存使用是单副本导入的三倍。单副本导入时只需要写一份内存，但是三副本导入时需要写三份内存，内存优化达到了 3 倍。</p><p><strong>CPU 消耗对比：</strong> 三副本导入的 CPU 消耗差不多是单副本的三倍。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cbe6bb648e8d47d09c556eed4ffcdfa9~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>并发场景性能对比</strong></p><p>测试中向  100 个表并发导入数据，每个表有 50 个导入任务，任务总数为 5000 个。单个 Stream Load 任务导入的数据行是 200 万行，约为 90M 的数据。测试中开了 128 个并发，<strong>将</strong> <strong>单副本导入和三副本导入进行了对比：</strong></p><p><strong>导入时间：</strong> 3 副本导入耗时 67 分钟，而后单副本耗时 27 分钟完成。导入效率相当提升两倍以上。</p><p><strong>内存使用：</strong> 单副本的导入会更低。</p><p><strong>CPU消耗对比：</strong> 由于都已经是开了并发在导入，CPU开销都比较高，但是单副本导入吞吐提升明显。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a4f5533c4184f8caab39c38d951e410~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>Compaction 内存限制</strong></p><p>之前 Doris 在单机磁盘一次导入超过 2000 个 Segment 的情况下，Compaction 有内存 OOM 的问题。对于当天写入但不查当天数据而是查询之前的数据业务场景，我们会把 Compaction 稍微放的小一点，避免占用太大的内存，导致进程 OOM。Doris 之前每个磁盘有固定的线程做存储在这个盘上的数据的 Compaction，没有办法在全局进行管控。因为我们要限制单个节点上面内存的使用，<strong>所以我们将该模式改成了生产者-消费者模式：</strong></p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ede14473f9104bdc89213e82398ba32a~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>生产者不停的从所有的磁盘上面生产任务，之后将生产任务提交到线程池中。我们可以很好的把控线程池的入口，达到对 Compaction 的限制。我们在合并时会把底层的小文件进行归并排序，之后在内存里给每一个文件开辟 Block，所以我们可以近似认为占用的内存量与文件的数量是相关的，从而可以通过对单节点上同时执行合并的文件数量做限制，来达到控制内存的效果。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/00803f23d5a0427fb57abde4a2b1ec2d~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>我们增加了对单个 BE Compaction 合并的文件数量的限制。</strong> 若正在进行的 Compaction 的文件数量超过或等于当前限制时，后续提交上来的任务就需要等待，等到前面的 Compaction 任务做完并将指标释放出来后，后边提交进来的那些任务才可以进行。</p><p>通过这种方式，我们对某些业务场景做了内存的限制，很好的避免集群负载高时占用过多内存导致 OOM 的问题。</p><h1>总结</h1><p>自从 Apache Doris 从 2019 年上线第一个业务至今，<strong>目前 Apache Doris 已经在小米内部服务了数十个业务、集群数量达到数十个、节点规模达到数百台、每天完成数万次用户在线分析查询，承担了包括增长分析和报表查询等场景绝大多数在线分析的需求。</strong></p><p>与此同时，以上所列小米对于 Apache Doris 的优化实践，已经有部分功能已经在 Apache Doris 1.0 或 1.1 版本中发布，有部分 PR 已经合入社区 Master，在不久后发布的 1.2 新版本中应该就会与大家见面。随着社区的快速发展，有越来越多小伙伴参与到社区建设中，社区活跃度有了极大的提升。Apache Doris 已经变得越来越成熟，并开始从单一计算存储一体的分析型 MPP 数据库走向湖仓一体的道路，相信在未来还有更多的数据分析场景等待去探索和实现。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 1.1 特性揭秘：Flink 实时写入如何兼顾高吞吐和低延时]]></title>
        <id>/Flink-realtime-write</id>
        <link href="https://doris.apache.org/zh-CN/blog/Flink-realtime-write"/>
        <updated>2022-07-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>背景</h1><p>随着数据实时化需求的日益增多，数据的时效性对企业的精细化运营越来越重要，在海量数据中，如何能实时有效的挖掘出有价值的信息，快速的获取数据反馈，协助公司更快的做出决策，更好的进行产品迭代，<strong>实时数仓在这一过程中起到了不可替代的作用</strong>。</p><p>在这种形势下，<strong>Apache Doris 作为一款实时 MPP 分析型数据库脱颖而出</strong>，同时具备高性能、简单易用等特性，具有丰富的数据接入方式，结合 Flink 流式计算，可以让用户快速将 Kafka 中的非结构化数据以及 MySQL 等上游业务库中的变更数据，快速同步到 Doris 实时数仓中，同时 Doris 提供亚秒级分析查询的能力，可以有效地满足实时 OLAP、实时数据看板以及实时数据服务等场景的需求。</p><h1>挑战</h1><p>通常实时数仓要保证端到端高并发以及低延迟，往往面临诸多挑战，比如：</p><ul><li>如何保证端到端的<strong>秒级别数据同步</strong>？</li><li>如何快速保证<strong>数据可见性</strong>？</li><li>在高并发大压力下，如何解决<strong>大量小文件写入</strong>的问题？</li><li>如何确保端到端的 <strong>Exactly Once</strong> 语义？</li></ul><p>结合这些挑战，同时对用户使用 Flink+Doris 构建实时数仓的业务场景进行深入调研，在掌握了用户使用的痛点之后，<strong>我们在 Doris 1.1 版本中进行了针对性的优化，大幅提升实时数仓构建的用户体验，同时提升系统的稳定性，系统资源消耗也得到了大幅的优化。</strong></p><h1>优化</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="流式写入">流式写入<a class="hash-link" href="#流式写入" title="标题的直接链接">​</a></h2><p>Flink Doris Connector 最初的做法是在接收到数据后，缓存到内存 Batch 中，通过攒批的方式进行写入，同时使用 batch.size、batch.interval 等参数来控制 Stream Load 写入的时机。这种方式通常在参数合理的情况下可以稳定运行，一旦参数不合理导致频繁的 Stream Load，便会引发 Compaction 不及时，从而导致 version 过多的错误(-235)；其次，当数据过多时，为了减少 Stream Load 的写入时机，batch.size 过大的设置还可能会引发 Flink 任务的 OOM。为了解决这个问题，<strong>我们引入了流式写入</strong> <strong>：</strong> <img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b4b7364deb34a1398c496d10890a249~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><ol><li><p>Flink 任务启动后，会异步发起一个 Stream Load 的 Http 请求。</p></li><li><p>接收到实时数据后，通过 Http 的分块传输编码(Chunked transfer encoding)机制持续向 Doris 传输数据。</p></li><li><p>在 Checkpoint 时结束 Http 请求，完成本次 Stream Load 写入，同时异步发起下一次 Stream Load 的请求。</p></li><li><p>继续接收实时数据，后续流程同上。</p></li></ol><p><strong>由于采用 Chunked 机制传输数据，就避免了攒批对内存的压力，同时将写入的时机和 Checkpoint 绑定起来，使得 Stream Load 的时机可控，并且为下面的 Exactly-Once 语义提供了基础。</strong></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="exactly-once">Exactly-Once<a class="hash-link" href="#exactly-once" title="标题的直接链接">​</a></h2><p>Exactly-Once 语义是指即使在机器或应用出现故障的情况下，也不会重复处理数据或者丢失数据。Flink 很早就支持 End-to-End 的 Exactly-Once 场景，主要是通过两阶段提交协议来实现 Sink 算子的 Exactly-Once 语义。在 Flink 两阶段提交的基础上，同时借助 Doris 1.0 的 Stream Load 两阶段提交，<strong>Flink Doris Connector 实现了 Exactly Once 语义，具体原理如下：</strong></p><ol><li>Flink 任务在启动的时候，会发起一个 Stream Load 的 PreCommit 请求，此时会先开启一个事务，同时会通过 Http 的 Chunked 机制将数据持续发送到 Doris。</li></ol><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b2f143faf784500a3a8ba34063d6c2e~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><ol start="2"><li>在 Checkpoint 时，结束数据写入，同时完成 Http 请求，并且将事务状态设置为预提交(PreCommitted)，此时数据已经写入 BE，对用户不可见。</li></ol><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7e1d4f76a824c9a8f473e2e266defc4~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><ol start="3"><li>Checkpoint 完成后，发起 Commit 请求，并且将事务状态设置为提交(Committed)，完成后数据对用户可见。</li></ol><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1215aaa4dc3e44de86cdd4680ac30b00~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><ol start="4"><li>Flink 应用意外挂掉后，从 Checkpoint 重启时，若上次事务为预提交(PreCommitted)状态，则会发起回滚请求，并且将事务状态设置为 Aborted。</li></ol><p><strong>基于此，可以借助 Flink Doris Connector 实现数据实时入库时数据不丢不重。</strong></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="秒级别数据同步">秒级别数据同步<a class="hash-link" href="#秒级别数据同步" title="标题的直接链接">​</a></h2><p>高并发写入场景下的端到端秒级别数据同步以及数据的实时可见能力，<strong>需要 Doris 具备如下几方面的能力：</strong></p><p><strong>事务处理能力</strong></p><p>Flink 实时写入以 Stream Load 2PC 的方式与 Doris 进行交互，需要 Doris 具备对应的事务处理能力，保障事务基本的 ACID 特性，在高并发场景下支撑 Flink 秒级别的数据同步。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据版本的快速聚合能力">数据版本的快速聚合能力<a class="hash-link" href="#数据版本的快速聚合能力" title="标题的直接链接">​</a></h2><p>Doris 里面一次导入会产生一个数据版本，在高并发写入场景下必然带来的一个影响是数据版本过多，且单次导入的数据量不会太大。持续的高并发小文件写入场景对 Doris 并不友好，极其考验 Doris 数据合并的实时性以及性能，进而会影响到查询的性能。<strong>Doris 在 1.1 中大幅增强了数据 Compaction 能力，对于新增数据能够快速完成聚合，避免分片数据中的版本过多导致的 -235 错误以及带来的查询效率问题。</strong> </p><p><strong>首先</strong>，在 Doris 1.1 版本中，引入了 QuickCompaction，增加了主动触发式的 Compaction 检查，在数据版本增加的时候主动触发 Compaction。同时通过提升分片元信息扫描的能力，快速的发现数据版本多的分片，触发 Compaction。通过主动式触发加被动式扫描的方式，彻底解决数据合并的实时性问题。</p><p><strong>同时</strong>，针对高频的小文件 Cumulative Compaction，实现了 Compaction 任务的调度隔离，防止重量级的 Base Compaction 对新增数据的合并造成影响。</p><p><strong>最后</strong>，针对小文件合并，优化了小文件合并的策略，采用梯度合并的方式，每次参与合并的文件都属于同一个数据量级，防止大小差别很大的版本进行合并，逐渐有层次的合并，减少单个文件参与合并的次数，能够大幅的节省系统的 CPU 消耗。<img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fee6ce47ed6d4c21a34ca35c3a3ad4df~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>Doris 1.1 对高并发导入、秒级别数据同步、数据实时可见等场景都做了针对性优化，大大增加了 Flink + Doris 系统的易用性以及稳定性，节省了集群整体资源。</strong></p><h1>效果</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="通用-flink-高并发场景">通用 Flink 高并发场景<a class="hash-link" href="#通用-flink-高并发场景" title="标题的直接链接">​</a></h2><p>在调研的通用场景中，使用 Flink 同步上游 Kafka 中的非结构化数据，经过 ETL 后使用 Flink Doris Connector 将数据实时写入 Doris 中。这里客户场景极其严苛，上游维持以每秒 10w 的超高频率写入，需要数据能够在 5s 内完成上下游同步，实现秒级别的数据可见。这里 Flink 配置为 20 并发，Checkpoint 间隔 5s，Doris 1.1 的表现相当优异。<strong>具体体现在如下几个方面：</strong></p><p><strong>Compaction 实时性</strong></p><p>数据能快速合并，Tablet 数据版本个数维持在 50 以下， Compaction Score 稳定。相比于之前高并发导入频出的 -235 问题，<strong>Compaction 合并效率有 10+ 倍提升</strong>。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f622b2f235ae4bad8b2b38fd9d1f0c57~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>CPU 资源消耗</strong></p><p>Doris 1.1 针对小文件的 Compaction 进行了策略优化，在上述高并发导入场景，<strong>CPU 资源消耗下降 25%。</strong> <img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec2732a96bf047e283465b04452c063a~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p><strong>QPS 查询延迟稳定</strong></p><p>通过降低 CPU 使用率，减少数据版本的个数，提升了数据整体有序性，从而减少了 SQL 查询的延迟。<img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f49f45e950045c0b7913dd167c8d220~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="秒级别数据同步场景极限大压力">秒级别数据同步场景（极限大压力）<a class="hash-link" href="#秒级别数据同步场景极限大压力" title="标题的直接链接">​</a></h2><p>单 BE 单 Tablet，客户端 30 并发极限 Stream Load 压测，数据在实时性&lt;1s，Compaction Score 优化前后对比</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/209083a2f22846688f02454e306e0053~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><h1>使用建议</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据实时可见场景">数据实时可见场景<a class="hash-link" href="#数据实时可见场景" title="标题的直接链接">​</a></h2><p>对延迟要求特别严格的场景，比如秒级别数据同步，通常意味着单次导入文件较小，此时建议调小 cumulative_size_based_promotion_min_size_mbytes，单位是 MB，默认 64，可以设置成 8，能够很大程度提升 Compaction 的实时性。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="高并发场景">高并发场景<a class="hash-link" href="#高并发场景" title="标题的直接链接">​</a></h2><p>对于高并发的写入场景，可以通过增加 Checkpoint 的间隔来减少 Stream Load 的频率，比如 Checkpoint 可以设置为 5-10s，不仅可以增加 Flink 任务的吞吐，也可以减少小文件的产生，避免给 Compaction 造成更多压力。</p><p>此外，对数据实时性要求不高的场景，比如分钟级别的数据同步，可以增加 Checkpoint 的间隔，比如 5-10 分钟，此时 Flink Doris Connector 依然能够通过两阶段提交 +checkpoint 机制来保证数据的完整性。</p><h1>未来规划</h1><p><strong>实时 Schema Change</strong></p><p>目前通过 Flink CDC 实时接入数据时，当上游业务表进行 Schema Change 操作时，必须先手动修改 Doris 中的 Schema 和 Flink 任务中的 Schema，最后再重启任务，新的 Schema 的数据才可以同步过来。这样使用方式需要人为的介入，会给用户带来极大的运维负担。<strong>后续会针对 CDC 场景做到支持 Schema 实时变更，上游的 Schema Change 实时同步到下游，全面提升 Schema Change 的效率。</strong></p><p><strong>Doris 多表写入</strong></p><p>目前 Doris Sink 算子仅支持同步单张表，所以对于整库同步的操作，需要手动在 Flink 层面进行分流，写到多个 Doris Sink 中，这无疑增加了开发者的难度，<strong>在后续版本中我们也将支持单个 Doris Sink 同步多张表，这样就大大的简化了用户的操作。</strong></p><p><strong>自适应的 Compaction 参数调优</strong></p><p>目前 Compaction 策略参数较多，在大部分通用场景能发挥较好的效果，但是在一些特殊场景下并不能高效的发挥作用。<strong>我们将在后续版本中持续优化，针对不同的场景，进行自适应的 Compaction 调优，在各类场景下提高数据合并效率，提升实时性。</strong></p><p><strong>单副本 Compaction</strong></p><p>目前的 Compaction 策略是各 BE 单独进行，<strong>在后续版本中我们将实现单副本 Compaction，通过克隆快照的方式实现 Compaction 任务，减少集群 2/3 的 Compaction 任务，降低系统的负载，把更多的系统资源留给用户侧。</strong></p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="技术解析" term="技术解析"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris 1.1.1 Release]]></title>
        <id>/release-1.1.1</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-1.1.1"/>
        <updated>2022-07-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="新增功能">新增功能<a class="hash-link" href="#新增功能" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="向量化执行引擎支持-odbc-sink">向量化执行引擎支持 ODBC Sink。<a class="hash-link" href="#向量化执行引擎支持-odbc-sink" title="标题的直接链接">​</a></h3><p>在 1.1.0 版本的向量化执行引擎中 ODBC Sink 是不支持的，而这一功能在之前版本的行存引擎是支持的，因此在 1.1.1 版本中我们重新完善了这一功能。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="增加简易版-memtracker">增加简易版 MemTracker<a class="hash-link" href="#增加简易版-memtracker" title="标题的直接链接">​</a></h3><p>MemTracker 是一个用于分析内存使用情况的统计工具，在 1.1.0 版本的向量化执行引擎中，由于 BE 侧没有 MemTracker，可能出现因内存失控导致的 OOM 问题。在 1.1.1 版本中，BE 侧增加了一个简易版 MemTracker，可以帮助控制内存，并在内存超出时取消查询。</p><p>完整版 MemTracker 将在 1.1.2 版本中正式发布。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="改进">改进<a class="hash-link" href="#改进" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持在-page-cache-中缓存解压后数据">支持在 Page Cache 中缓存解压后数据。<a class="hash-link" href="#支持在-page-cache-中缓存解压后数据" title="标题的直接链接">​</a></h3><p>在 Page Cache 中有些数据是用 bitshuffle 编码方式压缩的，在查询过程中需要花费大量的时间来解压。在 1.1.1 版本中，Doris 将缓存解压由 bitshuffle 编码的数据以加速查询，我们发现在 ssb-flat 的一些查询中，可以减少 30% 的延时。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-修复">Bug 修复<a class="hash-link" href="#bug-修复" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复无法从-10-版本进行滚动升级的问题">修复无法从 1.0 版本进行滚动升级的问题。<a class="hash-link" href="#修复无法从-10-版本进行滚动升级的问题" title="标题的直接链接">​</a></h3><p>这个问题是在 1.1.0 版本中出现的，当升级 BE 而不升级 FE 时，可能会导致 BE Core。</p><p>如果你遇到这个问题，你可以尝试用 <a href="https://github.com/apache/doris/pull/10833" target="_blank" rel="noopener noreferrer">#10833</a> 来修复它。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复某些查询不能回退到非向量化引擎的问题并导致-be-core">修复某些查询不能回退到非向量化引擎的问题，并导致 BE Core。<a class="hash-link" href="#修复某些查询不能回退到非向量化引擎的问题并导致-be-core" title="标题的直接链接">​</a></h3><p>目前，向量化执行引擎不能处理所有的 SQL 查询，一些查询（如 left outer join）将使用非向量化引擎来运行。但部分场景在 1.1.0 版本中未被覆盖到，这可能导致 BE 挂掉。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复-compaction-不能正常工作导致的--235-错误">修复 Compaction 不能正常工作导致的 -235 错误。<a class="hash-link" href="#修复-compaction-不能正常工作导致的--235-错误" title="标题的直接链接">​</a></h3><p>在 Unique Key 模型中，当一个 Rowset 有多个 Segment 时，在做 Compaction 过程中由于没有正确的统计行数，会导致Compaction 失败并且产生 Tablet 版本过多而导致的 -235 错误。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复查询过程中出现的部分-segment-fault">修复查询过程中出现的部分 Segment fault。<a class="hash-link" href="#修复查询过程中出现的部分-segment-fault" title="标题的直接链接">​</a></h3><p><a href="https://github.com/apache/doris/pull/10961" target="_blank" rel="noopener noreferrer">#10961</a>
<a href="https://github.com/apache/doris/pull/10954" target="_blank" rel="noopener noreferrer">#10954</a>
<a href="https://github.com/apache/doris/pull/10962" target="_blank" rel="noopener noreferrer">#10962</a></p><h1>致谢</h1><p>感谢所有参与贡献 1.1.1 版本的开发者:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@jacktengg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mrhhsg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinyiZzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yixiutt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@starocean999</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morrySnow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@HappenLee</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在京东客服 OLAP 中的应用实践]]></title>
        <id>/jd</id>
        <link href="https://doris.apache.org/zh-CN/blog/jd"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1><strong>引言</strong></h1><p>Apache Doris 是一款开源的 MPP 分析型数据库产品，不仅能够在亚秒级响应时间即可获得查询结果，有效的支持实时数据分析，而且支持 10PB 以上的超大的数据集。相较于其他业界比较火的 OLAP 数据库系统，Doris 的分布式架构非常简洁，支持弹性伸缩，易于运维，节省大量人力和时间成本。目前国内社区火热，也有美团、小米等大厂在使用。</p><p>本文主要讨论京东客服在人工咨询、客户事件单、售后服务单等专题的实时大屏，在实时和离线数据多维分析方面，如何利用 Doris 进行业务探索与实践。近些年来，随着数据量爆炸式的增长，以及海量数据联机分析需求的出现，MySQL、Oracle 等传统的关系型数据库在大数据量下遇到瓶颈，而 Hive、Kylin 等数据库缺乏时效性。于是 Apache Doris、Apache Druid、ClickHouse 等实时分析型数据库开始出现，不仅可以应对海量数据的秒级查询，更满足实时、准实时的分析需求。离线、实时计算引擎百花齐放。但是针对不同的场景，面临不同的问题，没有哪一种引擎是万能的。我们希望通过本文，对京东客服业务在离线与实时分析的应用与实践，能够给到大家一些启发，也希望大家多多交流，给我们提出宝贵的建议。</p><h1><strong>京东客服业务形态</strong></h1><p>京东客服作为集团服务的入口，为用户和商家提供了高效、可靠的保障。京东客服肩负着及时解决用户问题的重任，给用户提供详细易懂的说明与解释；为更好的了解用户的反馈以及产品的状况，需要实时的监控咨询量、接起率、投诉量等一系列指标，通过环比和同比，及时发现存在的问题，以更好的适应用户的购物方式，提高服务质量与效率，进而提高京东品牌的影响力。</p><h1><strong>Easy OLAP 设计</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="01-easyolap-doris-数据导入链路"><strong>01 EasyOLAP Doris 数据导入链路</strong><a class="hash-link" href="#01-easyolap-doris-数据导入链路" title="标题的直接链接">​</a></h3><p>EasyOLAP Doris 数据源主要是实时 Kafka 和离线 HDFS 文件。实时数据的导入依赖于 Routine Load 的方式；离线数据主要使用 Broker Load 和 Stream Load 的方式导入。</p><p><img loading="lazy" alt="EasyOLAP Doris 数据导入链路" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/jd03-00bd471f0fab2d98798f5e3148b35fce.png" width="1080" height="604" class="img_ev3q"></p><p>EasyOLAP Doris 数据导入链路</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="02-easyolap-doris-全链路监控"><strong>02 EasyOLAP Doris 全链路监控</strong><a class="hash-link" href="#02-easyolap-doris-全链路监控" title="标题的直接链接">​</a></h3><p>目前 EasyOLAP Doris 项目的监控，使用的是 Prometheus + Grafana 框架。其中 node_exporter 负责采集机器层面的指标，Doris 也会自动以 Prometheus 格式吐出 FE、BE 的服务层面的指标。另外，部署了 OLAP Exporter 服务用于采集 Routine Load 相关的指标，旨在第一时间发现实时数据流导入的情况，确保实时数据的时效性。</p><p><img loading="lazy" alt="EasyOLAP Doris monitoring link" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/jd04-8770adfb04ffe977f931d9eaff4cb534.png" width="1080" height="594" class="img_ev3q"></p><p>EasyOLAP Doris 监控链路</p><p><img loading="lazy" alt="640" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/jd01-47257e8bb0b14785f854db959cdfd931.png" width="871" height="600" class="img_ev3q"></p><p>EasyOLAP Doris 监控面板展示</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="03-easyolap-doris-主备双流设计"><strong>03 EasyOLAP Doris 主备双流设计</strong><a class="hash-link" href="#03-easyolap-doris-主备双流设计" title="标题的直接链接">​</a></h3><p>EasyOLAP Doris 为了保障 0 级业务在大促期间服务的稳定性，采取了主备集群双写的方式。当其中一个集群出现抖动或者数据存在延迟的情况，用户可以自主地快速切换到另一个集群，尽可能的减少集群抖动给业务带来的影响。</p><p><img loading="lazy" alt="03 EasyOLAP Doris Primary-Secondary Dual Stream Design" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/jd02-a6a4279c0c33a25862e89b56e7c986a7.png" width="1080" height="669" class="img_ev3q"></p><p>EasyOLAP Doris 主备双流设计</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="04-easyolap-doris-动态分区管理"><strong>04 EasyOLAP Doris 动态分区管理</strong><a class="hash-link" href="#04-easyolap-doris-动态分区管理" title="标题的直接链接">​</a></h3><p>京东 OLAP 团队分析需求之后，对 Doris 做了一定的定制化开发，其中就涉及到动态分区管理功能。尽管社区版本已经拥有动态分区的功能，但是该功能无法保留指定时间的分区。针对京东集团的特点，我们对指定时间的历史数据进行了留存，比如 618 和 11.11 期间的数据，不会因为动态分区而被删除。</p><p>动态分区管理功能能够控制集群中存储的数据量，而且方便了业务方的使用，无需手动或使用额外代码来管理分区信息。</p><h1><strong>Doris 缓存机制</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="01-需求场景"><strong>01 需求场景</strong><a class="hash-link" href="#01-需求场景" title="标题的直接链接">​</a></h3><p>致力于不断提升用户体验，京东客服的数据分析追求极致的时效性。离线数据分析场景是写少读多，数据写入一次，多次频繁读取；实时数据分析场景，一部分数据是不更新的历史分区，一部分数据是处于更新的分区。在大部分的分析应用中，存在下述几种场景：</p><ul><li>高并发场景：Doris 较好的支持高并发，但是过高的 QPS 会引起集群抖动，且单个节点无法承载太高的 QPS ；</li><li>复杂查询：京东客服实时运营平台监控根据业务场景需展示多维复杂指标，丰富指标展示对应多种不同的查询，且数据源来自于多张表，虽然单个查询的响应时间在毫秒级别，但是整体的响应时间可能会到秒级别；</li><li>重复查询：如果没有防重刷机制，由于延迟或手误，重复刷新页面会导致提交大量重复的查询；</li></ul><p>针对上述场景，在应用层有解决方案——将查询结果放入到 Redis 中，缓存会周期性的刷新或者由用户手动刷新，但是也会存在一些问题：</p><ul><li>数据不一致：无法立即对数据的更新作出响应，用户接收到的结果可能是旧数据；</li><li>命中率低：如果数据实时性强，缓存频繁失效，则缓存的命中率低且系统的负载无法得缓解；</li><li>额外成本：引入外部组件，增加系统复杂度，增加额外成本。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="02-缓存机制简介"><strong>02 缓存机制简介</strong><a class="hash-link" href="#02-缓存机制简介" title="标题的直接链接">​</a></h3><p>在 EasyOLAP Doris 中，一共有三种不同类型 Cache。根据适用场景的不同，分别为 Result Cache、SQL Cache 和 Partition Cache 。三种缓存都可以通过 MySQL 客户端指令控制开关。</p><p>这三种缓存机制是可以共存的，即可以同时开启。查询时，查询分析器首先会判断是否开启了 Result Cache ，在 Result Cache 开启的情况下先从 Result Cache 中查找该查询是否存在缓存，如果存在缓存，直接取缓存的值返回给客户端；如果缓存失效或者不存在，则直接进行查询并将结果写入到缓存。缓存放在各个 FE 节点的内存中，以便快速读取。</p><p>SQL Cache 按照 SQL 的签名、查询的表的分区的 ID 和分区最新版本号来存储和获取缓存。这三者一起作为缓存的条件，其中一者发生变化，如 SQL 语句变化、数据更新之后分区版本号变化，都会无法命中缓存。在多表 Join 的情况下，其中一张表的分区更新，也会导致无法命中缓存。SQL Cache 更适合 T+1 更新的场景。</p><p>Partition Cache 是更细粒度的缓存机制。Partition Cache 主要是将一个查询根据分区并行拆分，拆分为只读分区和可更新分区，只读分区缓存，更新分区不缓存，相应的结果集也会生成 n 个，然后再将各个拆分后的子查询的结果合并。因此，如果查询 N 天的数据，数据更新最近的 D 天，每天只是日期范围不一样但相似的查询，就可以利用 Partition Cache ，只需要查询 D 个分区即可，其他部分都来自缓存，可以有效降低集群负载，缩短查询响应时间。</p><p>一个查询进入到 Doris，系统先会处理查询语句，并将该查询语句作为 Key，在执行查询语句之前，查询分析器能够自动选择最适合的缓存机制，以确保在最优的情况下，利用缓存机制来缩短查询相应时间。然后检查 Cache 中是否存在该查询结果，如果存在就获取缓存中的数据返回给客户端；如果没有缓存，则正常查询，并将该查询结果以 Value 的形式和该查询语句 Key 存储到缓存中。Result Cache 可以在高并发场景下发挥其作用，也可以保护集群资源不受重复的大查询的侵占。SQL Cache 更加适合 T+1 的场景，在分区更新不频繁以及 SQL 语句重复的情况下，效果很好。Partition Cache 是粒度最小的缓存。在查询语句查询一个时间段的数据时，查询语句会被拆分成多个子查询。在数据只写一个分区或者部分分区的情况下，能够缩短查询时间，节省集群资源。</p><p>为了更好的观察缓存的效果，相关指标已经加入到 Doris 的服务指标中，通过 Prometheus 和 Grafana 监控系统获取直观的监控数据。指标有不同种类的 Cache 的命中数量、不同种类的 Cache 命中率、 Cache 的内存大小等指标。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="03-缓存机制效果"><strong>03 缓存机制效果</strong><a class="hash-link" href="#03-缓存机制效果" title="标题的直接链接">​</a></h3><p>京东客服 Doris 主集群，11.11 期间在没有开启缓存时，部分业务就导致 CPU 的使用率达到 100% ；在开启 Result Cache 的情况下，CPU 使用率在 30%-40% 之间。缓存机制确保业务在高并发场景下，能够快速的得到查询结果，并很好的保护了集群资源。</p><h1><strong>Doris 在 2020 年 11.11 大促期间的优化</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="01-导入任务优化"><strong>01 导入任务优化</strong><a class="hash-link" href="#01-导入任务优化" title="标题的直接链接">​</a></h3><p>实时数据的导入一直是一个挑战。其中，保证数据实时性和导入稳定性是最重要的。为了能够更加直观的观察实时数据导入的情况，京东 OLAP 团队自主开发了 OLAP Exporter ，用于采集实时数据导入相关的指标，如导入速度、导入积压和暂停的任务等。通过导入速度和导入积压，可以判断一个实时导入任务的状态，如发现任务有积压的趋势，可以使用自主开发的采样工具，对实时任务进行采样分析。实时任务主要有三个阈值来控制任务的提交，分别是每批次最大处理时间间隔、每批次最大处理条数和每批次最大处理数据量，一个任务只要达到其中一个阈值，该任务就会被提交。通过增加日志，发现 FE 中的任务队列比较繁忙，所以，参数的调整主要都是将每批次最大处理条数和每批次最大处理数据量调大，然后根据业务的需求，调整每批次最大处理时间间隔，以保证数据的延迟在每批次最大处理时间间隔的两倍之内。通过采样工具，分析任务，不仅保证了数据的实时性，也保证了导入的稳定性。另外，我们也设置了告警，可以及时发现实时导入任务的积压以及导入任务的暂停等异常情况。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="02-监控指标优化"><strong>02 监控指标优化</strong><a class="hash-link" href="#02-监控指标优化" title="标题的直接链接">​</a></h3><p>监控指标主要分为两个部分，一个是机器层面指标部分，一个是业务层面指标部分。在整个监控面板里，详细的指标带来了全面的数据的同时，也增加了获取重要指标的难度。所以，为了更好的观察所有集群的重要指标，单独设立一个板块—— 11.11 重要指标汇总板块。板块中有 BE CPU 使用率、实时任务消费积压行数、TP99、QPS 等指标。指标数量不多，但是可以观测到所有集群的情况，这样可以免去在监控中频繁切换的麻烦。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="03-周边工具支持"><strong>03 周边工具支持</strong><a class="hash-link" href="#03-周边工具支持" title="标题的直接链接">​</a></h3><p>除了上述说到的采样工具和 OLAP Exporter ，京东 OLAP 团队还开发了一系列的 Doris 维护工具。</p><ol><li><p>导入采样工具：导入采样工具不仅可以采集实时导入的数据，而且还支持调整实时导入任务的参数，或者在实时导入任务暂停状态下，生成创建语句（包括最新的位点等信息）用于任务的迁移等操作。</p></li><li><p>大查询工具：大查询不仅会造成集群 BE CPU 使用率的抖动，还会导致其他查询响应时间变长。在有大查询工具之前，发现集群 CPU 出现抖动，需要去检查所有 FE 上的审计日志，然后再做统计，不仅浪费时间，而且不够直观。大查询工具就是为了解决上述的问题。当监控侧发现集群有抖动，就可以使用大查询工具，输入集群名和时间点，就可以得到该时间点下，不同业务的查询总数，时间超过 5 秒、 10 秒、 20 秒的查询个数，扫描量巨大的查询个数等，方便我们从不同的维度分析大查询。大查询的详细情况也将被保存在中间文件中，可以直接获取不同业务的大查询。整个过程只需要几十秒到一分钟就可以定位到正在发生的大查询并获取相应的查询语句，大大节约了时间和运维成本。</p></li><li><p>降级与恢复工具：为了确保 11.11 大促期间， 0 级业务的稳定性，在集群压力超过安全位的时候，需要对其他非 0 级业务做降级处理，待度过高峰期后，再一键恢复到降级前的设置。降级主要是降低业务的最大连接数、暂停非 0 级的实时导入任务等。这大大增加了操作的便捷性，提高了效率。</p></li><li><p>集群巡检工具：在 11.11 期间，集群的健康巡检是极其重要的。常规巡检包括双流业务的主备集群一致性检查，为了确保业务在一个集群出现问题的时候可以快速切换到另一个集群，就需要保证两个集群上的库表一致、数据量差异不大等；检查库表的副本数是否为 3 且检查集群是否存在不健康的 Tablet ；检查机器磁盘使用率、内存等机器层面的指标等。</p></li></ol><h1><strong>总结与展望</strong></h1><p>京东客服是在 2020 年年初开始引入 Doris 的，目前拥有一个独立集群，一个共享集群，是京东 OLAP 的资深用户。</p><p>在业务使用中也遇到了例如任务调度相关的、导入任务配置相关的和查询相关等问题，这也在推动京东 OLAP 团队更深入的了解 Doris 。我们计划推广使用物化视图来进一步提升查询的效率；使用 Bitmap 来支持 UV 等指标的精确去重操作；使用审计日志，更方便的统计大查询、慢查询；解决实时导入任务的调度问题，使导入任务更加高效稳定。除此之外，我们也计划优化建表、创建优质 Rollup 或物化视图以提升应用的流畅性，加速更多业务向 OLAP 平台靠拢，以提升应用的影响力。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在美团外卖实时数仓建设中的实践]]></title>
        <id>/meituan</id>
        <link href="https://doris.apache.org/zh-CN/blog/meituan"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p><strong>导读：</strong>本文主要介绍一种通用的实时数仓构建的方法与实践。实时数仓以端到端低延迟、SQL 标准化、快速响应变化、数据统一为目标。在实践中，我们总结的最佳实践是：一个通用的实时生产平台 + 一个通用交互式实时分析引擎相互配合同时满足实时和准实时业务场景。两者合理分工，互相补充，形成易于开发、易于维护、效率最高的流水线，兼顾开发效率与生产成本，以较好的投入产出比满足业务多样需求。</p><h1><strong>实时场景</strong></h1><p>实时数据在美团外卖的场景是非常多的，主要有以下几点：</p><ul><li><p>运营层面：比如实时业务变化，实时营销效果，当日营业情况以及当日实时业务趋势分析等。</p></li><li><p>生产层面：比如实时系统是否可靠，系统是否稳定，实时监控系统的健康状况等。</p></li><li><p>C 端用户：比如搜索推荐排序，需要实时了解用户的想法，行为、特点，给用户推荐更加关注的内容。</p></li><li><p>风控侧：在外卖以及金融科技用的是非常多的，实时风险识别，反欺诈，异常交易等，都是大量应用实时数据的场景</p></li></ul><h1><strong>实时技术及架构</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1实时计算技术选型"><strong>1.实时计算技术选型</strong><a class="hash-link" href="#1实时计算技术选型" title="标题的直接链接">​</a></h3><p>目前开源的实时技术比较多，比较通用的是 Storm、Spark Streaming 以及 Flink，具体要根据不同公司的业务情况进行选型。</p><p>美团外卖是依托美团整体的基础数据体系建设，从技术成熟度来讲，前几年用的是 Storm，Storm 当时在性能稳定性、可靠性以及扩展性上是无可替代的，随着 Flink 越来越成熟，从技术性能上以及框架设计优势上已经超越 Storm，从趋势来讲就像 Spark 替代 MR 一样，Storm 也会慢慢被 Flink 替代，当然从 Storm 迁移到 Flink 会有一个过程，我们目前有一些老的任务仍然在 Storm 上，也在不断推进任务迁移。</p><p>具体 Storm 和 Flink 的对比可以参考上图表格。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2实时架构">2.<strong>实时架构</strong><a class="hash-link" href="#2实时架构" title="标题的直接链接">​</a></h3><p><strong>① Lambda 架构</strong></p><p>Lambda 架构是比较经典的架构，以前实时的场景不是很多，以离线为主，当附加了实时场景后，由于离线和实时的时效性不同，导致技术生态是不一样的。Lambda 架构相当于附加了一条实时生产链路，在应用层面进行一个整合，双路生产，各自独立。这在业务应用中也是顺理成章采用的一种方式。</p><p>双路生产会存在一些问题，比如加工逻辑 double，开发运维也会 double，资源同样会变成两个资源链路。因为存在以上问题，所以又演进了一个 Kappa 架构。</p><p><strong>② Kappa 架构</strong></p><p>Kappa 架构从架构设计来讲比较简单，生产统一，一套逻辑同时生产离线和实时。但是在实际应用场景有比较大的局限性，在业内直接用 Kappa 架构生产落地的案例不多见，且场景比较单一。这些问题在我们这边同样会遇到，我们也会有自己的一些思考，在后面会讲到。</p><h1><strong>业务痛点</strong></h1><p>在外卖业务上，我们也遇到了一些问题。</p><p>业务早期，为了满足业务需要，一般是拿到需求后 case by case 的先把需求完成，业务对于实时性要求是很高的，从时效性来说，没有进行中间层沉淀的机会，在这种场景下，一般是拿到业务逻辑直接嵌入，这是能想到的简单有效的方法，在业务发展初期这种开发模式比较常见。</p><p>如上图所示，拿到数据源后，会经过数据清洗，扩维，通过 Storm 或 Flink 进行业务逻辑处理，最后直接进行业务输出。把这个环节拆开来看，数据源端会重复引用相同的数据源，后面进行清洗、过滤、扩维等操作，都要重复做一遍，唯一不同的是业务的代码逻辑是不一样的，如果业务较少，这种模式还可以接受，但当后续业务量上去后，会出现谁开发谁运维的情况，维护工作量会越来越大，作业无法形成统一管理。而且所有人都在申请资源，导致资源成本急速膨胀，资源不能集约有效利用，因此要思考如何从整体来进行实时数据的建设。</p><h1><strong>数据特点与应用场景</strong></h1><p>那么如何来构建实时数仓呢？</p><p>首先要进行拆解，有哪些数据，有哪些场景，这些场景有哪些共同特点，对于外卖场景来说一共有两大类，日志类和业务类。</p><ul><li><p>日志类：数据量特别大，半结构化，嵌套比较深。日志类的数据有个很大的特点，日志流一旦形成是不会变的，通过埋点的方式收集平台所有的日志，统一进行采集分发，就像一颗树，树根非常大，推到前端应用的时候，相当于从树根到树枝分叉的过程（从 1 到 n 的分解过程），如果所有的业务都从根上找数据，看起来路径最短，但包袱太重，数据检索效率低。日志类数据一般用于生产监控和用户行为分析，时效性要求比较高，时间窗口一般是 5min 或 10min 或截止到当前的一个状态，主要的应用是实时大屏和实时特征，例如用户每一次点击行为都能够立刻感知到等需求。</p></li><li><p>业务类：主要是业务交易数据，业务系统一般是自成体系的，以 Binlog 日志的形式往下分发，业务系统都是事务型的，主要采用范式建模方式，特点是结构化的，主体非常清晰，但数据表较多，需要多表关联才能表达完整业务，因此是一个 n 到 1 的集成加工过程。</p></li></ul><p>业务类实时处理面临的几个难点：</p><ul><li><p>业务的多状态性：业务过程从开始到结束是不断变化的，比如从下单-&gt;支付-&gt;配送，业务库是在原始基础上进行变更的，Binlog 会产生很多变化的日志。而业务分析更加关注最终状态，由此产生数据回撤计算的问题，例如 10 点下单，13 点取消，但希望在 10 点减掉取消单。</p></li><li><p>业务集成：业务分析数据一般无法通过单一主体表达，往往是很多表进行关联，才能得到想要的信息，在实时流中进行数据的合流对齐，往往需要较大的缓存处理且复杂。</p></li><li><p>分析是批量的，处理过程是流式的：对单一数据，无法形成分析，因此分析对象一定是批量的，而数据加工是逐条的。</p></li></ul><p>日志类和业务类的场景一般是同时存在的，交织在一起，无论是 Lambda 架构还是 Kappa 架构，单一的应用都会有一些问题。因此针对场景来选择架构与实践才更有意义。</p><h1><strong>实时</strong>数仓架构设计</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-实时架构流批结合的探索"><strong>1. 实时架构：流批结合的探索</strong><a class="hash-link" href="#1-实时架构流批结合的探索" title="标题的直接链接">​</a></h3><p>基于以上问题，我们有自己的思考。通过流批结合的方式来应对不同的业务场景。</p><p>如上图所示，数据从日志统一采集到消息队列，再到数据流的 ETL 过程，作为基础数据流的建设是统一的。之后对于日志类实时特征，实时大屏类应用走实时流计算。对于 Binlog 类业务分析走实时 OLAP 批处理。</p><p>流式处理分析业务的痛点？对于范式业务，Storm 和 Flink 都需要很大的外存，来实现数据流之间的业务对齐，需要大量的计算资源。且由于外存的限制，必须进行窗口的限定策略，最终可能放弃一些数据。计算之后，一般是存到 Redis 里做查询支撑，且 KV 存储在应对分析类查询场景中也有较多局限。</p><p>实时 OLAP 怎么实现？有没有一种自带存储的实时计算引擎，当实时数据来了之后，可以灵活的在一定范围内自由计算，并且有一定的数据承载能力，同时支持分析查询响应呢？随着技术的发展，目前 MPP 引擎发展非常迅速，性能也在飞快提升，所以在这种场景下就有了一种新的可能。这里我们使用的是 Doris 引擎。</p><p>这种想法在业内也已经有实践，且成为一个重要探索方向。阿里基于 ADB 的实时 OLAP 方案等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-实时数仓架构设计"><strong>2. 实时数仓架构设计</strong><a class="hash-link" href="#2-实时数仓架构设计" title="标题的直接链接">​</a></h3><p>从整个实时数仓架构来看，首先考虑的是如何管理所有的实时数据，资源如何有效整合，数据如何进行建设。</p><p>从方法论来讲，实时和离线是非常相似的，离线数仓早期的时候也是 case by case，当数据规模涨到一定量的时候才会考虑如何治理。分层是一种非常有效的数据治理方式，所以在实时数仓如何进行管理的问题上，首先考虑的也是分层的处理逻辑，具体如下：</p><ul><li><p>数据源：在数据源的层面，离线和实时在数据源是一致的，主要分为日志类和业务类，日志类又包括用户日志，DB 日志以及服务器日志等。</p></li><li><p>实时明细层：在明细层，为了解决重复建设的问题，要进行统一构建，利用离线数仓的模式，建设统一的基础明细数据层，按照主题进行管理，明细层的目的是给下游提供直接可用的数据，因此要对基础层进行统一的加工，比如清洗、过滤、扩维等。</p></li><li><p>汇总层：汇总层通过 Flink 或 Storm 的简洁算子直接可以算出结果，并且形成汇总指标池，所有的指标都统一在汇总层加工，所有人按照统一的规范管理建设，形成可复用的汇总结果。</p></li></ul><p>总结起来，从整个实时数仓的建设角度来讲，首先数据建设的层次化要先建出来，先搭框架，然后定规范，每一层加工到什么程度，每一层用什么样的方式，当规范定义出来后，便于在生产上进行标准化的加工。由于要保证时效性，设计的时候，层次不能太多，对于实时性要求比较高的场景，基本可以走上图左侧的数据流，对于批量处理的需求，可以从实时明细层导入到实时 OLAP 引擎里，基于 OLAP 引擎自身的计算和查询能力进行快速的回撤计算，如上图右侧的数据流。</p><h1><strong>实时平台化建设</strong></h1><p>架构确定之后，后面考虑的是如何进行平台化的建设，实时平台化建设完全附加于实时数仓管理之上进行的。</p><p>首先进行功能的抽象，把功能抽象成组件，这样就可以达到标准化的生产，系统化的保障就可以更深入的建设，对于基础加工层的清洗、过滤、合流、扩维、转换、加密、筛选等功能都可以抽象出来，基础层通过这种组件化的方式构建直接可用的数据结果流。这其中会有一个问题，用户的需求多样，满足了这个用户，如何兼容其他的用户，因此可能会出现冗余加工的情况，从存储来讲，实时数据不存历史，不会消耗过多的存储，这种冗余是可以接受的，通过冗余的方式可以提高生产效率，是一种空间换时间的思想应用。</p><p>通过基础层的加工，数据全部沉淀到 IDL 层，同时写到 OLAP 引擎的基础层，再往上是实时汇总层计算，基于 Storm、Flink 或 Doris，生产多维度的汇总指标，形成统一的汇总层，进行统一的存储分发。</p><p>当这些功能都有了以后，元数据管理，指标管理，数据安全性、SLA、数据质量等系统能力也会逐渐构建起来。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1实时基础层功能">1.实时基础层功能<a class="hash-link" href="#1实时基础层功能" title="标题的直接链接">​</a></h3><p>实时基础层的建设要解决一些问题。</p><p>首先是一条流重复读的问题，一条 Binlog 打过来，是以 DB 包的形式存在的，用户可能只用其中一张表，如果大家都要用，可能存在所有人都要接这个流的问题。解决方案是可以按照不同的业务解构出来，还原到基础数据流层，根据业务的需要做成范式结构，按照数仓的建模方式进行集成化的主题建设。</p><p>其次要进行组件的封装，比如基础层的清洗、过滤、扩维等功能，通过一个很简单的表达入口，让用户将逻辑写出来。trans 环节是比较灵活的，比如从一个值转换成另外一个值，对于这种自定义逻辑表达，我们也开放了自定义组件，可以通过 Java 或 Python 开发自定义脚本，进行数据加工。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2实时特征生产功能">2.<strong>实时特征生产功能</strong><a class="hash-link" href="#2实时特征生产功能" title="标题的直接链接">​</a></h3><p>特征生产可以通过 SQL 语法进行逻辑表达，底层进行逻辑的适配，透传到计算引擎，屏蔽用户对计算引擎的依赖。就像对于离线场景，目前大公司很少通过代码的方式开发，除非一些特别的 case，所以基本上可以通过 SQL 化的方式表达。</p><p>在功能层面，把指标管理的思想融合进去，原子指标、派生指标，标准计算口径，维度选择，窗口设置等操作都可以通过配置化的方式，这样可以统一解析生产逻辑，进行统一封装。</p><p>还有一个问题，同一个源，写了很多 SQL，每一次提交都会起一个数据流，比较浪费资源，我们的解决方案是，通过同一条流实现动态指标的生产，在不停服务的情况下可以动态添加指标。</p><p>所以在实时平台建设过程中，更多考虑的是如何更有效的利用资源，在哪些环节更能节约化的使用资源，这是在工程方面更多考虑的事情。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3sla-建设">3.SLA 建设<a class="hash-link" href="#3sla-建设" title="标题的直接链接">​</a></h3><p>SLA 主要解决两个问题，一个是端到端的 SLA，一个是作业生产效率的 SLA，我们采用埋点+上报的方式，由于实时流比较大，埋点要尽量简单，不能埋太多的东西，能表达业务即可，每个作业的输出统一上报到 SLA 监控平台，通过统一接口的形式，在每一个作业点上报所需要的信息，最后能够统计到端到端的 SLA。</p><p>在实时生产中，由于链路非常长，无法控制所有链路，但是可以控制自己作业的效率，所以作业 SLA 也是必不可少的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-实时-olap-方案">4. 实时 OLAP 方案<a class="hash-link" href="#4-实时-olap-方案" title="标题的直接链接">​</a></h3><p>问题：</p><ul><li><p>Binlog 业务还原复杂：业务变化很多，需要某个时间点的变化，因此需要进行排序，并且数据要存起来，这对于内存和 CPU 的资源消耗都是非常大的。</p></li><li><p>Binlog 业务关联复杂：流式计算里，流和流之间的关联，对于业务逻辑的表达是非常困难的。</p></li></ul><p>解决方案：</p><p>通过带计算能力的 OLAP 引擎来解决，不需要把一个流进行逻辑化映射，只需要解决数据实时稳定的入库问题。</p><p>我们这边采用的是 Doris 作为高性能的 OLAP 引擎，由于业务数据产生的结果和结果之间还需要进行衍生计算，Doris 可以利用 unique 模型或聚合模型快速还原业务，还原业务的同时还可以进行汇总层的聚合，也是为了复用而设计。应用层可以是物理的，也可以是逻辑化视图。</p><p>这种模式重在解决业务回撤计算，比如业务状态改变，需要在历史的某个点将值变更，这种场景用流计算的成本非常大，OLAP 模式可以很好的解决这个问题。</p><h1>实时应用案例</h1><p>最后通过一个案例说明，比如商家要根据用户历史下单数给用户优惠，商家需要看到历史下了多少单，历史 T+1 的数据要有，今天实时的数据也要有，这种场景是典型的 Lambda 架构，可以在 Doris 里设计一个分区表，一个是历史分区，一个是今日分区，历史分区可以通过离线的方式生产，今日指标可以通过实时的方式计算，写到今日分区里，查询的时候进行一个简单的汇总。</p><p>这种场景看起来比较简单，难点在于商家的量上来之后，很多简单的问题都会变的复杂，因此后面我们也会通过更多的业务输入，沉淀出更多的业务场景，抽象出来形成统一的生产方案和功能，以最小化的实时计算资源支撑多样化的业务需求，这也是未来需要达到的目的。</p><p>今天的分享就到这里，谢谢大家。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="嘉宾介绍">嘉宾介绍：<a class="hash-link" href="#嘉宾介绍" title="标题的直接链接">​</a></h3><p>朱良，5 年以上传统行业数仓建设经验，6 年互联网数仓经验，技术方向涉及离线，实时数仓治理，系统化能力建设，OLAP 系统及引擎，大数据相关技术，重点跟进 OLAP，实时技术前沿发展趋势。业务方向涉及即席查询，运营分析，策略报告产品，用户画像，人群推荐，实验评估等。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[打造自助对话式数据分析场景，Apache Doris 在思必驰的应用实践｜最佳实践]]></title>
        <id>/scenario</id>
        <link href="https://doris.apache.org/zh-CN/blog/scenario"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<blockquote><p>作者：赵伟，思必驰大数据高级研发，10年大数据开发和设计经验，负责大数据平台基础技术和OLAP分析技术开发。社区贡献：Doris-spark-connector 的实时读写和优化。</p></blockquote><h1>业务背景</h1><p>思必驰是国内专业的对话式人工智能平台公司，拥有全链路的智能语音语言技术，致力于成为全链路智能语音及语言交互的平台型企业，自主研发了新一代人机交互平台 DUI 和人工智能芯片 TH1520，为车联网、IoT 及政务、金融等众多行业场景合作伙伴提供自然语言交互解决方案。</p><p>思必驰于 2019 年首次引入 Apache Doris ，基于 Apache Doris 构建了实时与离线一体的数仓架构。相对于过去架构，Apache Doris 凭借其灵活的查询模型、极低的运维成本、短平快的开发链路以及优秀的查询性能等诸多方面优势，如今已经在实时业务运营、自助/对话式分析等多个业务场景得到运用，满足了 设备画像/用户标签、业务场景实时运营、数据分析看板、自助 BI、财务对账等多种数据分析需求。在这一过程中我们也积累了诸多使用上的经验，在此分享给大家。</p><h1>架构演进</h1><p>早期业务中离线数据分析是我们的主要需求，近几年，随着业务的不断发展，业务场景对实时数据分析的要求也越来越高，早期数仓架构逐渐力不从心，暴露出很多问题。为了满足业务场景对查询性能、响应时间及并发能力更高的要求，2019年正式引入 Apache Doris 构建实时离线一体的数仓架构。</p><p>以下将为大家介绍思必驰数仓架构的演进之路，早期数仓存在的优缺点，同时分享我们选择 Apache Doris 构建新架构的原因以及面临的新问题与挑战。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="早期数仓架构及痛点">早期数仓架构及痛点<a class="hash-link" href="#早期数仓架构及痛点" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="data_wharehouse_architecture_v1_0_git" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/data_wharehouse_architecture_v1_0_git-006b22817872b04ad8f909e54e8c1411.png" width="1953" height="1106" class="img_ev3q"></p><p>如上图所示，早期架构基于 Hive +Kylin 来构建离线数仓，实时数仓架基于 Spark+MySQL 来构建实时分析数仓。</p><p>我们业务场景的数据源主要分为三类，业务数据库如 MySQL，应用系统如 K8s 容器服务日志，还有车机设备终端的日志。数据源通过 MQTT/HTTP 协议、业务数据库 Binlog 、Filebeat日志采集等多种方式先写入 Kafka 。在早期架构中，数据经 Kafka 后将分为实时和离线两条链路，首先是实时部分，实时部分链路较短，经过 Kafka 缓冲完的数据通过 Spark 计算后放入 MySQL 中进行分析，对于早期的实时分析需求，MySQL 基本可以满足分析需求。而离线部分则由 Spark 进行数据清洗及计算后在 Hive 中构建离线数仓，并使用 Apache Kylin 构建 Cube，在构建 Cube 之前需要提前做好数据模型的的设计，包括关联表、维度表、指标字段、指标需要的聚合函数等，通过调度系统进行定时触发构建，最终使用 HBase 存储构建好的 Cube。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="早期架构的优势"><strong>早期架构的优势：</strong><a class="hash-link" href="#早期架构的优势" title="标题的直接链接">​</a></h3><ol><li><p>早期架构与 Hive 结合较好，无缝对接 Hadoop 技术体系。</p></li><li><p>离线数仓中基于 Kylin 的预计算、表关联、聚合计算、精确去重等场景，查询性能较高，在并发场景下查询稳定性也较高。</p></li></ol><p>早期架构解决了当时业务中较为紧迫的查询性能问题，但随着业务的发展，对数据分析要求不断升高，早期架构缺点也开始逐渐凸显出来。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="早期架构的痛点"><strong>早期架构的痛点：</strong><a class="hash-link" href="#早期架构的痛点" title="标题的直接链接">​</a></h3><ol><li><p>依赖组件多。Kylin 在 2.x、3.x 版本中强依赖 Hadoop 和 HBase ，应用组件较多导致开发链路较长，架构稳定性隐患多，维护成本比很高。</p></li><li><p>Kylin 的构建过程复杂，构建任务容易失败。Kylin 构建需要进行打宽表、去重列、生成字典，构建 Cube 等如果每天有 1000-2000 个甚至更多的任务，其中至少会有 10 个甚至更多任务构建失败，导致需要大量时间去写自动运维脚本。</p></li><li><p>维度/字典膨胀严重。维度膨胀指的是在某些业务场景中需要多个分析条件和字段，如果在数据分析模型中选择了很多字段而没有进行剪枝，则会导致 Cube 维度膨胀严重，构建时间变长。而字典膨胀指的是在某些场景中需要长时间做全局精确去重，会使得字典构建越来越大，构建时间也会越来越长，从而导致数据分析性能持续下降。</p></li><li><p>数据分析模型固定，灵活性较低。在实际应用过程中，如果对计算字段或者业务场景进行变更，则要回溯部分甚至全部数据。</p></li><li><p>不支持数据明细查询。早期数仓架构是无法提供明细数据查询的，Kylin 官方给的解决方法是下推给 Presto 做明细查询，这又引入了新的架构，增加了开发和运维成本。</p></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="架构选型">架构选型<a class="hash-link" href="#架构选型" title="标题的直接链接">​</a></h2><p>为解决以上问题，我们开始探索新的数仓架构优化方案，先后对市面上应用最为广泛的 Apache Doris、Clickhouse 等 OLAP 引擎进行选型调研。相较于 ClickHouse 的繁重运维、各种各样的表类型、不支持关联查询等，结合我们的 OLAP 分析场景中的需求，综合考虑，Apache Doris 表现较为优秀，最终决定引入 Apache Doris 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="新数仓架构">新数仓架构<a class="hash-link" href="#新数仓架构" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="data_wharehouse_architecture_v2_0_git" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/data_wharehouse_architecture_v2_0_git-825df043f0abf0fda4a92b8dc5d10956.png" width="1993" height="1144" class="img_ev3q"></p><p>如上图所示，我们基于 Apache Doris 构建了实时+离线一体的新数仓架构，与早期架构不同的是，实时和离线的数据分别进行处理后均写入 Apache Doris 中进行分析。</p><p>因历史原因数据迁移难度较大，离线部分基本和早期数仓架构保持一致，在Hive上构建离线数仓，当然完全可以在Apache Doris 上直接构建离线数仓。</p><p>相对早期架构不同的是，离线数据通过 Spark 进行清洗计算后在 Hive 中构建数仓，然后通过 Broker Load 将存储在 Hive 中的数据写入到 Apache Doris 中。这里要说明的， Broker Load 数据导入速度很快，天级别 100-200G 数据导入到 Apache Doris 中仅需要 10-20 分钟。</p><p>实时数据流部分，新架构使用了 Doris-Spark-Connector 来消费 Kafka 中的数据并经过简单计算后写入 Apache Doris 。从架构图所示，实时和离线数据统一在 Apache Doris 进行分析处理，满足了数据应用的业务需求，实现了实时+离线一体的数仓架构。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新架构的收益"><strong>新架构的收益：</strong><a class="hash-link" href="#新架构的收益" title="标题的直接链接">​</a></h3><ol><li><p>极简运维，维护成本低，不依赖 Hadoop 生态组件。Apache Doris 的部署简单，只有 FE 和 BE 两个进程， FE 和 BE 进程都是可以横向扩展的，单集群支持到数百台机器，数十 PB 的存储容量，并且这两类进程通过一致性协议来保证服务的高可用和数据的高可靠。这种高度集成的架构设计极大的降低了一款分布式系统的运维成本。在使用 Doris 三年时间中花费的运维时间非常少，相比于基于 Kylin 搭建的早期架构，新架构花费极少的时间去做运维。</p></li><li><p>链路短，开发排查问题难度大大降低。基于 Doris 构建实时和离线统一数仓，支持实时数据服务、交互数据分析和离线数据处理场景，这使得开发链路变的很短，问题排查难度大大降低。</p></li><li><p>支持 Runtime 形式的 Join 查询。Runtime 类似 MySQL 的表关联，这对数据分析模型频繁变更的场景非常友好，解决了早期结构数据模型灵活性较低的问题。</p></li><li><p>同时支持 Join、聚合、明细查询。解决了早期架构中部分场景无法查询数据明细的问题。</p></li><li><p>支持多种加速查询方式。支持上卷索引，物化视图，通过上卷索引实现二级索引来加速查询，极大的提升了查询响应时间。</p></li><li><p>支持多种联邦查询方式。支持对 Hive、Iceberg、Hudi 等数据湖和 MySQL、Elasticsearch 等数据库的联邦查询分析。</p></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="问题和挑战"><strong>问题和挑战：</strong><a class="hash-link" href="#问题和挑战" title="标题的直接链接">​</a></h3><p>在建设新数仓架构过程中，我们遇到了一些问题：</p><ul><li><p>高并发场景对 Apache Doris 查询性能存在一定影响。我们分别在 Doris 0.12 和 Doris 1.1版本上进行测试，同一时间同样的 SQL，10 并发和 50 并发进行访问，性能差别较大。</p></li><li><p>在实时写入场景中，当实时写入的数据量比较大时，会使得 IO 比较密集，导致查询性能下降。</p></li><li><p>大数据量下字符串精确去重较慢。目前使用的是 count distinct 函数、Shuffle 和聚合算子去重，此方式算力比较慢。当前业内常见的解决方法一般是针对去重列构建字典，基于字典构建 Bitmap 索引后使用 Bitmap 函数去重。目前 Apache Doris 只支持数字类型的 Bitmap 索引，具有一定的局限性。</p></li></ul><h1>业务场景的应用</h1><p>Apache Doris 在思必驰最先应用在实时运营业务场景以及自助/对话式分析场景，本章节将介绍两个场景的需求及应用情况。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="实时运营业务场景">实时运营业务场景<a class="hash-link" href="#实时运营业务场景" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="real-time_operation_git" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/real-time_operation_git-87d6e8ede096ba1551cb290941741126.png" width="1977" height="1226" class="img_ev3q"></p><p>首先是实时运营业务场景，如上图所示，实时运营业务场景的技术架构和前文所述的新版数仓架构基本一致：</p><ul><li><p>数据源：数据源新版架构图中一致，包括 MySQL 中的业务数据，应用系统埋点数据以及设备和终端日志。</p></li><li><p>数据导入：离线数据导入使用 Broker Load，实时数据导入使用 Doris-Spark-Connector 。</p></li><li><p>数据存储与开发：几乎所有的实时数仓全部在 Apache Doris 构建，有一部分离线数据放在 Airflow 上执行 DAG 跑批任务。</p></li><li><p>数据应用：最上层是业务侧提出的业务分析需求，包括大屏展示，数据运营的实时看板、用户画像、BI 看板等。</p></li></ul><p><strong>在实时运营业务场景中，数据分析的需求主要有两方面：</strong></p><ul><li><p>由于实时导入数据量比较大，因此对实时数据的查询效率要求较高</p></li><li><p>在此场景中，有 20+ 人的团队在运营，需要同时开数据运营的看板，因此对实时写入的性能和查询并发会有比较高的要求。</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自助对话式分析场景">自助/对话式分析场景<a class="hash-link" href="#自助对话式分析场景" title="标题的直接链接">​</a></h2><p>除以上之外，Apache Doris 在思必驰第二个应用是自助/对话式分析场景。</p><p><img loading="lazy" alt="ai_chatbots_git" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/ai_chatbots_git-f094d1221b56b522cb93ba3bc766e659.png" width="1953" height="1118" class="img_ev3q"></p><p>如上图所示，在一般的 BI 场景中，用户方比如商务、财务、销售、运营、项目经理等会提出需求给数据分析人员，数据分析人员在 BI 平台上做数据看板，最终把看板提供给用户，用户从 BI 看板上获取所需信息，但是有时候用户想要查看明细数据、定制化的看板需求，或者在某些场景需做任意维度的上卷或者下钻的分析，一般场景下 BI 看板是不支持的的，基于以上所述用户需求，我们打造了自助对话式 BI 场景来解决用户定制化的需求。</p><p>与一般 BI 场景不同的是，我们将自助/对话式 BI 场景从数据分析人员方下沉到用户方，用户方只需要通过打字，描述数据分析的需求。基于我们公司自然语言处理的能力，自助/对话式 BI 场景会将自然语言转换成SQL，类似 NL2SQL 技术，需要说明的是这里使用的是定制的自然语言解析，相对开源的 NL2SQL 命中率高、解析结果更精确。当自然语言转换成 SQL 后，将 SQL 给到 Apache Doris 查询得到分析结果。由此，用户通过打字就可以随时查看任意场景下的明细数据，或者任意字段的上卷、下钻。</p><p>相比 Apache Kylin、Apache Druid 等预计算的 OLAP 引擎，Apache Doris 符合以下几个特点：</p><ul><li><p>查询灵活，模型不固定，支持自由定制场景。</p></li><li><p>支持表关联、聚合计算、明细查询。</p></li><li><p>响应时间要快速。</p></li></ul><p>因此我们很顺利的运用 Apache Doris 实现了自助/对话式分析场景。同时，自助/对话式分析在我们公司多个数据分析场景应用反馈非常好。</p><h1>实践经验</h1><p>基于上面的两个场景，我们使用过程当中积累了一些经验和心得，分享给大家。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数仓-表设计"><strong>数仓</strong> <strong>表设计：</strong><a class="hash-link" href="#数仓-表设计" title="标题的直接链接">​</a></h3><ol><li><p>千万级(量级供参考，跟集群规模有关系)以下的数据表使用 Duplicate 表类型，Duplicate 表类型同时支持聚合、明细查询，不需要额外写明细表。</p></li><li><p>当数据量比较大时，使用 Aggregate 聚合表类型，在聚合表类型上做上卷索引，使用物化视图优化查询、优化聚合字段。由于 Aggregate 表类型是预计算表，会丢失明细数据，如有明细查询需求，需要额外写一张明细表。</p></li><li><p>当数据量又大、关联表又多时，可用 ETL 先写成宽表，然后导入到 Doris，结合 Aggregate 在聚合表类型上面做优化，也可以使用官方推荐Doris 的 Join 优化：<a href="https://doris.apache.org/zh-CN/docs/dev/advanced/join-optimization/doris-join-optimization" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/dev/advanced/join-optimization/doris-join-optimization</a></p></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="写入"><strong>写入：</strong><a class="hash-link" href="#写入" title="标题的直接链接">​</a></h3><ol><li><p>通过 Spark Connector 或 Flink Connector 替代 Routine Load： 最早我们使用的是 Routine Load 实时写入 BE 节点， Routine Load 的工作原理是通过 SQL 在 FE 节点起一个类似于 Task Manager 的管理，把任务分发给 BE 节点，在 BE 节点起 Routine Load 任务。在我们实时场景并发很高的情况下，BE 节点 CPU 峰值一般会达到 70% 左右，在这个前提下，Routine Load 也跑到 BE 节点，将严重影响 BE 节点的查询性能，并且查询 CPU 也将影响 Routine Load 导入， Routine Load 就会因为各种资源竞争死掉。面对此问题，目前解决方法是将 Routine Load 从 BE 节点拿出来放到资源调度上，用 Doris-Spark/Flink-Connector 替换 Routine Load。当时 Doris-spark-Connector 还没有实时写入的功能，我们根据业务需求进行了优化，并将方案贡献给社区。</p></li><li><p>通过攒批来控制实时写入频率：当实时写入频率较高时，小文件堆积过多、查询 IO 升高，小文件排序归并的过程将导致查询时间加长，进而出现查询抖动的情况。当前的解决办法是控制导入频次，调整 Compaction 的合并线程、间隔时间等参数，避免 Tablet 下小文件的堆积。</p></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="查询">查询：<a class="hash-link" href="#查询" title="标题的直接链接">​</a></h3><ol><li><p>增加 SQL 黑名单，控制异常大查询。个别用户在查询时没有加 where 条件，或者查询时选择的时间范围较长，这种情况下 BE 节点的 SQL 会把磁盘的负载和 CPU 拉高，导致其他节点的 SQL 查询变慢，甚至出现 BE 节点宕机的情况。目前的解决方案是使用 SQL 黑名单禁止全表及大量分区实时表的查询。</p></li><li><p>使用 SQL Cache 和 SQL Proxy 实现高并发访问。同时使用 SQL Cache 和 SQL Proxy 的原因在于，SQL Cache的颗粒度到表的分区，如果数据发生变更， SQL Cache 将失效，因此 SQL Cache 缓存适合数据更新频次较低的场景（离线场景、历史分区等）。对于数据需要持续写到最新分区的场景， SQL Cache 则是不适用的。当 SQL Cache 失效时 Query 将全部发送到 Doris 造成重复的 Runtime 计算，而 SQL Proxy 可以设置一秒左右的缓存，可以避免相同条件的重复计算，有效提高集群的并发。</p></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="存储">存储：<a class="hash-link" href="#存储" title="标题的直接链接">​</a></h3><p>使用 SSD 和 HDD 做热温数据存储周期的分离，近一年以内的数据存在 SSD，超过一年的数据存在 HDD。Apache Doris 支持对分区设置冷却时间，但只支持创建表分区时设置冷却的时间，目前的解决方案是设置自动同步逻辑，把历史的一些数据从 SSD 迁移到 HDD，确保 1年内的数据都放在 SSD 上。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="升级">升级：<a class="hash-link" href="#升级" title="标题的直接链接">​</a></h3><p>升级前一定要备份元数据，也可以使用新开集群的方式，通过 Broker 将数据文件备份到 S3 或 HDFS 等远端存储系统中，再通过备份恢复的方式将旧集群数据导入到新集群中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="升级前后性能对比"><strong>升级前后性能对比</strong><a class="hash-link" href="#升级前后性能对比" title="标题的直接链接">​</a></h2><p><img loading="lazy" alt="doris_1_1_performance_test_git" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/doris_1_1_performance_test_git-ad375d6872f12ab1e3cca76d30caa1f6.png" width="1961" height="1126" class="img_ev3q"></p><p>思必驰最早是从 0.12 版本开始使用 Apache Doris 的，在今年我们也完成了从 0.15 版本到最新 1.1 版本的升级操作，并进行了基于真实业务场景和数据的性能测试。</p><p>从以上测试报告中可以看到，总共 13 个测试 SQL 中，前 3 个 SQL 升级前后性能差异不明显，因为这 3 个场景主要是简单的聚合函数，对 Apache Doris 性能要求不高，0.15 版本即可满足需求。而在 Q4 之后的场景中 ，SQL 较为复杂，Group By 有多个字段、多个字段聚合函数以及复杂函数，因此升级新版本后带来的性能提升非常明显，平均查询性能较 0.15 版本提升 2-3 倍。由此，非常推荐大家去升级到 Apache Doris 最新版本。</p><h1>总结和收益</h1><ol><li><p>Apache Doris 支持构建离线+实时统一数仓，一个 ETL 脚本即可支持实时和离线数仓，大大缩短开发周期，降低存储成本，避免了离线和实时指标不一致等问题。</p></li><li><p>Apache Doris 1.1.x 版本开始全面支持向量化计算，较之前版本查询性能提升 2-3 倍。经测试，Apache Doris 1.1.x 版本在宽表场景的查询性能已基本与 ClickHouse 持平。</p></li><li><p>功能强大，不依赖其他组件。相比 Apache Kylin、Apache Druid、ClickHouse 等，Apache Doris 不需要引入第 2 个组件填补技术空档。Apache Doris 支持聚合计算、明细查询、关联查询，当前思必驰超 90% 的分析需求已移步 Apache Doris实现。 得益于此优势，技术人员需要运维的组件减少，极大降低运维成本。</p></li><li><p>易用性极高，支持 MySQL 协议和标准 SQL，大幅降低用户学习成本。</p></li></ol><h1>未来计划</h1><ol><li><p>Tablet 小文件过多的问题。Tablet 是 Apache Doris 中读写数据最小的逻辑单元，当 Tablet 小文件比较多时会产生 2 个问题，一是 Tablet 小文件增多会导致元数据内存压力变大。二是对查询性能的影响，即使是几百兆的查询，但在小文件有几十万、上百万的情况下，一个小小的查询也会导致 IO 非常高。未来，我们将做一个 Tablet 文件数量/大小比值的监控，当比值在不合理范围内时及时进行表设计的修改，使得文件数量和大小的比值在合理的范围内。</p></li><li><p>支持基于 Bitmap 的字符串精确去重。业务中精确去重的场景较多，特别是基于字符串的 UV 场景，目前 Apache Doris 使用的是 Distinct 函数来实现的。未来我们会尝试的在 Apache Doris 中创建字典，基于字典去构建字符串的 Bitmap 索引。</p></li><li><p>Doris-Spark-Connector 流式写入支持分块传输。Doris-Spark-Connector 底层是复用的 Stream Load，工作机制是攒批，容易出现两个问题，一是攒批可能会会出现内存压力导致 OOM，二是当Doris-Spark-Connector 攒批时，Spark Checkpoint 没有提交，但 Buffer 已满并提交给 Doris，此时 Apacche Doris 中已经有数据，但由于没有提交 Checkpoint，假如此时任务恰巧失败，启动后又会重新消费写入一遍。未来我们将优化此问题，实现 Doris-Spark-Connector 流式写入支持分块传输。</p></li></ol>]]></content>
        <author>
            <name>赵伟</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 1.1 Release 版本正式发布]]></title>
        <id>/1.1 Release</id>
        <link href="https://doris.apache.org/zh-CN/blog/1.1 Release"/>
        <updated>2022-07-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>亲爱的社区小伙伴们，我们很高兴地宣布，Apache Doris 在 2022 年 7 月 14 日迎来 1.1 Release 版本的正式发布！这是 Apache Doris 正式从 Apache 孵化器毕业后并成为 Apache 顶级项目后发布的第一个 Release 版本。在 1.1 版本中，有 90 位 Contributor 为 Apache Doris 提交了超过 450 项优化和修复，感谢每一个让 Apache Doris 变得更好的你！</p><p>在 1.1 版本中，<strong>我们实现了计算层和存储层的全面向量化、正式将向量化执行引擎作为稳定功能进行全面启用</strong>，所有查询默认通过向量化执行引擎来执行，<strong>性能较之前版本有 3-5 倍的巨大提升</strong>；增加了直接访问 Apache Iceberg 外部表的能力，支持对 Doris 和 Iceberg 中的数据进行联邦查询，<strong>扩展了 Apache Doris 在数据湖上的分析能力</strong>；在原有的 LZ4 基础上增加了 ZSTD 压缩算法，进一步提升了数据压缩率；<strong>修复了诸多之前版本存在的性能与稳定性问题</strong>，使系统稳定性得到大幅提升。欢迎大家下载使用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="升级说明">升级说明<a class="hash-link" href="#升级说明" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="向量化执行引擎默认开启">向量化执行引擎默认开启<a class="hash-link" href="#向量化执行引擎默认开启" title="标题的直接链接">​</a></h3><p>在 Apache Doris 1.0 版本中，我们引入了向量化执行引擎作为实验性功能。用户需要在执行 SQL 查询手工开启，通过 <code>set batch_size = 4096</code> 和 <code>set enable_vectorized_engine = true </code>配置 session 变量来开启向量化执行引擎。</p><p>在 1.1 版本中，我们正式将向量化执行引擎作为稳定功能进行了全面启用，session 变量<code>enable_vectorized_engine</code> 默认设置为 true，无需用户手工开启，所有查询默认通过向量化执行引擎来执行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="be-二进制文件更名">BE 二进制文件更名<a class="hash-link" href="#be-二进制文件更名" title="标题的直接链接">​</a></h3><p>BE 二进制文件从原有的 palo_be 更名为 doris_be ，如果您以前依赖进程名称进行集群管理和其他操作，请注意修改相关脚本。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="segment-存储格式升级">Segment 存储格式升级<a class="hash-link" href="#segment-存储格式升级" title="标题的直接链接">​</a></h3><p>Apache Doris 早期版本的存储格式为 Segment V1，在 0.12 版本中我们实现了新的存储格式 Segment V2 ，引入了 Bitmap 索引、内存表、Page Cache、字典压缩以及延迟物化等诸多特性。从 0.13 版本开始，新建表的默认存储格式为 Segment V2，与此同时也保留了对 Segment V1 格式的兼容。</p><p>为了保证代码结构的可维护性、降低冗余历史代码带来的额外学习及开发成本，我们决定从下一个版本起不再支持 Segment v1 存储格式，预计在 Apache Doris 1.2 版本中将删除这部分代码，还请所有仍在使用 Segment V1 存储格式的用户务必在 1.1 版本中完成数据格式的转换，操作手册请参考以下链接：</p><p><a href="https://doris.apache.org/zh-CN/docs/1.0/administrator-guide/segment-v2-usage" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/1.0/administrator-guide/segment-v2-usage
</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="正常升级">正常升级<a class="hash-link" href="#正常升级" title="标题的直接链接">​</a></h3><p>正常升级操作请按照官网上的集群升级文档进行滚动升级即可。</p><p><a href="https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重要功能">重要功能<a class="hash-link" href="#重要功能" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持数据随机分布-实验性功能httpsgithubcomapachedorispull8259-8041">支持数据随机分布 <!-- -->[实验性功能][#8259]<!-- -->(<a href="https://github.com/apache/doris/pull/8259" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/pull/8259</a>) <a href="https://github.com/apache/doris/pull/8041" target="_blank" rel="noopener noreferrer">#8041</a><a class="hash-link" href="#支持数据随机分布-实验性功能httpsgithubcomapachedorispull8259-8041" title="标题的直接链接">​</a></h3><p>在某些场景中（例如日志分析类场景），用户可能无法找到一个合适的分桶键来避免数据倾斜，因此需要由系统提供额外的分布方式来解决数据倾斜的问题。</p><p>因此通过在建表时可以不指定具体分桶键，选择使用随机分布对数据进行分桶<code>DISTRIBUTED BY random BUCKET number</code>，数据导入时将会随机写入单个 Tablet ，以减少加载过程中的数据扇出，并减少资源开销、提升系统稳定性。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持创建-iceberg-外部表-实验性功能httpsgithubcomapachedorispull7391-7981-8179">支持创建 Iceberg 外部表 <!-- -->[实验性功能][#7391]<!-- -->(<a href="https://github.com/apache/doris/pull/7391" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/pull/7391</a>) <a href="https://github.com/apache/doris/pull/7981" target="_blank" rel="noopener noreferrer">#7981</a> <a href="https://github.com/apache/doris/pull/8179" target="_blank" rel="noopener noreferrer">#8179</a><a class="hash-link" href="#支持创建-iceberg-外部表-实验性功能httpsgithubcomapachedorispull7391-7981-8179" title="标题的直接链接">​</a></h3><p>Iceberg 外部表为 Apache Doris 提供了直接访问存储在 Iceberg 数据的能力。通过 Iceberg 外部表可以实现对本地存储和 Iceberg 存储的数据进行联邦查询，省去繁琐的数据加载工作、简化数据分析的系统架构，并进行更复杂的分析操作。</p><p>在 1.1 版本中，Apache Doris 支持了创建 Iceberg 外部表并查询数据，并支持通过 REFRESH 命令实现 Iceberg 数据库中所有表 Schema 的自动同步。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="增加-zstd-压缩算法-8923-9747">增加 ZSTD 压缩算法 <a href="https://github.com/apache/doris/pull/8923" target="_blank" rel="noopener noreferrer">#8923</a> <a href="https://github.com/apache/doris/pull/9747" target="_blank" rel="noopener noreferrer">#9747</a><a class="hash-link" href="#增加-zstd-压缩算法-8923-9747" title="标题的直接链接">​</a></h3><p>目前 Apache Doris 中数据压缩方法是系统统一指定的，默认为 LZ4。针对部分对数据存储成本敏感的场景，例如日志类场景，原有的数据压缩率需求无法得到满足。</p><p>在 1.1 版本中，用户建表时可以在表属性中设置<code>"compression"="zstd"</code> 将压缩方法指定为 ZSTD。在 25GB 1.1 亿行的文本日志测试数据中，<strong>最高获得了近 10 倍的压缩率、较原有压缩率提升了 53%，从磁盘读取数据并进行解压缩的速度提升了 30%</strong> 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="功能优化">功能优化<a class="hash-link" href="#功能优化" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="更全面的向量化支持"><strong>更全面的向量化支持</strong><a class="hash-link" href="#更全面的向量化支持" title="标题的直接链接">​</a></h3><p>在 1.1 版本中，我们实现了计算层和存储层的全面向量化，包括：</p><ul><li><p>实现了所有内置函数的向量化</p></li><li><p>存储层实现向量化，并支持了低基数字符串列的字典优化</p></li><li><p>优化并解决了向量化引擎的大量性能和稳定性问题。</p></li></ul><p>我们对 Apache Doris 1.1 版本与 0.15 版本分别在 SSB 和 TPC-H 标准测试数据集上进行了性能测试：</p><ul><li><p>在 SSB 测试数据集的全部 13 个 SQL 上，1.1 版本均优于 0.15 版本，整体性能约提升了 3 倍，解决了 1.0 版本中存在的部分场景性能劣化问题；</p></li><li><p>在 TPC-H 测试数据集的全部 22 个 SQL 上，1.1 版本均优于 0.15 版本，整体性能约提升了 4.5 倍，部分场景性能达到了十余倍的提升；</p></li></ul><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/edb59781b0f74ff08821467f23a63bad~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p align="center">SSB 测试数据集</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e34377054f4448b3b367789a391f2122~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p align="center">TPC-H 测试数据集</p><p><strong>性能测试报告：</strong></p><p><a href="https://doris.apache.org/zh-CN/docs/benchmark/ssb" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/benchmark/ssb</a></p><p><a href="https://doris.apache.org/zh-CN/docs/benchmark/tpch" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/benchmark/tpch</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="compaction-逻辑优化与实时性保证-10153">Compaction 逻辑优化与实时性保证 <a href="https://github.com/apache/doris/pull/10153" target="_blank" rel="noopener noreferrer">#10153</a><a class="hash-link" href="#compaction-逻辑优化与实时性保证-10153" title="标题的直接链接">​</a></h3><p>在 Apache Doris 中每次 Commit 都会产生一个数据版本，在高并发写入场景下，容易出现因数据版本过多且 Compaction 不及时而导致的 -235 错误，同时查询性能也会随之下降。</p><p>在 1.1 版本中我们引入了 QuickCompaction，增加了主动触发式的 Compaction 检查，在数据版本增加的时候主动触发 Compaction，同时通过提升分片元信息扫描的能力，快速发现数据版本过多的分片并触发 Compaction。通过主动式触发加被动式扫描的方式，彻底解决数据合并的实时性问题。</p><p>同时，针对高频的小文件 Cumulative Compaction，实现了 Compaction 任务的调度隔离，防止重量级的 Base Compaction 对新增数据的合并造成影响。</p><p>最后，针对小文件合并，优化了小文件合并的策略，采用梯度合并的方式，每次参与合并的文件都属于同一个数据量级，防止大小差别很大的版本进行合并，逐渐有层次的合并，减少单个文件参与合并的次数，能够大幅地节省系统的 CPU 消耗。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6d5c50f16a048f3ab27357bc97b7461~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>在数据上游维持每秒 10w 的写入频率时（20 个并发写入任务、每个作业 5000 行、 Checkpoint 间隔 1s），1.1 版本表现如下：</p><ul><li>数据快速合并：Tablet 数据版本维持在 50 以下，Compaction Score 稳定。相较于之前版本高并发写入时频繁出现的 -235 问题，<strong>Compaction 合并效率有 10 倍以上的提升</strong>。</li></ul><ul><li>CPU 资源消耗显著降低：针对小文件 Compaction 进行了策略优化，在上述高并发写入场景下，<strong>CPU 资源消耗降低 25%</strong> ；</li></ul><ul><li>查询耗时稳定：提升了数据整体有序性，大幅降低查询耗时的波动性，<strong>高并发写入时的查询耗时与仅查询时持平</strong>，查询性能较之前版本<strong>有 3-4 倍提升</strong>。</li></ul><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c79ee9efba0416d81cc7bed1a349fdf~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="parquet-和-orc-文件的读取效率优化-9472">Parquet 和 ORC 文件的读取效率优化 <a href="https://github.com/apache/doris/pull/9472" target="_blank" rel="noopener noreferrer">#9472</a><a class="hash-link" href="#parquet-和-orc-文件的读取效率优化-9472" title="标题的直接链接">​</a></h3><p>通过调整 Arrow 参数，利用 Arrow 的多线程读取能力来加速 Arrow 对每个 row_group 的读取，并修改成 SPSC 模型，通过预取来降低等待网络的代价。优化前后对 Parquet 文件导入的性能有 4 ～ 5 倍的提升。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="更安全的元数据-checkpoint-9180-9192">更安全的元数据 Checkpoint <a href="https://github.com/apache/doris/pull/9180" target="_blank" rel="noopener noreferrer">#9180</a> <a href="https://github.com/apache/doris/pull/9192" target="_blank" rel="noopener noreferrer">#9192</a><a class="hash-link" href="#更安全的元数据-checkpoint-9180-9192" title="标题的直接链接">​</a></h3><p>通过对元数据检查点后生成的 image 文件进行双重检查和保留历史 image 文件的功能，解决了 image 文件错误导致的元数据损坏问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-修复">Bug 修复<a class="hash-link" href="#bug-修复" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复由于缺少数据版本而无法查询数据的问题严重9267-9266">修复由于缺少数据版本而无法查询数据的问题。（严重）<a href="https://github.com/apache/doris/pull/9267" target="_blank" rel="noopener noreferrer">#9267</a> <a href="https://github.com/apache/doris/pull/9266" target="_blank" rel="noopener noreferrer">#9266</a><a class="hash-link" href="#修复由于缺少数据版本而无法查询数据的问题严重9267-9266" title="标题的直接链接">​</a></h3><p>问题描述：<code>failed to initialize storage reader. tablet=924991.xxxx, res=-214, backend=xxxx</code></p><p>该问题是在版本 1.0 中引入的，可能会导致多个副本的数据版本丢失。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决了资源隔离对加载任务的资源使用限制无效的问题中等9492">解决了资源隔离对加载任务的资源使用限制无效的问题（中等）<a href="https://github.com/apache/doris/pull/9492" target="_blank" rel="noopener noreferrer">#9492</a><a class="hash-link" href="#解决了资源隔离对加载任务的资源使用限制无效的问题中等9492" title="标题的直接链接">​</a></h3><p>在 1.1 版本中， Broker Load 和 Routine Load 将使用具有指定资源标记的 BE 节点进行加载。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复使用-http-brpc-超过-2gb-传输网络数据包导致数据传输错误的问题中等9770">修复使用 HTTP BRPC 超过 2GB 传输网络数据包导致数据传输错误的问题（中等）<a href="https://github.com/apache/doris/pull/9770" target="_blank" rel="noopener noreferrer">#9770</a><a class="hash-link" href="#修复使用-http-brpc-超过-2gb-传输网络数据包导致数据传输错误的问题中等9770" title="标题的直接链接">​</a></h3><p>在以前的版本中，当通过 BRPC 在后端之间传输的数据超过 2GB 时，可能会导致数据传输错误。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="禁用-mini-load">禁用 Mini Load<a class="hash-link" href="#禁用-mini-load" title="标题的直接链接">​</a></h3><p>Mini Load 与 Stream Load 的导入实现方式完全一致，都是通过 HTTP 协议提交和传输数据，在导入功能支持上 Stream Load 更加完备。</p><p>在 1.1 版本中，默认情况下 Mini Load 接口 <code>/_load</code> 将处于禁用状态，请统一使用 Stream Load 来替换 Mini Load。您也可以通过关闭 FE 配置项 <code>disable_mini_load</code> 来重新启用 Mini Load 接口。在版本 1.2 中，将彻底删除 Mini Load 。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="完全禁用-segmentv1-存储格式">完全禁用 SegmentV1 存储格式<a class="hash-link" href="#完全禁用-segmentv1-存储格式" title="标题的直接链接">​</a></h3><p>在 1.1 版本中将不再允许新创建 SegmentV1 存储格式的数据，现有数据仍可以继续正常访问。</p><p>您可以使用 ADMIN SHOW TABLET STORAGE FORMAT 语句检查集群中是否仍然存在 SegmentV1 格式的数据，如果存在请务必通过数据转换命令转换为 SegmentV2。</p><p>在 Apache Doris 1.2 版本中不再支持对 Segment V1 数据的访问，同时 Segment V1 代码将被彻底删除。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="限制-string-类型的最大长度-8567">限制 String 类型的最大长度 <a href="https://github.com/apache/doris/pull/8567" target="_blank" rel="noopener noreferrer">#8567</a><a class="hash-link" href="#限制-string-类型的最大长度-8567" title="标题的直接链接">​</a></h3><p>String 类型是 Apache Doris 在 0.15 版本中引入的新数据类型，在过去 String 类型的最大长度允许为 2GB。</p><p>在 1.1 版本中，我们将 String 类型的最大长度限制为 1 MB，超过此长度的字符串无法再写入，同时不再支持将 String 类型用作表的 Key 列、分区列以及分桶列。</p><p>已写入的字符串类型可以正常访问。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复-fastjson-相关漏洞-9763">修复 fastjson 相关漏洞 <a href="https://github.com/apache/doris/pull/9763" target="_blank" rel="noopener noreferrer">#9763</a><a class="hash-link" href="#修复-fastjson-相关漏洞-9763" title="标题的直接链接">​</a></h3><p>对 Canal 版本进行更新以修复 fastjson 安全漏洞</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="添加了-admin-diagnose-tablet-命令-8839">添加了 ADMIN DIAGNOSE TABLET 命令 <a href="https://github.com/apache/doris/pull/8839" target="_blank" rel="noopener noreferrer">#8839</a><a class="hash-link" href="#添加了-admin-diagnose-tablet-命令-8839" title="标题的直接链接">​</a></h3><p>通过 ADMIN DIAGNOSE TABLET tablet_id 命令可以快速诊断指定 Tablet 的问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="下载使用">下载使用<a class="hash-link" href="#下载使用" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="下载链接">下载链接<a class="hash-link" href="#下载链接" title="标题的直接链接">​</a></h3><p><a href="https://doris.apache.org/zh-CN/download" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/download</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="升级说明-1">升级说明<a class="hash-link" href="#升级说明-1" title="标题的直接链接">​</a></h3><p>您可以从 Apache Doris 1.0 Release 版本和 1.0.x 发行版本升级到 1.1 Release 版本，升级过程请官网参考文档。如果您当前是 0.15 Release 版本或 0.15.x 发行版本，可跳过 1.0 版本直接升级至 1.1。</p><p>[https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade]<!-- -->(<a href="https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="意见反馈">意见反馈<a class="hash-link" href="#意见反馈" title="标题的直接链接">​</a></h3><p>如果您遇到任何使用上的问题，欢迎随时通过 GitHub Discussion 论坛或者 Dev 邮件组与我们取得联系。</p><p>GitHub 论坛：<a href="https://github.com/apache/incubator-doris/discussions" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-doris/discussions</a></p><p>Dev 邮件组：<a href="/zh-CN/blog/dev@doris.apache.org">dev@doris.apache.org</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="致谢">致谢<a class="hash-link" href="#致谢" title="标题的直接链接">​</a></h2><p>Apache Doris 1.1 Release 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@adonis0147</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@airborne12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@amosbird</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@aopangzi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@arthuryangcs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@awakeljw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BePPPower</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BiteTheDDDDt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@bridgeDream</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caiconghui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@cambyzju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ccoffline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chenlinzhong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@daikon12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@DarvenDuan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataalive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataroaring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@deardeng</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Doris-Extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@emerkfu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@EmmyMiao87</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@englefly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gabriel39</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@GoGoWen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gtchaos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@HappenLee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hello-stephen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Henry2SS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hewei-nju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hf200012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jacktengg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jackwener</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Jibing-Li</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@JNSimba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@kangshisen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Kikyou1997</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@kylinmac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Lchangliang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@leo65535</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liaoxin01</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liutang123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lovingfeel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luozenglin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luwei16</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luzhijing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mklzl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morrySnow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@nextdreamblue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Nivane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pengxiangyu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qidaye</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qzsee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SaintBacchus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SleepyBear96</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@smallhibiscus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@spaces-X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@stalary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@starocean999</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@steadyBoy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SWJTU-ZhangLei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Tanya-W</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tarepanda1024</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tianhui5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Userwhite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangbo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangyf0555</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weizuo93</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@whutpencil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wsjz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wunan1210</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinyiZzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xlwh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xy720</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yangzhg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Yankee24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yiguolei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yinzhijian</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yixiutt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zbtzbtzbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zenoyang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangstar333</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangyifan27</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhannngchen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshengjun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshiJ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zingdle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zuochunwei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zy-kkk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[开源实时分析型数据库 Apache Doris 正式成为顶级项目]]></title>
        <id>/Annoucing</id>
        <link href="https://doris.apache.org/zh-CN/blog/Annoucing"/>
        <updated>2022-06-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>Apache Doris 是一个基于 MPP 的现代化、高性能、实时的分析型数据库，以极速易用的特点被人们所熟知，仅需亚秒级响应时间即可返回海量数据下的查询结果，不仅可以支持高并发的点查询场景，也能支持高吞吐的复杂分析场景。基于此，Apache Doris 在多维报表、用户画像、即席查询、实时大屏等诸多业务领域都能得到很好应用。</p><p>Apache Doris 最早是诞生于百度内部广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年 7 月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。</p><p>我们很自豪 Doris 能够顺利从 Apache 孵化器毕业，这是一个重要的里程碑。在整个孵化阶段，依靠 Apache 理念的指导和孵化器导师的帮助，我们学会了如何以 Apache 的方式去发展我们的项目与社区，也在这一进程中获得了巨大的成长。</p><p>目前 Apache Doris 社区已经聚集了来自不同行业近百家企业的 300 余位贡献者，并且每月活跃贡献者人数也接近 100 位。在孵化期间，Apache Doris 一共发布了 8 个重要版本，完成了包括存储引擎升级、向量化执行引擎等诸多重大功能，并正式发布了 1.0 版本。正是依靠这些来自开源贡献者的力量，才使得 Apache Doris 取得了今天的成绩。</p><p>与此同时，Apache Doris 如今在中国乃至全球范围内都拥有着极为广泛的用户群体，截止目前， Apache Doris 已经在全球超过 500 家企业的生产环境中得到应用，在中国市值或估值排行前 50 的互联网公司中，有超过 80% 长期使用 Apache Doris，包括百度、美团、小米、京东、字节跳动、腾讯、快手、网易、微博、新浪、360 等知名公司。同时在一些传统行业如金融、能源、制造、电信等领域也有着丰富的应用。</p><p>你可以基于 Apache Doris 快速构建一个简单易用并且性能强大的数据分析平台，非常易于上手，所需要付出的学习成本非常低。并且 Apache Doris 的分布式架构非常简洁，可以极大降低系统运维的工作量，这也是越来越多用户选择 Apache Doris 的关键因素。</p><p>作为一款成熟的分析型数据库项目，Apache Doris 有以下优势：</p><ul><li><p>性能优异：自带高效的列式存储引擎，减少数据扫描量的同时还实现了超高的数据压缩比。同时 Doris 还提供了丰富的索引结构来加速数据读取与过滤，利用分区分桶裁剪功能，Doris 可以支持在线服务业务的超高并发，单节点最高可支持上千 QPS。更进一步，Apache Doris 结合了向量化执行引擎来充分发挥现代化 CPU 并行计算能力，辅以智能物化视图技术实现预聚合加速，并可以通过查询优化器同时进行基于规划和基于代价的查询优化。通过上述多种方式，实现了极致的查询性能。</p></li><li><p>简单易用：支持标准 ANSI SQL 语法，包括单表聚合、排序、过滤和多表 Join、子查询等，还支持窗口函数、Grouping Set 等复杂 SQL 语法，同时用户可以通过 UDF 和 UDAF 等自定义函数来拓展系统功能。除此以外，Apache Doris 还实现了 MySQL 协议兼容，用户可以通过各类客户端工具来访问 Doris，并支持与 BI 工具的无缝对接。</p></li><li><p>架构精简：系统只有两个 Frontend（FE）和 Backend（BE）两个模块，其中 FE 节点负责用户请求的接入、查询计划的解析、元数据存储及集群管理等工作，BE 节点负责数据存储和查询计划的执行，自身就是一个完备的分布式数据库管理系统，用户无需安装任何第三方管控组件即可运行起 Apache Doris 集群，并且部署和升级过程都非常简易。同时，任一模块都可以支持横向拓展，集群最高可以拓展到数百个节点，支持存储超过 10PB 的超大规模数据。</p></li><li><p>稳定可靠：支持数据多副本存储，集群具备自愈功能，自身的分布式管理框架可以自动管理数据副本的分布、修复和均衡，副本损坏时系统可以自动感知并进行修复。节点扩容时，仅需一条 SQL 命令即可完成，数据分片会自动在节点间均衡，无需人工干预或操作。无论是扩容、缩容、单节点故障还是在升级过程中，系统都无需停止运行，可正常提供稳定可靠的在线服务。</p></li><li><p>生态丰富：提供丰富的数据同步方式，支持快速加载来自本地、Hadoop、Flink、Spark、Kafka、SeaTunnel 等系统中的数据，也可以直接访问 MySQL、PostgreSQL、Oracle、S3、Hive、Iceberg、Elasticsearch 等系统中的数据而无需数据复制。同时存储在 Doris 中的数据也可以被 Spark、Flink 读取，并且可以输出给上游数据应用进行展示分析。</p></li></ul><p>毕业不是最终目标，它是新征程的起点。在过去，我们发起 Doris 的目标是为更多人提供体验更佳的数据分析工具、解决他们数据分析的难题。成为 Apache 顶级项目一方面是对 Apache Doris 社区过去所有贡献者一直以来辛勤工作的肯定，另一方面也意味着我们在 Apache Way 的指引下建立了一个强大的、繁荣的、可持续发展的开源社区。未来我们将会继续以 Apache 方式运作社区，相信会吸引到更多优秀的开源贡献者参与社区中来，社区也会在所有贡献者的帮助下得到进一步成长。</p><p>Apache Doris 后续将开展更多富有挑战且有意义的工作，包括新的查询优化器、对湖仓一体化的支持，以及面向云上基础设施的架构演进等等。欢迎更多的开源技术爱好者加入 Apache Doris 的社区，携手共成长。</p><p>我们再次由衷地感谢所有参与建设 Apache Doris 社区的贡献者们，以及所有使用 Apache Doris 并不断提出改进建议的用户们。同时也感谢一路走来，不断鼓励、支持和帮助过我们的孵化器导师、IPMC 成员以及各个开源项目社区的朋友们。</p><p><strong>Apache Doris GitHub：</strong></p><p><a href="https://github.com/apache/doris" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris</a></p><p><strong>Apache Doris website:</strong></p><p><a href="http://doris.apache.org" target="_blank" rel="noopener noreferrer">http://doris.apache.org</a></p><p><strong>Please contact us via:</strong></p><p><a href="/zh-CN/blog/dev@doris.apache.org.">dev@doris.apache.org.</a></p><p><strong>See How to subscribe:</strong></p><p><a href="https://doris.apache.org/zh-CN/community/subscribe-mail-list/" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/community/subscribe-mail-list</a></p>]]></content>
        <author>
            <name>陈明雨</name>
        </author>
        <category label="重大新闻" term="重大新闻"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris(Incubating) 1.0.0 Release]]></title>
        <id>/release-note-1.0.0</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-note-1.0.0"/>
        <updated>2022-04-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>Apache Doris(Incubating) 1.0.0 Release</h1><p>亲爱的社区小伙伴们，历时数月，我们很高兴地宣布，Apache Doris (incubating) 于 2022 年 4 月 18 日迎来了 1.0 Release 版本的正式发布！<strong>这是 Apache Doris 在进入 Apache 基金会孵化以来的第一个 1 位版本，也是迄今为止对 Apache Doris 核心代码重构幅度最大的一个版本<!-- -->*<!-- -->*</strong>！<strong>有 </strong>114 位 Contributor<strong> 为 Apache Doris 提交了</strong>超过 660 项优化和修复<!-- -->*<!-- -->*<!-- -->，感谢每一个让 Apache Doris 变得更好的你！</p><p>在 1.0 版本中，我们引入了向量化执行引擎、Hive 外部表、Lateral View 语法及 Table Function 表函数、Z-Order 数据索引、Apache SeaTunnel 插件等重要功能，增加了对 Flink CDC 同步更新和删除数据的支持，优化了诸多数据导入和查询过程中的问题，对 Apache Doris 的查询性能、易用性、稳定性等多方特效进行了全面加强，欢迎大家下载使用！点击文末“<strong>阅读原文</strong>”即可直接前往下载地址。</p><p>每一个不曾发版的日子，背后都有无数贡献者枕戈待旦，不敢停歇半分。在此我们尤其要感谢来自<strong>向量化执行引擎、查询优化器、可视化运维平台 等 SIG （专项兴趣小组）的小伙伴</strong>。自 2021 年 8 月 Apache Doris 社区 SIG 小组成立以来，<strong>来自百度、美团、小米、京东、蜀海、字节跳动、腾讯、网易、阿里巴巴、PingCAP、Nebula Graph 等十余家公司的数十名贡献者</strong>作为首批成员加入到 SIG 中，第一次以专项小组的开源协作形式完成了向量化执行引擎、查询优化器、 Doris Manager 可视化监控运维平台等如此重大功能的开发，<strong>历时半年以上、开展技术调研和分享数十次、召开远程会议近百次、累计提交 Commits 多达数百个、涉及代码行数高达十余万行</strong>，正是因为有他们的贡献，才有 1.0 版本的问世，让我们再次对他们的辛勤付出表示最真诚的感谢！</p><p>与此同时，Apache Doris 的贡献者数量已超过 300 人，每月活跃的贡献者数量超过了 60 人，近几周平均每周提交的 Commits 数量也超过 80，社区聚集的开发者规模及活跃度已经有了极大的提升。我们十分期待有更多的小伙伴参与社区贡献中来，与我们一道把 Apache Doris 打造成全球顶级的分析型数据库，也期待所有小伙伴可以与我们一起收获宝贵的成长。如果你想参与社区，欢迎通过开发者邮箱 <a href="mailto:dev@doris.apache.org" target="_blank" rel="noopener noreferrer">dev@doris.apache.org</a> 与我们取得联系。</p><p>我们欢迎大家在使用过程中，有任何问题通过 GitHub Discussion 或者 Dev 邮件组与我们取得联系，也期待大家参与社区讨论和建设中 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重要更新">重要更新<a class="hash-link" href="#重要更新" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="向量化执行引擎-experimental">向量化执行引擎 <!-- -->[Experimental]<a class="hash-link" href="#向量化执行引擎-experimental" title="标题的直接链接">​</a></h3><p>过去 Apache Doris 的 SQL 执行引擎是基于行式内存格式以及基于传统的火山模型进行设计的，在进行 SQL 算子与函数运算时存在非必要的开销，导致 Apache Doris 执行引擎的效率受限，并不适应现代 CPU 的体系结构。向量化执行引擎的目标是替换 Apache Doris 当前的行式 SQL 执行引擎，充分释放现代 CPU 的计算能力，突破在 SQL 执行引擎上的性能限制，发挥出极致的性能表现。</p><p>基于现代 CPU 的特点与火山模型的执行特点，向量化执行引擎重新设计了在列式存储系统的 SQL 执行引擎：</p><ul><li>重新组织内存的数据结构，用 Column 替换 Tuple，提高了计算时 Cache 亲和度，分支预测与预取内存的友好度</li><li>分批进行类型判断，在本次批次中都使用类型判断时确定的类型，将每一行类型判断的虚函数开销分摊到批量级别。</li><li>通过批级别的类型判断，消除了虚函数的调用，让编译器有函数内联以及 SIMD 优化的机会</li></ul><p>从而大大提高了 CPU 在 SQL 执行时的效率，提升了 SQL 查询的性能。</p><p>在 Apache Doris 1.0 版本中，通过 set batch_size = 4096 和 set enable_vectorized_engine = true 开启向量化执行引擎，多数情况下可显著提升查询性能。在 SSB 和 OnTime 标准测试数据集下，多表关联和宽列查询两大场景的整体性能分别有 3 倍和 2.6 倍的提升。</p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/1.0.0-1-e7888e124fefa8bd38215dd9d4be4794.png" width="1080" height="697" class="img_ev3q"></p><p><img loading="lazy" src="https://cdn-tencent.selectdb.com/zh-CN/assets/images/1.0.0-2-d9e8be01f5ff99dd6e15fc33af4518fc.png" width="1080" height="819" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lateral-view-语法-experimental">Lateral View 语法 <!-- -->[Experimental]<a class="hash-link" href="#lateral-view-语法-experimental" title="标题的直接链接">​</a></h3><p>通过 Lateral View 语法，我们可以使用 explod_bitmap 、explode_split、explode_jaon_array 等 Table Function 表函数，将 bitmap、String 或 Json Array 由一列展开成多行，以便后续可以对展开的数据进行进一步处理（如 Filter、Join 等）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="hive-外表-experimental">Hive 外表 <!-- -->[Experimental]<a class="hash-link" href="#hive-外表-experimental" title="标题的直接链接">​</a></h3><p>Hive External Table 为用户提供了通过 Doris 直接访问 Hive 表的能力，外部表省去了 繁琐的数据导入工作，可以借助 Doris 本身 OLAP 的能力来解决 Hive 表的数据分析问题。当前版本支持将 Hive 数据源接入 Doris，并支持通过 Doris 与 Hive 数据源中的数据进行联邦查询，进行更加复杂的分析操作。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持-z-order-数据排序格式">支持 Z-Order 数据排序格式<a class="hash-link" href="#支持-z-order-数据排序格式" title="标题的直接链接">​</a></h3><p>Apache Doris 数据是按照前缀列排序存储的，因此在包含前缀查询条件时，可以在排序数据上进行快速的数据查找，但如果查询条件不是前缀列，则无法利用数据排序的特征进行快速数据查找。通过 Z-Order Indexing 可以解决上述问题，在 1.0 版本中我们增加了 Z-Order 数据排序格式，在看板类多列查询的场景中可以起到很好过滤效果，加速对非前缀列条件的过滤性能。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持-apache-seatunnelincubating插件">支持 Apache SeaTunnel（Incubating）插件<a class="hash-link" href="#支持-apache-seatunnelincubating插件" title="标题的直接链接">​</a></h3><p>Apache SeaTunnel 是一个高性能的分布式数据集成框架，架构于 Apache Spark 和 Apache Flink 之上。在 Apache Doris 1.0 版本中，我们增加了 SaeTunnel 插件，用户可以借助 Apache SeaTunnel 进行多数据源之间的同步和 ETL。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新增函数">新增函数<a class="hash-link" href="#新增函数" title="标题的直接链接">​</a></h3><p>支持更多 bitmap 函数，具体可查看函数手册：</p><ul><li>bitmap_max</li><li>bitmap_and_not</li><li>bitmap_and_not_count</li><li>bitmap_has_all</li><li>bitmap_and_count</li><li>bitmap_or_count</li><li>bitmap_xor_count</li><li>bitmap_subset_limit</li><li>sub_bitmap</li></ul><p>支持国密算法 SM3/SM4；</p><blockquote><p><strong>注意</strong>：以上标记 <!-- -->[Experimental]<!-- --> 的功能为实验性功能，我们将会在后续版本中对以上功能进行持续优化和迭代，并后续版本中进一步完善。在使用过程中有任何问题或意见，欢迎随时与我们联系</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="重要优化">重要优化<a class="hash-link" href="#重要优化" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="功能优化">功能优化<a class="hash-link" href="#功能优化" title="标题的直接链接">​</a></h3><ul><li>降低大批量导入时，生成的 Segment 文件数量，以降低 Compaction 压力。</li><li>通过 BRPC 的 attachment 功能传输数据，以查询过程中的降低序列化和反序列化开销。</li><li>支持直接返回 HLL/BITMAP 类型的二进制数据，用于业务在外侧解析。</li><li>优化并降低 BRPC 出现 OVERCROWDED 和 NOT_CONNECTED 错误的概率，增强系统稳定性。</li><li>增强导入的容错性。</li><li>支持通过 Flink CDC 同步更新和删除数据。</li><li>支持自适应的 Runtime Filter。</li><li>显著降低 insert into 操作的内存占用</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="易用性改进">易用性改进<a class="hash-link" href="#易用性改进" title="标题的直接链接">​</a></h3><ul><li>Routine Load 支持显示当前 offset 延迟数量等状态。</li><li>FE audit log 中增加查询峰值内存使用量的统计。</li><li>Compaction URL 结果中增加缺失版本的信息，方便排查问题。</li><li>支持将 BE 标记为不可查询或不可导入，以快速屏蔽问题节点。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="重要-bug-修复">重要 Bug 修复<a class="hash-link" href="#重要-bug-修复" title="标题的直接链接">​</a></h3><ul><li>修复若干查询错误问题。</li><li>修复 Broker Load 若干调度逻辑问题。</li><li>修复 STREAM 关键词导致元数据无法加载的问题。</li><li>修复 Decommission 无法正确执行的问题。</li><li>修复部分情况下操作 Schema Change 操作可能出现 -102 错误的问题。</li><li>修复部分情况下使用 String 类型可能导致 BE 宕机的问题。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h3><ul><li>增加 Minidump 功能；</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="更新日志">更新日志<a class="hash-link" href="#更新日志" title="标题的直接链接">​</a></h2><p>详细 Release Note 请查看链接：</p><p><a href="https://github.com/apache/incubator-doris/issues/8549" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-doris/issues/8549</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="致谢">致谢<a class="hash-link" href="#致谢" title="标题的直接链接">​</a></h2><p>Apache Doris(incubating) 1.0 Release 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@924060929</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@adonis0147</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Aiden-Dong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@aihai</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@airborne12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Alibaba-HZY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@amosbird</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@arthuryangcs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@awakeljw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@bingzxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BiteTheDDDDt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@blackstar-baba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caiconghui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@CalvinKirs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@cambyzju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caoliang-web</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ccoffline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chaplinthink</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chovy-3012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ChPi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@DarvenDuan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataalive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataroaring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dh-cloud</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dohongdayi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dongweizhao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@drgnchan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@e0c9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@EmmyMiao87</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@englefly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@eyesmoons</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@freemandealer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gabriel39</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gaodayue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@GoGoWen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gongruixiao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gwdgithubnom</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@HappenLee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Henry2SS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hf200012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@htyoung</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jacktengg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jackwener</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@JNSimba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Keysluomo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@kezhenxu94</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@killxdcj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lihuigang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@littleeleventhwolf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liutang123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liuzhuang2017</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lonre</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lovingfeel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luozenglin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luzhijing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@MeiontheTop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mh-boy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mrhhsg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Myasuka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@nimuyuhan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@obobj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pengxiangyu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qidaye</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qzsee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@renzhimin7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Royce33</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SleepyBear96</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@smallhibiscus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@sodamnsure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@spaces-X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@sparklezzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@stalary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@steadyBoy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tarepanda1024</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@THUMarkLau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tianhui5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tinkerrrr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ucasfl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Userwhite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@vinson0526</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangbo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangshuo128</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangyf0555</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weajun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weizuo93</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@whutpencil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@WindyGao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wunan1210</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokangguo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiedeyantu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinghuayu007</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xingtanzjr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinyiZzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xtr1993</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xu20160924</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xuliuzhe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xuzifu666</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xy720</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yangzhg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yiguolei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yinzhijian</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yjant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zbtzbtzbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zenoyang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zh0122</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangstar333</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhannngchen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshengjun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshiJ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ZhikaiZuo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ztgoto</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zuochunwei</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris(Incubating) 0.15.0 Release]]></title>
        <id>/release-note-0.15.0</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-note-0.15.0"/>
        <updated>2021-11-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>Apache Doris(Incubating) 0.15.0 Release</h1><p>亲爱的社区小伙伴们，历时数个月精心打磨，我们很高兴地宣布， Apache Doris(incubating) 于 2021 年 11 月 29 日迎来了 0.15.0 Release 版本的正式发布！有 99 位 Contributor 为 Apache Doris 提交了近 700 项优化和修复，在此我们也对所有贡献者表示最真诚的感激！</p><p>在 0.15.0 Release 版本中，我们增加了诸多新功能，对 Apache Doris 的查询性能、易用性、稳定性方面等进行了全面优化：新增资源划分和隔离功能，用户可以通过资源标签的方式将集群中的 BE 节点划分为资源组，实现对在线、离线业务的统一管理和资源隔离；增加了 Runtime Filter 及 Join Reorder 功能，对多表 Join 场景的查询效率进行了大幅提升，在 Star Schema Benchmark 测试数据集下有 2-10 倍的性能提升；新增导入方式 Binlog Load ，使 Doris 可以增量同步 MySQL 中对数据更新操作的 CDC ；支持 String 列类型，长度最大支持 2GB ；支持 List 分区功能，可以通过枚举值创建分区；支持 Unique Key 模型上的 Update 语句；Spark-Doris-Connector 支持数据写入 Doris ……还有更多重要特性，欢迎大家下载使用。</p><p>我们欢迎大家在使用过程中，有任何问题通过 GitHub Discussion 或者 Dev 邮件组与我们取得联系，也期待大家参与社区讨论和建设中 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重要更新">重要更新<a class="hash-link" href="#重要更新" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="资源划分与隔离">资源划分与隔离<a class="hash-link" href="#资源划分与隔离" title="标题的直接链接">​</a></h3><p>用户可以通过资源标签的方式将一个 Doris 集群中的 BE 节点划分成多个资源组，从而可以进行在线、离线业务的统一管理和节点级别的资源隔离。
同时，还可以通过限制单个查询任务的 CPU、内存开销以及复杂度，来控制单个查询的资源开销，从而降低不同查询之间的资源抢占问题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="性能优化">性能优化<a class="hash-link" href="#性能优化" title="标题的直接链接">​</a></h3><ul><li><p>Runtime Filter 功能通过使用 Join 算子中右表的 Join Key 列条件来过滤左表的数据，在大部分 Join 场景下可以显著提升查询效率。如在 Star Schema Benchmark ( TPCH 的精简测试集) 下可以获得 2-10 倍的性能提升。</p></li><li><p>Join Reorder 功能可以通过通过代价模型自动帮助调整 SQL 中 Join 的顺序，以帮助获得最优的 Join 效率。
可通过会话变量  <code>set enable_cost_based_join_reorder=true</code>  开启。</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新增功能">新增功能<a class="hash-link" href="#新增功能" title="标题的直接链接">​</a></h3><ul><li>支持直接对接 Canal Server 同步 MySQL binlog 数据。</li><li>支持 String 列类型，最大支持 2GB 。</li><li>支持 List 分区功能，可以针对枚举值创建分区。</li><li>支持事务性 Insert 语句功能。可以通过 begin ; insert ; insert; ,... ; commit ; 的方式批量导入数据。</li><li>支持在 Unique Key 模型上的 Update 语句功能。可以在 Unique Key 模型表上执行 Update Set where 语句。</li><li>支持 SQL 阻塞名单功能。可以通过正则、Hash 值匹配等方式阻止部分 SQL 的执行。</li><li>支持 LDAP 登陆验证。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="拓展功能">拓展功能<a class="hash-link" href="#拓展功能" title="标题的直接链接">​</a></h3><ul><li>支持 Flink-Doris-Connector 。</li><li>支持 DataX doriswriter 插件。</li><li>Spark-Doris-Connector 支持数据写入 Doris 。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="功能优化">功能优化<a class="hash-link" href="#功能优化" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="查询">查询<a class="hash-link" href="#查询" title="标题的直接链接">​</a></h3><ul><li>支持在 SQL 查询规划阶段，利用 BE 的函数计算能力计算所有常量表达式。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="导入">导入<a class="hash-link" href="#导入" title="标题的直接链接">​</a></h3><ul><li>支持导入文本格式文件时，指定多字节行列分隔符或不可见分隔符。</li><li>支持通过 Stream Load 导入压缩格式文件。</li><li>Stream Load支持导入多行格式的 Json 数据。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="导出">导出<a class="hash-link" href="#导出" title="标题的直接链接">​</a></h3><ul><li>支持 Export 导出功能指定 where 过滤条件。支持导出文件使用多字节行列分隔符。支持导出到本地文件。</li><li>Export 导出功能支持仅导出指定的列。</li><li>支持通过 outfile 语句导出结果集到本地磁盘，并支持导出后写入导出成功的标记文件。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="易用性">易用性<a class="hash-link" href="#易用性" title="标题的直接链接">​</a></h3><ul><li>动态分区功能支持创建、保留指定的历史分区、支持自动冷热数据迁移设置。</li><li>支持在命令行使用可视化的树形结构展示查询、导入的计划和 Profile。</li><li>支持记录并查看 Stream Load 操作日志。</li><li>通过 Routine Load 消费 Kafka 数据时，可以指定时间点进行消费。</li><li>支持通过 show create routine load 功能导出 Routine Load 的创建语句。</li><li>支持通过 pause/resume all routine load 命令一键启停所有 Routine Load Job。</li><li>支持通过 alter routine load 语句修改 Routine Load 的 Broker List 和 Topic。</li><li>支持 create table as select 功能。</li><li>支持通过 alter table 命令修改列注释和表注释。</li><li>show tablet status 增加表创建时间、数据更新时间。</li><li>支持通过 show data skew 命令查看表的数据量分布，以排查数据倾斜问题。</li><li>支持通过 show/clean trash 命令查看 BE 文件回收站的磁盘占用情况并主动清除。</li><li>支持通过 show view 语句展示一个表被哪些视图所引用。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新增函数">新增函数<a class="hash-link" href="#新增函数" title="标题的直接链接">​</a></h3><ul><li><code>bitmap_min</code>, <code>bit_length</code></li><li><code>yearweek</code>, <code>week</code>, <code>makedate</code></li><li><code>percentile</code> 精确百分位函数</li><li><code>json_array</code>，<code>json_object</code>，<code>json_quote</code></li><li>支持为 <code>AES_ENCRYPT</code> 和 <code>AES_DECRYPT</code> 函数创建自定义公钥。</li><li>支持通过 <code>create alias function</code> 创建函数别名来组合多个函数。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h3><ul><li>支持访问 SSL 连接协议的ES外表。</li><li>支持在动态分区属性中指定热点分区的数量，热点分区将存储在 SSD 磁盘中。</li><li>支持通过 Broker Load 导入 Json 格式数据。</li><li>支持直接通过 libhdfs3 库访问 HDFS 进行数据的导入导出，而不需要 Broker 进程。</li><li>select into outfile 功能支持导出 Parquet 文件格式，并支持并行导出。</li><li>ODBC 外表支持 SQLServer。 </li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="致谢">致谢<a class="hash-link" href="#致谢" title="标题的直接链接">​</a></h2><p>Apache Doris(incubating) 0.15.0 Release 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是：</p><ul><li><a href="https://github.com/924060929" target="_blank" rel="noopener noreferrer">@924060929</a></li><li><a href="https://github.com/acelyc111" target="_blank" rel="noopener noreferrer">@acelyc111</a></li><li><a href="https://github.com/Aimiyoo" target="_blank" rel="noopener noreferrer">@Aimiyoo</a></li><li><a href="https://github.com/amosbird" target="_blank" rel="noopener noreferrer">@amosbird</a></li><li><a href="https://github.com/arthur-zhang" target="_blank" rel="noopener noreferrer">@arthur-zhang</a></li><li><a href="https://github.com/azurenake" target="_blank" rel="noopener noreferrer">@azurenake</a></li><li><a href="https://github.com/BiteTheDDDDt" target="_blank" rel="noopener noreferrer">@BiteTheDDDDt</a></li><li><a href="https://github.com/caiconghui" target="_blank" rel="noopener noreferrer">@caiconghui</a></li><li><a href="https://github.com/caneGuy" target="_blank" rel="noopener noreferrer">@caneGuy</a></li><li><a href="https://github.com/caoliang-web" target="_blank" rel="noopener noreferrer">@caoliang-web</a></li><li><a href="https://github.com/ccoffline" target="_blank" rel="noopener noreferrer">@ccoffline</a></li><li><a href="https://github.com/chaplinthink" target="_blank" rel="noopener noreferrer">@chaplinthink</a></li><li><a href="https://github.com/chovy-3012" target="_blank" rel="noopener noreferrer">@chovy-3012</a></li><li><a href="https://github.com/ChPi" target="_blank" rel="noopener noreferrer">@ChPi</a></li><li><a href="https://github.com/copperybean" target="_blank" rel="noopener noreferrer">@copperybean</a></li><li><a href="https://github.com/crazyleeyang" target="_blank" rel="noopener noreferrer">@crazyleeyang</a></li><li><a href="https://github.com/dh-cloud" target="_blank" rel="noopener noreferrer">@dh-cloud</a></li><li><a href="https://github.com/DinoZhang" target="_blank" rel="noopener noreferrer">@DinoZhang</a></li><li><a href="https://github.com/dixingxing0" target="_blank" rel="noopener noreferrer">@dixingxing0</a></li><li><a href="https://github.com/dohongdayi" target="_blank" rel="noopener noreferrer">@dohongdayi</a></li><li><a href="https://github.com/e0c9" target="_blank" rel="noopener noreferrer">@e0c9</a></li><li><a href="https://github.com/EmmyMiao87" target="_blank" rel="noopener noreferrer">@EmmyMiao87</a></li><li><a href="https://github.com/eyesmoons" target="_blank" rel="noopener noreferrer">@eyesmoons</a></li><li><a href="https://github.com/francisoliverlee" target="_blank" rel="noopener noreferrer">@francisoliverlee</a></li><li><a href="https://github.com/Gabriel39" target="_blank" rel="noopener noreferrer">@Gabriel39</a></li><li><a href="https://github.com/gaodayue" target="_blank" rel="noopener noreferrer">@gaodayue</a></li><li><a href="https://github.com/GoGoWen" target="_blank" rel="noopener noreferrer">@GoGoWen</a></li><li><a href="https://github.com/HappenLee" target="_blank" rel="noopener noreferrer">@HappenLee</a></li><li><a href="https://github.com/harveyyue" target="_blank" rel="noopener noreferrer">@harveyyue</a></li><li><a href="https://github.com/Henry2SS" target="_blank" rel="noopener noreferrer">@Henry2SS</a></li><li><a href="https://github.com/hf200012" target="_blank" rel="noopener noreferrer">@hf200012</a></li><li><a href="https://github.com/huangmengbin" target="_blank" rel="noopener noreferrer">@huangmengbin</a></li><li><a href="https://github.com/huozhanfeng" target="_blank" rel="noopener noreferrer">@huozhanfeng</a></li><li><a href="https://github.com/huzk8" target="_blank" rel="noopener noreferrer">@huzk8</a></li><li><a href="https://github.com/hxianshun" target="_blank" rel="noopener noreferrer">@hxianshun</a></li><li><a href="https://github.com/ikaruga4600" target="_blank" rel="noopener noreferrer">@ikaruga4600</a></li><li><a href="https://github.com/JameyWoo" target="_blank" rel="noopener noreferrer">@JameyWoo</a></li><li><a href="https://github.com/Jennifer88huang" target="_blank" rel="noopener noreferrer">@Jennifer88huang</a></li><li><a href="https://github.com/JinLiOnline" target="_blank" rel="noopener noreferrer">@JinLiOnline</a></li><li><a href="https://github.com/jinyuanlu" target="_blank" rel="noopener noreferrer">@jinyuanlu</a></li><li><a href="https://github.com/JNSimba" target="_blank" rel="noopener noreferrer">@JNSimba</a></li><li><a href="https://github.com/killxdcj" target="_blank" rel="noopener noreferrer">@killxdcj</a></li><li><a href="https://github.com/kuncle" target="_blank" rel="noopener noreferrer">@kuncle</a></li><li><a href="https://github.com/liutang123" target="_blank" rel="noopener noreferrer">@liutang123</a></li><li><a href="https://github.com/luozenglin" target="_blank" rel="noopener noreferrer">@luozenglin</a></li><li><a href="https://github.com/luzhijing" target="_blank" rel="noopener noreferrer">@luzhijing</a></li><li><a href="https://github.com/MarsXDM" target="_blank" rel="noopener noreferrer">@MarsXDM</a></li><li><a href="https://github.com/mh-boy" target="_blank" rel="noopener noreferrer">@mh-boy</a></li><li><a href="https://github.com/mk8310" target="_blank" rel="noopener noreferrer">@mk8310</a></li><li><a href="https://github.com/morningman" target="_blank" rel="noopener noreferrer">@morningman</a></li><li><a href="https://github.com/Myasuka" target="_blank" rel="noopener noreferrer">@Myasuka</a></li><li><a href="https://github.com/nimuyuhan" target="_blank" rel="noopener noreferrer">@nimuyuhan</a></li><li><a href="https://github.com/pan3793" target="_blank" rel="noopener noreferrer">@pan3793</a></li><li><a href="https://github.com/PatrickNicholas" target="_blank" rel="noopener noreferrer">@PatrickNicholas</a></li><li><a href="https://github.com/pengxiangyu" target="_blank" rel="noopener noreferrer">@pengxiangyu</a></li><li><a href="https://github.com/pierre94" target="_blank" rel="noopener noreferrer">@pierre94</a></li><li><a href="https://github.com/qidaye" target="_blank" rel="noopener noreferrer">@qidaye</a></li><li><a href="https://github.com/qzsee" target="_blank" rel="noopener noreferrer">@qzsee</a></li><li><a href="https://github.com/shiyi23" target="_blank" rel="noopener noreferrer">@shiyi23</a></li><li><a href="https://github.com/smallhibiscus" target="_blank" rel="noopener noreferrer">@smallhibiscus</a></li><li><a href="https://github.com/songenjie" target="_blank" rel="noopener noreferrer">@songenjie</a></li><li><a href="https://github.com/spaces-X" target="_blank" rel="noopener noreferrer">@spaces-X</a></li><li><a href="https://github.com/stalary" target="_blank" rel="noopener noreferrer">@stalary</a></li><li><a href="https://github.com/stdpain" target="_blank" rel="noopener noreferrer">@stdpain</a></li><li><a href="https://github.com/Stephen-Robin" target="_blank" rel="noopener noreferrer">@Stephen-Robin</a></li><li><a href="https://github.com/Sunt-ing" target="_blank" rel="noopener noreferrer">@Sunt-ing</a></li><li><a href="https://github.com/Taaang" target="_blank" rel="noopener noreferrer">@Taaang</a></li><li><a href="https://github.com/tarepanda1024" target="_blank" rel="noopener noreferrer">@tarepanda1024</a></li><li><a href="https://github.com/tianhui5" target="_blank" rel="noopener noreferrer">@tianhui5</a></li><li><a href="https://github.com/tinkerrrr" target="_blank" rel="noopener noreferrer">@tinkerrrr</a></li><li><a href="https://github.com/TobKed" target="_blank" rel="noopener noreferrer">@TobKed</a></li><li><a href="https://github.com/ucasfl" target="_blank" rel="noopener noreferrer">@ucasfl</a></li><li><a href="https://github.com/Userwhite" target="_blank" rel="noopener noreferrer">@Userwhite</a></li><li><a href="https://github.com/vinson0526" target="_blank" rel="noopener noreferrer">@vinson0526</a></li><li><a href="https://github.com/wangbo" target="_blank" rel="noopener noreferrer">@wangbo</a></li><li><a href="https://github.com/wangliansong" target="_blank" rel="noopener noreferrer">@wangliansong</a></li><li><a href="https://github.com/wangshuo128" target="_blank" rel="noopener noreferrer">@wangshuo128</a></li><li><a href="https://github.com/weajun" target="_blank" rel="noopener noreferrer">@weajun</a></li><li><a href="https://github.com/weihongkai2008" target="_blank" rel="noopener noreferrer">@weihongkai2008</a></li><li><a href="https://github.com/weizuo93" target="_blank" rel="noopener noreferrer">@weizuo93</a></li><li><a href="https://github.com/WindyGao" target="_blank" rel="noopener noreferrer">@WindyGao</a></li><li><a href="https://github.com/wunan1210" target="_blank" rel="noopener noreferrer">@wunan1210</a></li><li><a href="https://github.com/wuyunfeng" target="_blank" rel="noopener noreferrer">@wuyunfeng</a></li><li><a href="https://github.com/xhmz" target="_blank" rel="noopener noreferrer">@xhmz</a></li><li><a href="https://github.com/xiaokangguo" target="_blank" rel="noopener noreferrer">@xiaokangguo</a></li><li><a href="https://github.com/xiaoxiaopan118" target="_blank" rel="noopener noreferrer">@xiaoxiaopan118</a></li><li><a href="https://github.com/xinghuayu007" target="_blank" rel="noopener noreferrer">@xinghuayu007</a></li><li><a href="https://github.com/xinyiZzz" target="_blank" rel="noopener noreferrer">@xinyiZzz</a></li><li><a href="https://github.com/xuliuzhe" target="_blank" rel="noopener noreferrer">@xuliuzhe</a></li><li><a href="https://github.com/xxiao2018" target="_blank" rel="noopener noreferrer">@xxiao2018</a></li><li><a href="https://github.com/xy720" target="_blank" rel="noopener noreferrer">@xy720</a></li><li><a href="https://github.com/yangzhg" target="_blank" rel="noopener noreferrer">@yangzhg</a></li><li><a href="https://github.com/yx91490" target="_blank" rel="noopener noreferrer">@yx91490</a></li><li><a href="https://github.com/zbtzbtzbt" target="_blank" rel="noopener noreferrer">@zbtzbtzbt</a></li><li><a href="https://github.com/zenoyang" target="_blank" rel="noopener noreferrer">@zenoyang</a></li><li><a href="https://github.com/zh0122" target="_blank" rel="noopener noreferrer">@zh0122</a></li><li><a href="https://github.com/zhangboya1" target="_blank" rel="noopener noreferrer">@zhangboya1</a></li><li><a href="https://github.com/zhangstar333" target="_blank" rel="noopener noreferrer">@zhangstar333</a></li><li><a href="https://github.com/zuochunwei" target="_blank" rel="noopener noreferrer">@zuochunwei</a></li></ul>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
</feed>