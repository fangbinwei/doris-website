"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[42793],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},45676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"GET LABEL STATE",language:"en"},s=void 0,l={unversionedId:"sql-reference/sql-statements/Data-Manipulation/GET-LABEL-STATE",id:"version-0.15/sql-reference/sql-statements/Data-Manipulation/GET-LABEL-STATE",title:"GET LABEL STATE",description:"\x3c!--",source:"@site/versioned_docs/version-0.15/sql-reference/sql-statements/Data-Manipulation/GET-LABEL-STATE.md",sourceDirName:"sql-reference/sql-statements/Data-Manipulation",slug:"/sql-reference/sql-statements/Data-Manipulation/GET-LABEL-STATE",permalink:"/zh-CN/docs/0.15/sql-reference/sql-statements/Data-Manipulation/GET-LABEL-STATE",draft:!1,tags:[],version:"0.15",frontMatter:{title:"GET LABEL STATE",language:"en"},sidebar:"docs",previous:{title:"EXPORT",permalink:"/zh-CN/docs/0.15/sql-reference/sql-statements/Data-Manipulation/EXPORT"},next:{title:"GROUP BY",permalink:"/zh-CN/docs/0.15/sql-reference/sql-statements/Data-Manipulation/GROUP-BY"}},i={},c=[{value:"Description",id:"description",level:2},{value:"keyword",id:"keyword",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get-label-state"},"GET LABEL STATE"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"NAME:\nget_label_state: get label's state"),(0,a.kt)("p",null,"SYNOPSIS\ncurl -u user:passwd http://host:port /api /{db}/{label}// u state"),(0,a.kt)("p",null,"DESCRIPTION\nThis command is used to view the transaction status of a Label"),(0,a.kt)("p",null,"RETURN VALUES\nAfter execution, the relevant content of this import will be returned in Json format. Currently includes the following fields\nLabel: The imported label, if not specified, is a uuid.\nStatus: Whether this command was successfully executed or not, Success indicates successful execution\nMessage: Specific execution information\nState: It only makes sense if Status is Success\nUNKNOWN: No corresponding Label was found\nPREPARE: The corresponding transaction has been prepared, but not yet committed\nCOMMITTED: The transaction has been committed and cannot be canceled\nVISIBLE: Transaction submission, and data visible, cannot be canceled\nABORTED: The transaction has been ROLLBACK and the import has failed."),(0,a.kt)("p",null,"ERRORS"),(0,a.kt)("p",null,"'35;'35; example"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Obtain the state of testDb, testLabel\ncurl -u root http://host:port /api /testDb /testLabel / u state")),(0,a.kt)("h2",{id:"keyword"},"keyword"),(0,a.kt)("p",null,"GET, LABEL, STATE"))}p.isMDXComponent=!0}}]);