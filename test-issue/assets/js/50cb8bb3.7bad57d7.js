"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[15912],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19849:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={title:"Compile and deploy",language:"en"},i=void 0,s={unversionedId:"ecosystem/doris-manager/compiling-deploying",id:"ecosystem/doris-manager/compiling-deploying",title:"Compile and deploy",description:"\x3c!--",source:"@site/docs/ecosystem/doris-manager/compiling-deploying.md",sourceDirName:"ecosystem/doris-manager",slug:"/ecosystem/doris-manager/compiling-deploying",permalink:"/docs/ecosystem/doris-manager/compiling-deploying",draft:!1,tags:[],version:"current",frontMatter:{title:"Compile and deploy",language:"en"},sidebar:"docs",previous:{title:"CloudCanal Data Import",permalink:"/docs/ecosystem/cloudcanal"},next:{title:"Initialize",permalink:"/docs/ecosystem/doris-manager/initializing"}},l={},c=[{value:"Compile",id:"compile",level:2},{value:"Run",id:"run",level:2},{value:"1 Configuration",id:"1-configuration",level:3},{value:"2 Start",id:"2-start",level:3},{value:"3 Use",id:"3-use",level:3}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compile-and-deploy"},"Compile and deploy"),(0,a.kt)("h2",{id:"compile"},"Compile"),(0,a.kt)("p",null,"The build.sh script directly under the manager path"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd incubator-doris-manager\nsh build.sh\n")),(0,a.kt)("p",null,"After the compilation is completed, the output directory of the installation package will be generated under the manager path. The directory structure is as follows"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u251c\u2500\u2500 agent //agent directory\n\u2502 \u251c\u2500\u2500 bin\n\u2502 \u2502 \u251c\u2500\u2500 agent_start.sh\n\u2502 \u2502 \u251c\u2500\u2500 agent_stop.sh\n\u2502 \u2502 \u2514\u2500\u2500 download_doris.sh\n\u2502 \u251c\u2500\u2500 config\n\u2502 \u2502 \u2514\u2500\u2500 application.properties\n\u2502 \u2514\u2500\u2500 lib\n\u2502 \u2514\u2500\u2500 dm-agent.jar\n\u2514\u2500\u2500 server //server directory\n     \u251c\u2500\u2500 bin\n     \u2502 \u251c\u2500\u2500 start_manager.sh   //Doris Manager startup script\n     \u2502 \u2514\u2500\u2500 stop_manager.sh    //Doris Manager stop script\n     \u251c\u2500\u2500 conf\n     \u2502 \u2514\u2500\u2500 manager.conf       //Doris Manager configuration file\n     \u251c\u2500\u2500 lib\n     \u2502 \u2514\u2500\u2500 doris-manager.jar  //Doris Manager's running package doris-manager.jar\n     \u2514\u2500\u2500 web-resource\n")),(0,a.kt)("h2",{id:"run"},"Run"),(0,a.kt)("h3",{id:"1-configuration"},"1 Configuration"),(0,a.kt)("p",null,"Modify the configuration file ",(0,a.kt)("inlineCode",{parentName:"p"},"server/conf/manager.conf"),", and focus on the following configuration items:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-$xslt"},"The service's startup http port\nSTUDIO_PORT=8080\n\nThe type of database where the backend data is stored, including mysql/h2/postgresql. The default is to support mysql\nMB_DB_TYPE=mysql\n\nDatabase connection information\nIf it is a configured h2 type database, you do not need to configure this information, and the data will be stored locally as a local file\nh2 data file storage path, directly stored in the current path by default\nH2_FILE_PATH=\n\nIf it is mysql/postgresql, you need to configure the following connection information\ndatabase address\nMB_DB_HOST=\n\ndatabase port\nMB_DB_PORT=3306\n\ndatabase access port\nMB_DB_USER=\n\nDatabase access password\nMB_DB_PASS=\n\ndatabase name of the database\nMB_DB_DBNAME=\n\nThe path where the service runs, which is directly stored in the log folder of the current running path by default.\nLOG_PATH=\n\nThe length of the waiting queue of the web container, the default is 100. The queue is also used as a buffer pool, but it cannot be infinitely long. It not only consumes memory, but also consumes CPU when entering the queue.\nWEB_ACCEPT_COUNT=100\n\nThe maximum number of worker threads for the web container, 200 by default. (usually the number of CPU cores * 200)\nWEB_MAX_THREADS=200\n\nThe minimum number of working idle threads for the web container, the default is 10. (Appropriately increase some to cope with the sudden increase in traffic)\nWEB_MIN_SPARE_THREADS=10\n\nThe maximum number of connections for the web container, the default is 10000. (Appropriately increase some to cope with the sudden increase in traffic)\nWEB_MAX_CONNECTIONS=10000\n\nThe maximum number of connections to access the database connection pool, the default is 10\nDB_MAX_POOL_SIZE=20\n\nThe minimum number of idle connections to access the database connection pool, the default is 10\nDB_MIN_IDLE=10\n")),(0,a.kt)("h3",{id:"2-start"},"2 Start"),(0,a.kt)("p",null,"After the configuration modification is completed, start doris manger"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd server\nsh bin/start_manager.sh\n")),(0,a.kt)("p",null,"Check the logs in the logs to determine whether the program started successfully"),(0,a.kt)("h3",{id:"3-use"},"3 Use"),(0,a.kt)("p",null,"Doris Manager presets a super administrator user with the following information:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-$xslt"},"Username: Admin\nPassword: Admin@123\n")),(0,a.kt)("p",null,"To ensure safe use, please change your password after logging in!"))}p.isMDXComponent=!0}}]);