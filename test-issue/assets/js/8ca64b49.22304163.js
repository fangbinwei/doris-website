"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[15980],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=r,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const o={title:"Doris BE Storage Layer Benchmark Tool",language:"en"},i=void 0,l={unversionedId:"developer-guide/benchmark-tool",id:"developer-guide/benchmark-tool",title:"Doris BE Storage Layer Benchmark Tool",description:"\x3c!--",source:"@site/community/developer-guide/benchmark-tool.md",sourceDirName:"developer-guide",slug:"/developer-guide/benchmark-tool",permalink:"/community/developer-guide/benchmark-tool",draft:!1,tags:[],version:"current",frontMatter:{title:"Doris BE Storage Layer Benchmark Tool",language:"en"},sidebar:"community",previous:{title:"Doris Docker quick build development environment",permalink:"/community/developer-guide/docker-dev"},next:{title:"Setting FE dev env - Eclipse",permalink:"/community/developer-guide/fe-eclipse-dev"}},s={},d=[{value:"usage",id:"usage",level:2},{value:"Compilation",id:"compilation",level:2},{value:"operator",id:"operator",level:2},{value:"Use randomly generated data set for segment read test",id:"use-randomly-generated-data-set-for-segment-read-test",level:4},{value:"Use randomly generated data set for segment write test",id:"use-randomly-generated-data-set-for-segment-write-test",level:4},{value:"Use the data set imported from the file for segment read test",id:"use-the-data-set-imported-from-the-file-for-segment-read-test",level:4},{value:"Use the data set imported from the file for segment write test",id:"use-the-data-set-imported-from-the-file-for-segment-write-test",level:4},{value:"Use randomly generated data set for page dictionary encoding test",id:"use-randomly-generated-data-set-for-page-dictionary-encoding-test",level:4},{value:"Use randomly generated data set for page dictionary decoding test",id:"use-randomly-generated-data-set-for-page-dictionary-decoding-test",level:4},{value:"Custom test",id:"custom-test",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"doris-be-storage-layer-benchmark-tool"},"Doris BE Storage Layer Benchmark Tool"),(0,r.kt)("h2",{id:"usage"},"usage"),(0,r.kt)("p",null,"It can be used to test the performance of some parts of the BE storage layer (for example, segment, page). According to the input data, the designated object is constructed, and the google benchmark is used for performance testing. "),(0,r.kt)("h2",{id:"compilation"},"Compilation"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To ensure that the environment has been able to successfully compile the Doris ontology, you can refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/install/source-install/compilation"},"Installation and deployment"),"\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Execute",(0,r.kt)("inlineCode",{parentName:"p"},"run-be-ut.sh"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The compiled executable file is located in ",(0,r.kt)("inlineCode",{parentName:"p"},"./be/ut_build_ASAN/test/tools/benchmark_tool")))),(0,r.kt)("h2",{id:"operator"},"operator"),(0,r.kt)("h4",{id:"use-randomly-generated-data-set-for-segment-read-test"},"Use randomly generated data set for segment read test"),(0,r.kt)("p",null,"The data set will be used to write a ",(0,r.kt)("inlineCode",{parentName:"p"},"segment")," file first, and then the time-consuming scan of the entire ",(0,r.kt)("inlineCode",{parentName:"p"},"segment")," will be counted. "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"./benchmark_tool --operation=SegmentScan --column_type=int,varchar --rows_number=10000 --iterations=0")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"column_type")," here can set the schema, the column type of the ",(0,r.kt)("inlineCode",{parentName:"p"},"segment")," layer currently supports ",(0,r.kt)("inlineCode",{parentName:"p"},"int, char, varchar, string"),", the length of the ",(0,r.kt)("inlineCode",{parentName:"p"},"char")," type is ",(0,r.kt)("inlineCode",{parentName:"p"},"8"),", and both ",(0,r.kt)("inlineCode",{parentName:"p"},"varchar")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," types have length restrictions Is the maximum value. The default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"int,varchar"),". "),(0,r.kt)("p",null,"The data set is generated according to the following rules. "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"int: Random in ","[1,1000000]",". ")),(0,r.kt)("p",null,"The data character set of string type is uppercase and lowercase English letters, and the length varies according to the type. "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"char: Length random in ","[1,8]","\u3002\nvarchar: Length random in ","[1,128]","\u3002\nstring: Length random in ","[1,100000]","\u3002")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"rows_number")," indicates the number of rows of data, the default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"10000"),". "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"iterations")," indicates the number of iterations, the benchmark will repeat the test, and then calculate the average time. If ",(0,r.kt)("inlineCode",{parentName:"p"},"iterations")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", it means that the number of iterations is automatically selected by the benchmark. The default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"10"),". "),(0,r.kt)("h4",{id:"use-randomly-generated-data-set-for-segment-write-test"},"Use randomly generated data set for segment write test"),(0,r.kt)("p",null,"Perform time-consuming statistics on the process of adding data sets to segments and writing them to disk. "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"./benchmark_tool --operation=SegmentWrite")),(0,r.kt)("h4",{id:"use-the-data-set-imported-from-the-file-for-segment-read-test"},"Use the data set imported from the file for segment read test"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"./benchmark_tool --operation=SegmentScanByFile --input_file=./sample.dat")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"input_file")," here is the imported data set file.\nThe first row of the data set file defines the schema, and each row corresponds to a row of data, and each data is separated by ",(0,r.kt)("inlineCode",{parentName:"p"},","),". "),(0,r.kt)("p",null,"Example: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"int,char,varchar\n123,hello,world\n321,good,bye\n")),(0,r.kt)("p",null,"The type support is also ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"char"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"varchar"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),". Note that the data length of the ",(0,r.kt)("inlineCode",{parentName:"p"},"char")," type cannot exceed 8. "),(0,r.kt)("h4",{id:"use-the-data-set-imported-from-the-file-for-segment-write-test"},"Use the data set imported from the file for segment write test"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"./benchmark_tool --operation=SegmentWriteByFile --input_file=./sample.dat")),(0,r.kt)("h4",{id:"use-randomly-generated-data-set-for-page-dictionary-encoding-test"},"Use randomly generated data set for page dictionary encoding test"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"./benchmark_tool --operation=BinaryDictPageEncode --rows_number=10000 --iterations=0")),(0,r.kt)("p",null,"Randomly generate varchar with a length between ","[1,8]",", and perform time-consuming statistics on encoding. "),(0,r.kt)("h4",{id:"use-randomly-generated-data-set-for-page-dictionary-decoding-test"},"Use randomly generated data set for page dictionary decoding test"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"./benchmark_tool --operation=BinaryDictPageDecode")),(0,r.kt)("p",null,"Randomly generate varchar with a length between ","[1,8]"," and encode, and perform time-consuming statistics on decoding. "),(0,r.kt)("h2",{id:"custom-test"},"Custom test"),(0,r.kt)("p",null,"Here, users are supported to use their own functions for performance testing, which can be implemented in ",(0,r.kt)("inlineCode",{parentName:"p"},"/be/test/tools/benchmark_tool.cpp"),". "),(0,r.kt)("p",null,"For example: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void custom_run_plus() {\n    int p = 100000;\n    int q = 0;\n    while (p--) {\n        q++;\n        if (UNLIKELY(q == 1024)) q = 0;\n    }\n}\nvoid custom_run_mod() {\n    int p = 100000;\n    int q = 0;\n    while (p--) {\n        q++;\n        if (q %= 1024) q = 0;\n    }\n}\n")),(0,r.kt)("p",null,"You can join the test by registering ",(0,r.kt)("inlineCode",{parentName:"p"},"CustomBenchmark"),". "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'benchmarks.emplace_back(\n                    new doris::CustomBenchmark("custom_run_plus", 0,\n                        custom_init, custom_run_plus));\nbenchmarks.emplace_back(\n                    new doris::CustomBenchmark("custom_run_mod", 0,\n                        custom_init, custom_run_mod));\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_init")," here is the initialization step of each round of testing (not counted as time-consuming). If the user has an object that needs to be initialized, it can be implemented by a derived class of ",(0,r.kt)("inlineCode",{parentName:"p"},"CustomBenchmark"),".\nAfter running, the results are as follows: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2021-08-30T10:29:35+08:00\nRunning ./benchmark_tool\nRun on (96 X 3100.75 MHz CPU s)\nCPU Caches:\n  L1 Data 32 KiB (x48)\n  L1 Instruction 32 KiB (x48)\n  L2 Unified 1024 KiB (x48)\n  L3 Unified 33792 KiB (x2)\nLoad Average: 0.55, 0.53, 0.39\n----------------------------------------------------------\nBenchmark                Time             CPU   Iterations\n----------------------------------------------------------\ncustom_run_plus      0.812 ms        0.812 ms          861\ncustom_run_mod        1.30 ms         1.30 ms          539\n")))}m.isMDXComponent=!0}}]);